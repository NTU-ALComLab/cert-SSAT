SSAT LOG: Running ../../tools/SharpSSAT -l -p -s ./tree-exa2-45.sdimacs
SSAT LOG: Time limit 1000 seconds
Solving ./tree-exa2-45.sdimacs
variables (all/used/free): 	90/90/0
clauses (all/long/binary/unit): 47/43/3/1

Preprocessing .. DONE
variables (all/used/free): 	90/90/0
clauses (all/long/binary/unit): 46/43/3/0
Maximum cache size:	44921 MB

End of Solving
Start Generating Certificate...


variables (total / active / free)	90/90/0
clauses (removed) 			47 (0)
decisions 				184
conflicts 				1
conflict clauses (all/bin/unit) 	0/0/1

cache size 7MB	
cache (stores / hits) 			185/151
cache miss rate 0%
avg. variable count (stores / hits) 	41.5946/35.0927

number of nodes in trace 	190
number of edges in trace 	369

# satisfying probability = 1

# END

time: 0.002117s

upper trace written to ./tree-exa2-45_up.nnf
lower trace written to ./tree-exa2-45_low.nnf
maximum satisfying probability written to ./tree-exa2-45.prob
SSAT LOG: Elapsed time = 0.003 seconds
SSAT OUTCOME: normal
EVAL LOG: Running ../../src/evalSSAT ./tree-exa2-45.sdimacs ./tree-exa2-45_up.nnf ./tree-exa2-45_low.nnf ./tree-exa2-45.prob
EVAL LOG: Time limit 1000 seconds
c Read D4 NNF file with 556 nodes (187 explicit) and 369 edges
c Read D4 NNF file with 556 nodes (187 explicit) and 369 edges
EVAL LOG: Elapsed time = 0.001 seconds
EVAL OUTCOME: normal
GEN LOG: Running ../../src/cpog-gen -v 5 -1 -S -C 2147483647 -L d2p.log ./tree-exa2-45.sdimacs ./tree-exa2-45_low.nnf ./tree-exa2-45_low.cpog
GEN LOG: Time limit 2500 seconds
c GEN: Program options
c GEN:   Multi-literal:   yes
c GEN:   Use lemmas:      yes
c GEN:   Delete files:    yes
c GEN:   One-sided:       yes
c GEN:   Monolithic mode: no
c GEN:   DRAT threshold:  1000
c GEN:   Clause limit:    2147483647
c GEN:   BCP limit:       1
c GEN: Time = 0.00.  Read input file with 89 variables and 47 clauses
c Unit literal -45 justified by input clause #1
c BCP Pass 1.  Active clauses:c  2c  3c  4c  5c  6c  7c  8c  9c  10c  11c  12c  13c  14c  15c  16c  17c  18c  19c  20c  21c  22c  23c  24c  25c  26c  27c  28c  29c  30c  31c  32c  33c  34c  35c  36c  37c  38c  39c  40c  41c  42c  43c  44c  45c  46c  47c 
c   Checking clause #2: -43 -44 45 -88 89 0
c   Unit literals:c  -45c 
c     Potential unit -43
c     Additional unassigned literal -44
c     Still active
c   Checking clause #3: -42 -43 44 -87 88 0
c   Unit literals:c  -45c 
c     Potential unit -42
c     Additional unassigned literal -43
c     Still active
c   Checking clause #4: -41 -42 43 -86 87 0
c   Unit literals:c  -45c 
c     Potential unit -41
c     Additional unassigned literal -42
c     Still active
c   Checking clause #5: -40 -41 42 -85 86 0
c   Unit literals:c  -45c 
c     Potential unit -40
c     Additional unassigned literal -41
c     Still active
c   Checking clause #6: -39 -40 41 -84 85 0
c   Unit literals:c  -45c 
c     Potential unit -39
c     Additional unassigned literal -40
c     Still active
c   Checking clause #7: -38 -39 40 -83 84 0
c   Unit literals:c  -45c 
c     Potential unit -38
c     Additional unassigned literal -39
c     Still active
c   Checking clause #8: -37 -38 39 -82 83 0
c   Unit literals:c  -45c 
c     Potential unit -37
c     Additional unassigned literal -38
c     Still active
c   Checking clause #9: -36 -37 38 -81 82 0
c   Unit literals:c  -45c 
c     Potential unit -36
c     Additional unassigned literal -37
c     Still active
c   Checking clause #10: -35 -36 37 -80 81 0
c   Unit literals:c  -45c 
c     Potential unit -35
c     Additional unassigned literal -36
c     Still active
c   Checking clause #11: -34 -35 36 -79 80 0
c   Unit literals:c  -45c 
c     Potential unit -34
c     Additional unassigned literal -35
c     Still active
c   Checking clause #12: -33 -34 35 -78 79 0
c   Unit literals:c  -45c 
c     Potential unit -33
c     Additional unassigned literal -34
c     Still active
c   Checking clause #13: -32 -33 34 -77 78 0
c   Unit literals:c  -45c 
c     Potential unit -32
c     Additional unassigned literal -33
c     Still active
c   Checking clause #14: -31 -32 33 -76 77 0
c   Unit literals:c  -45c 
c     Potential unit -31
c     Additional unassigned literal -32
c     Still active
c   Checking clause #15: -30 -31 32 -75 76 0
c   Unit literals:c  -45c 
c     Potential unit -30
c     Additional unassigned literal -31
c     Still active
c   Checking clause #16: -29 -30 31 -74 75 0
c   Unit literals:c  -45c 
c     Potential unit -29
c     Additional unassigned literal -30
c     Still active
c   Checking clause #17: -28 -29 30 -73 74 0
c   Unit literals:c  -45c 
c     Potential unit -28
c     Additional unassigned literal -29
c     Still active
c   Checking clause #18: -27 -28 29 -72 73 0
c   Unit literals:c  -45c 
c     Potential unit -27
c     Additional unassigned literal -28
c     Still active
c   Checking clause #19: -26 -27 28 -71 72 0
c   Unit literals:c  -45c 
c     Potential unit -26
c     Additional unassigned literal -27
c     Still active
c   Checking clause #20: -25 -26 27 -70 71 0
c   Unit literals:c  -45c 
c     Potential unit -25
c     Additional unassigned literal -26
c     Still active
c   Checking clause #21: -24 -25 26 -69 70 0
c   Unit literals:c  -45c 
c     Potential unit -24
c     Additional unassigned literal -25
c     Still active
c   Checking clause #22: -23 -24 25 -68 69 0
c   Unit literals:c  -45c 
c     Potential unit -23
c     Additional unassigned literal -24
c     Still active
c   Checking clause #23: -22 -23 24 -67 68 0
c   Unit literals:c  -45c 
c     Potential unit -22
c     Additional unassigned literal -23
c     Still active
c   Checking clause #24: -21 -22 23 -66 67 0
c   Unit literals:c  -45c 
c     Potential unit -21
c     Additional unassigned literal -22
c     Still active
c   Checking clause #25: -20 -21 22 -65 66 0
c   Unit literals:c  -45c 
c     Potential unit -20
c     Additional unassigned literal -21
c     Still active
c   Checking clause #26: -19 -20 21 -64 65 0
c   Unit literals:c  -45c 
c     Potential unit -19
c     Additional unassigned literal -20
c     Still active
c   Checking clause #27: -18 -19 20 -63 64 0
c   Unit literals:c  -45c 
c     Potential unit -18
c     Additional unassigned literal -19
c     Still active
c   Checking clause #28: -17 -18 19 -62 63 0
c   Unit literals:c  -45c 
c     Potential unit -17
c     Additional unassigned literal -18
c     Still active
c   Checking clause #29: -16 -17 18 -61 62 0
c   Unit literals:c  -45c 
c     Potential unit -16
c     Additional unassigned literal -17
c     Still active
c   Checking clause #30: -15 -16 17 -60 61 0
c   Unit literals:c  -45c 
c     Potential unit -15
c     Additional unassigned literal -16
c     Still active
c   Checking clause #31: -14 -15 16 -59 60 0
c   Unit literals:c  -45c 
c     Potential unit -14
c     Additional unassigned literal -15
c     Still active
c   Checking clause #32: -13 -14 15 -58 59 0
c   Unit literals:c  -45c 
c     Potential unit -13
c     Additional unassigned literal -14
c     Still active
c   Checking clause #33: -12 -13 14 -57 58 0
c   Unit literals:c  -45c 
c     Potential unit -12
c     Additional unassigned literal -13
c     Still active
c   Checking clause #34: -11 -12 13 -56 57 0
c   Unit literals:c  -45c 
c     Potential unit -11
c     Additional unassigned literal -12
c     Still active
c   Checking clause #35: -10 -11 12 -55 56 0
c   Unit literals:c  -45c 
c     Potential unit -10
c     Additional unassigned literal -11
c     Still active
c   Checking clause #36: -9 -10 11 -54 55 0
c   Unit literals:c  -45c 
c     Potential unit -9
c     Additional unassigned literal -10
c     Still active
c   Checking clause #37: -8 -9 10 -53 54 0
c   Unit literals:c  -45c 
c     Potential unit -8
c     Additional unassigned literal -9
c     Still active
c   Checking clause #38: -7 -8 9 -52 53 0
c   Unit literals:c  -45c 
c     Potential unit -7
c     Additional unassigned literal -8
c     Still active
c   Checking clause #39: -6 -7 8 -51 52 0
c   Unit literals:c  -45c 
c     Potential unit -6
c     Additional unassigned literal -7
c     Still active
c   Checking clause #40: -5 -6 7 -50 51 0
c   Unit literals:c  -45c 
c     Potential unit -5
c     Additional unassigned literal -6
c     Still active
c   Checking clause #41: -4 -5 6 -49 50 0
c   Unit literals:c  -45c 
c     Potential unit -4
c     Additional unassigned literal -5
c     Still active
c   Checking clause #42: -3 -4 5 -48 49 0
c   Unit literals:c  -45c 
c     Potential unit -3
c     Additional unassigned literal -4
c     Still active
c   Checking clause #43: -2 -3 4 -47 48 0
c   Unit literals:c  -45c 
c     Potential unit -2
c     Additional unassigned literal -3
c     Still active
c   Checking clause #44: -1 -2 3 -46 47 0
c   Unit literals:c  -45c 
c     Potential unit -1
c     Additional unassigned literal -2
c     Still active
c   Checking clause #45: 1 2 0
c   Unit literals:c  -45c 
c     Potential unit 1
c     Additional unassigned literal 2
c     Still active
c   Checking clause #46: -1 2 0
c   Unit literals:c  -45c 
c     Potential unit -1
c     Additional unassigned literal 2
c     Still active
c   Checking clause #47: 1 -2 0
c   Unit literals:c  -45c 
c     Potential unit 1
c     Additional unassigned literal -2
c     Still active
c Line #1.  Created POG node FALSE number 90 from NNF node 1
c Line #2.  Created POG node TRUE number 91 from NNF node 2
c Line #3.  Created POG node OR number 92 from NNF node 3
c Line #4.  Created POG node OR number 93 from NNF node 4
c Line #5.  Created POG node OR number 94 from NNF node 5
c Line #6.  Created POG node OR number 95 from NNF node 6
c Line #7.  Created POG node OR number 96 from NNF node 7
c Line #8.  Created POG node OR number 97 from NNF node 8
c Line #9.  Created POG node OR number 98 from NNF node 9
c Line #10.  Created POG node OR number 99 from NNF node 10
c Line #11.  Created POG node OR number 100 from NNF node 11
c Line #12.  Created POG node OR number 101 from NNF node 12
c Line #13.  Created POG node OR number 102 from NNF node 13
c Line #14.  Created POG node OR number 103 from NNF node 14
c Line #15.  Created POG node OR number 104 from NNF node 15
c Line #16.  Created POG node OR number 105 from NNF node 16
c Line #17.  Created POG node OR number 106 from NNF node 17
c Line #18.  Created POG node OR number 107 from NNF node 18
c Line #19.  Created POG node OR number 108 from NNF node 19
c Line #20.  Created POG node OR number 109 from NNF node 20
c Line #21.  Created POG node OR number 110 from NNF node 21
c Line #22.  Created POG node OR number 111 from NNF node 22
c Line #23.  Created POG node OR number 112 from NNF node 23
c Line #24.  Created POG node OR number 113 from NNF node 24
c Line #25.  Created POG node OR number 114 from NNF node 25
c Line #26.  Created POG node OR number 115 from NNF node 26
c Line #27.  Created POG node OR number 116 from NNF node 27
c Line #28.  Created POG node OR number 117 from NNF node 28
c Line #29.  Created POG node OR number 118 from NNF node 29
c Line #30.  Created POG node OR number 119 from NNF node 30
c Line #31.  Created POG node OR number 120 from NNF node 31
c Line #32.  Created POG node OR number 121 from NNF node 32
c Line #33.  Created POG node OR number 122 from NNF node 33
c Line #34.  Created POG node OR number 123 from NNF node 34
c Line #35.  Created POG node OR number 124 from NNF node 35
c Line #36.  Created POG node OR number 125 from NNF node 36
c Line #37.  Created POG node OR number 126 from NNF node 37
c Line #38.  Created POG node OR number 127 from NNF node 38
c Line #39.  Created POG node OR number 128 from NNF node 39
c Line #40.  Created POG node OR number 129 from NNF node 40
c Line #41.  Created POG node OR number 130 from NNF node 41
c Line #42.  Created POG node OR number 131 from NNF node 42
c Line #43.  Created POG node OR number 132 from NNF node 43
c Line #44.  Created POG node OR number 133 from NNF node 44
c Line #45.  Created POG node OR number 134 from NNF node 45
c Line #46.  Created POG node OR number 135 from NNF node 46
c Line #47.  Created POG node OR number 136 from NNF node 47
c Line #48.  Created POG node OR number 137 from NNF node 48
c Line #49.  Created POG node OR number 138 from NNF node 49
c Line #50.  Created POG node OR number 139 from NNF node 50
c Line #51.  Created POG node OR number 140 from NNF node 51
c Line #52.  Created POG node OR number 141 from NNF node 52
c Line #53.  Created POG node OR number 142 from NNF node 53
c Line #54.  Created POG node OR number 143 from NNF node 54
c Line #55.  Created POG node OR number 144 from NNF node 55
c Line #56.  Created POG node OR number 145 from NNF node 56
c Line #57.  Created POG node OR number 146 from NNF node 57
c Line #58.  Created POG node OR number 147 from NNF node 58
c Line #59.  Created POG node OR number 148 from NNF node 59
c Line #60.  Created POG node OR number 149 from NNF node 60
c Line #61.  Created POG node OR number 150 from NNF node 61
c Line #62.  Created POG node OR number 151 from NNF node 62
c Line #63.  Created POG node OR number 152 from NNF node 63
c Line #64.  Created POG node OR number 153 from NNF node 64
c Line #65.  Created POG node OR number 154 from NNF node 65
c Line #66.  Created POG node OR number 155 from NNF node 66
c Line #67.  Created POG node OR number 156 from NNF node 67
c Line #68.  Created POG node OR number 157 from NNF node 68
c Line #69.  Created POG node OR number 158 from NNF node 69
c Line #70.  Created POG node OR number 159 from NNF node 70
c Line #71.  Created POG node OR number 160 from NNF node 71
c Line #72.  Created POG node OR number 161 from NNF node 72
c Line #73.  Created POG node OR number 162 from NNF node 73
c Line #74.  Created POG node OR number 163 from NNF node 74
c Line #75.  Created POG node OR number 164 from NNF node 75
c Line #76.  Created POG node OR number 165 from NNF node 76
c Line #77.  Created POG node OR number 166 from NNF node 77
c Line #78.  Created POG node OR number 167 from NNF node 78
c Line #79.  Created POG node OR number 168 from NNF node 79
c Line #80.  Created POG node OR number 169 from NNF node 80
c Line #81.  Created POG node OR number 170 from NNF node 81
c Line #82.  Created POG node OR number 171 from NNF node 82
c Line #83.  Created POG node OR number 172 from NNF node 83
c Line #84.  Created POG node OR number 173 from NNF node 84
c Line #85.  Created POG node OR number 174 from NNF node 85
c Line #86.  Created POG node OR number 175 from NNF node 86
c Line #87.  Created POG node OR number 176 from NNF node 87
c Line #88.  Created POG node OR number 177 from NNF node 88
c Line #89. Created POG AND Node 178 to hold literals between NNF nodes 88 and 2
c Line #89.  Adding edge between POG nodes 177 and 178
c Line #90. Created POG AND Node 179 to hold literals between NNF nodes 88 and 2
c Line #90.  Adding edge between POG nodes 177 and 179
c Line #91. Created POG AND Node 180 to hold literals between NNF nodes 87 and 88
c Line #91.  Adding edge between POG nodes 176 and 180
c Line #92. Created POG AND Node 181 to hold literals between NNF nodes 87 and 2
c Line #92.  Adding edge between POG nodes 176 and 181
c Line #93. Created POG AND Node 182 to hold literals between NNF nodes 86 and 87
c Line #93.  Adding edge between POG nodes 175 and 182
c Line #94.  Created POG node OR number 183 from NNF node 89
c Line #95. Created POG AND Node 184 to hold literals between NNF nodes 89 and 2
c Line #95.  Adding edge between POG nodes 183 and 184
c Line #96. Created POG AND Node 185 to hold literals between NNF nodes 89 and 2
c Line #96.  Adding edge between POG nodes 183 and 185
c Line #97. Created POG AND Node 186 to hold literals between NNF nodes 86 and 89
c Line #97.  Adding edge between POG nodes 175 and 186
c Line #98. Created POG AND Node 187 to hold literals between NNF nodes 85 and 86
c Line #98.  Adding edge between POG nodes 174 and 187
c Line #99.  Created POG node OR number 188 from NNF node 90
c Line #100. Created POG AND Node 189 to hold literals between NNF nodes 90 and 89
c Line #100.  Adding edge between POG nodes 188 and 189
c Line #101. Created POG AND Node 190 to hold literals between NNF nodes 90 and 88
c Line #101.  Adding edge between POG nodes 188 and 190
c Line #102. Created POG AND Node 191 to hold literals between NNF nodes 85 and 90
c Line #102.  Adding edge between POG nodes 174 and 191
c Line #103. Created POG AND Node 192 to hold literals between NNF nodes 84 and 85
c Line #103.  Adding edge between POG nodes 173 and 192
c Line #104.  Created POG node OR number 193 from NNF node 91
c Line #105. Created POG AND Node 194 to hold literals between NNF nodes 91 and 89
c Line #105.  Adding edge between POG nodes 193 and 194
c Line #106. Created POG AND Node 195 to hold literals between NNF nodes 91 and 89
c Line #106.  Adding edge between POG nodes 193 and 195
c Line #107. Created POG AND Node 196 to hold literals between NNF nodes 84 and 91
c Line #107.  Adding edge between POG nodes 173 and 196
c Line #108. Created POG AND Node 197 to hold literals between NNF nodes 83 and 84
c Line #108.  Adding edge between POG nodes 172 and 197
c Line #109.  Created POG node OR number 198 from NNF node 92
c Line #110. Created POG AND Node 199 to hold literals between NNF nodes 92 and 91
c Line #110.  Adding edge between POG nodes 198 and 199
c Line #111. Created POG AND Node 200 to hold literals between NNF nodes 92 and 86
c Line #111.  Adding edge between POG nodes 198 and 200
c Line #112. Created POG AND Node 201 to hold literals between NNF nodes 83 and 92
c Line #112.  Adding edge between POG nodes 172 and 201
c Line #113. Created POG AND Node 202 to hold literals between NNF nodes 82 and 83
c Line #113.  Adding edge between POG nodes 171 and 202
c Line #114.  Created POG node OR number 203 from NNF node 93
c Line #115. Created POG AND Node 204 to hold literals between NNF nodes 93 and 89
c Line #115.  Adding edge between POG nodes 203 and 204
c Line #116. Created POG AND Node 205 to hold literals between NNF nodes 93 and 89
c Line #116.  Adding edge between POG nodes 203 and 205
c Line #117. Created POG AND Node 206 to hold literals between NNF nodes 82 and 93
c Line #117.  Adding edge between POG nodes 171 and 206
c Line #118. Created POG AND Node 207 to hold literals between NNF nodes 81 and 82
c Line #118.  Adding edge between POG nodes 170 and 207
c Line #119.  Created POG node OR number 208 from NNF node 94
c Line #120. Created POG AND Node 209 to hold literals between NNF nodes 94 and 93
c Line #120.  Adding edge between POG nodes 208 and 209
c Line #121. Created POG AND Node 210 to hold literals between NNF nodes 94 and 84
c Line #121.  Adding edge between POG nodes 208 and 210
c Line #122. Created POG AND Node 211 to hold literals between NNF nodes 81 and 94
c Line #122.  Adding edge between POG nodes 170 and 211
c Line #123. Created POG AND Node 212 to hold literals between NNF nodes 80 and 81
c Line #123.  Adding edge between POG nodes 169 and 212
c Line #124.  Created POG node OR number 213 from NNF node 95
c Line #125. Created POG AND Node 214 to hold literals between NNF nodes 95 and 93
c Line #125.  Adding edge between POG nodes 213 and 214
c Line #126. Created POG AND Node 215 to hold literals between NNF nodes 95 and 93
c Line #126.  Adding edge between POG nodes 213 and 215
c Line #127. Created POG AND Node 216 to hold literals between NNF nodes 80 and 95
c Line #127.  Adding edge between POG nodes 169 and 216
c Line #128. Created POG AND Node 217 to hold literals between NNF nodes 79 and 80
c Line #128.  Adding edge between POG nodes 168 and 217
c Line #129.  Created POG node OR number 218 from NNF node 96
c Line #130. Created POG AND Node 219 to hold literals between NNF nodes 96 and 95
c Line #130.  Adding edge between POG nodes 218 and 219
c Line #131. Created POG AND Node 220 to hold literals between NNF nodes 96 and 82
c Line #131.  Adding edge between POG nodes 218 and 220
c Line #132. Created POG AND Node 221 to hold literals between NNF nodes 79 and 96
c Line #132.  Adding edge between POG nodes 168 and 221
c Line #133. Created POG AND Node 222 to hold literals between NNF nodes 78 and 79
c Line #133.  Adding edge between POG nodes 167 and 222
c Line #134.  Created POG node OR number 223 from NNF node 97
c Line #135. Created POG AND Node 224 to hold literals between NNF nodes 97 and 93
c Line #135.  Adding edge between POG nodes 223 and 224
c Line #136. Created POG AND Node 225 to hold literals between NNF nodes 97 and 93
c Line #136.  Adding edge between POG nodes 223 and 225
c Line #137. Created POG AND Node 226 to hold literals between NNF nodes 78 and 97
c Line #137.  Adding edge between POG nodes 167 and 226
c Line #138. Created POG AND Node 227 to hold literals between NNF nodes 77 and 78
c Line #138.  Adding edge between POG nodes 166 and 227
c Line #139.  Created POG node OR number 228 from NNF node 98
c Line #140. Created POG AND Node 229 to hold literals between NNF nodes 98 and 97
c Line #140.  Adding edge between POG nodes 228 and 229
c Line #141. Created POG AND Node 230 to hold literals between NNF nodes 98 and 80
c Line #141.  Adding edge between POG nodes 228 and 230
c Line #142. Created POG AND Node 231 to hold literals between NNF nodes 77 and 98
c Line #142.  Adding edge between POG nodes 166 and 231
c Line #143. Created POG AND Node 232 to hold literals between NNF nodes 76 and 77
c Line #143.  Adding edge between POG nodes 165 and 232
c Line #144.  Created POG node OR number 233 from NNF node 99
c Line #145. Created POG AND Node 234 to hold literals between NNF nodes 99 and 97
c Line #145.  Adding edge between POG nodes 233 and 234
c Line #146. Created POG AND Node 235 to hold literals between NNF nodes 99 and 97
c Line #146.  Adding edge between POG nodes 233 and 235
c Line #147. Created POG AND Node 236 to hold literals between NNF nodes 76 and 99
c Line #147.  Adding edge between POG nodes 165 and 236
c Line #148. Created POG AND Node 237 to hold literals between NNF nodes 75 and 76
c Line #148.  Adding edge between POG nodes 164 and 237
c Line #149.  Created POG node OR number 238 from NNF node 100
c Line #150. Created POG AND Node 239 to hold literals between NNF nodes 100 and 99
c Line #150.  Adding edge between POG nodes 238 and 239
c Line #151. Created POG AND Node 240 to hold literals between NNF nodes 100 and 78
c Line #151.  Adding edge between POG nodes 238 and 240
c Line #152. Created POG AND Node 241 to hold literals between NNF nodes 75 and 100
c Line #152.  Adding edge between POG nodes 164 and 241
c Line #153. Created POG AND Node 242 to hold literals between NNF nodes 74 and 75
c Line #153.  Adding edge between POG nodes 163 and 242
c Line #154.  Created POG node OR number 243 from NNF node 101
c Line #155. Created POG AND Node 244 to hold literals between NNF nodes 101 and 97
c Line #155.  Adding edge between POG nodes 243 and 244
c Line #156. Created POG AND Node 245 to hold literals between NNF nodes 101 and 97
c Line #156.  Adding edge between POG nodes 243 and 245
c Line #157. Created POG AND Node 246 to hold literals between NNF nodes 74 and 101
c Line #157.  Adding edge between POG nodes 163 and 246
c Line #158. Created POG AND Node 247 to hold literals between NNF nodes 73 and 74
c Line #158.  Adding edge between POG nodes 162 and 247
c Line #159.  Created POG node OR number 248 from NNF node 102
c Line #160. Created POG AND Node 249 to hold literals between NNF nodes 102 and 101
c Line #160.  Adding edge between POG nodes 248 and 249
c Line #161. Created POG AND Node 250 to hold literals between NNF nodes 102 and 76
c Line #161.  Adding edge between POG nodes 248 and 250
c Line #162. Created POG AND Node 251 to hold literals between NNF nodes 73 and 102
c Line #162.  Adding edge between POG nodes 162 and 251
c Line #163. Created POG AND Node 252 to hold literals between NNF nodes 72 and 73
c Line #163.  Adding edge between POG nodes 161 and 252
c Line #164.  Created POG node OR number 253 from NNF node 103
c Line #165. Created POG AND Node 254 to hold literals between NNF nodes 103 and 101
c Line #165.  Adding edge between POG nodes 253 and 254
c Line #166. Created POG AND Node 255 to hold literals between NNF nodes 103 and 101
c Line #166.  Adding edge between POG nodes 253 and 255
c Line #167. Created POG AND Node 256 to hold literals between NNF nodes 72 and 103
c Line #167.  Adding edge between POG nodes 161 and 256
c Line #168. Created POG AND Node 257 to hold literals between NNF nodes 71 and 72
c Line #168.  Adding edge between POG nodes 160 and 257
c Line #169.  Created POG node OR number 258 from NNF node 104
c Line #170. Created POG AND Node 259 to hold literals between NNF nodes 104 and 103
c Line #170.  Adding edge between POG nodes 258 and 259
c Line #171. Created POG AND Node 260 to hold literals between NNF nodes 104 and 74
c Line #171.  Adding edge between POG nodes 258 and 260
c Line #172. Created POG AND Node 261 to hold literals between NNF nodes 71 and 104
c Line #172.  Adding edge between POG nodes 160 and 261
c Line #173. Created POG AND Node 262 to hold literals between NNF nodes 70 and 71
c Line #173.  Adding edge between POG nodes 159 and 262
c Line #174.  Created POG node OR number 263 from NNF node 105
c Line #175. Created POG AND Node 264 to hold literals between NNF nodes 105 and 101
c Line #175.  Adding edge between POG nodes 263 and 264
c Line #176. Created POG AND Node 265 to hold literals between NNF nodes 105 and 101
c Line #176.  Adding edge between POG nodes 263 and 265
c Line #177. Created POG AND Node 266 to hold literals between NNF nodes 70 and 105
c Line #177.  Adding edge between POG nodes 159 and 266
c Line #178. Created POG AND Node 267 to hold literals between NNF nodes 69 and 70
c Line #178.  Adding edge between POG nodes 158 and 267
c Line #179.  Created POG node OR number 268 from NNF node 106
c Line #180. Created POG AND Node 269 to hold literals between NNF nodes 106 and 105
c Line #180.  Adding edge between POG nodes 268 and 269
c Line #181. Created POG AND Node 270 to hold literals between NNF nodes 106 and 72
c Line #181.  Adding edge between POG nodes 268 and 270
c Line #182. Created POG AND Node 271 to hold literals between NNF nodes 69 and 106
c Line #182.  Adding edge between POG nodes 158 and 271
c Line #183. Created POG AND Node 272 to hold literals between NNF nodes 68 and 69
c Line #183.  Adding edge between POG nodes 157 and 272
c Line #184.  Created POG node OR number 273 from NNF node 107
c Line #185. Created POG AND Node 274 to hold literals between NNF nodes 107 and 105
c Line #185.  Adding edge between POG nodes 273 and 274
c Line #186. Created POG AND Node 275 to hold literals between NNF nodes 107 and 105
c Line #186.  Adding edge between POG nodes 273 and 275
c Line #187. Created POG AND Node 276 to hold literals between NNF nodes 68 and 107
c Line #187.  Adding edge between POG nodes 157 and 276
c Line #188. Created POG AND Node 277 to hold literals between NNF nodes 67 and 68
c Line #188.  Adding edge between POG nodes 156 and 277
c Line #189.  Created POG node OR number 278 from NNF node 108
c Line #190. Created POG AND Node 279 to hold literals between NNF nodes 108 and 107
c Line #190.  Adding edge between POG nodes 278 and 279
c Line #191. Created POG AND Node 280 to hold literals between NNF nodes 108 and 70
c Line #191.  Adding edge between POG nodes 278 and 280
c Line #192. Created POG AND Node 281 to hold literals between NNF nodes 67 and 108
c Line #192.  Adding edge between POG nodes 156 and 281
c Line #193. Created POG AND Node 282 to hold literals between NNF nodes 66 and 67
c Line #193.  Adding edge between POG nodes 155 and 282
c Line #194.  Created POG node OR number 283 from NNF node 109
c Line #195. Created POG AND Node 284 to hold literals between NNF nodes 109 and 105
c Line #195.  Adding edge between POG nodes 283 and 284
c Line #196. Created POG AND Node 285 to hold literals between NNF nodes 109 and 105
c Line #196.  Adding edge between POG nodes 283 and 285
c Line #197. Created POG AND Node 286 to hold literals between NNF nodes 66 and 109
c Line #197.  Adding edge between POG nodes 155 and 286
c Line #198. Created POG AND Node 287 to hold literals between NNF nodes 65 and 66
c Line #198.  Adding edge between POG nodes 154 and 287
c Line #199.  Created POG node OR number 288 from NNF node 110
c Line #200. Created POG AND Node 289 to hold literals between NNF nodes 110 and 109
c Line #200.  Adding edge between POG nodes 288 and 289
c Line #201. Created POG AND Node 290 to hold literals between NNF nodes 110 and 68
c Line #201.  Adding edge between POG nodes 288 and 290
c Line #202. Created POG AND Node 291 to hold literals between NNF nodes 65 and 110
c Line #202.  Adding edge between POG nodes 154 and 291
c Line #203. Created POG AND Node 292 to hold literals between NNF nodes 64 and 65
c Line #203.  Adding edge between POG nodes 153 and 292
c Line #204.  Created POG node OR number 293 from NNF node 111
c Line #205. Created POG AND Node 294 to hold literals between NNF nodes 111 and 109
c Line #205.  Adding edge between POG nodes 293 and 294
c Line #206. Created POG AND Node 295 to hold literals between NNF nodes 111 and 109
c Line #206.  Adding edge between POG nodes 293 and 295
c Line #207. Created POG AND Node 296 to hold literals between NNF nodes 64 and 111
c Line #207.  Adding edge between POG nodes 153 and 296
c Line #208. Created POG AND Node 297 to hold literals between NNF nodes 63 and 64
c Line #208.  Adding edge between POG nodes 152 and 297
c Line #209.  Created POG node OR number 298 from NNF node 112
c Line #210. Created POG AND Node 299 to hold literals between NNF nodes 112 and 111
c Line #210.  Adding edge between POG nodes 298 and 299
c Line #211. Created POG AND Node 300 to hold literals between NNF nodes 112 and 66
c Line #211.  Adding edge between POG nodes 298 and 300
c Line #212. Created POG AND Node 301 to hold literals between NNF nodes 63 and 112
c Line #212.  Adding edge between POG nodes 152 and 301
c Line #213. Created POG AND Node 302 to hold literals between NNF nodes 62 and 63
c Line #213.  Adding edge between POG nodes 151 and 302
c Line #214.  Created POG node OR number 303 from NNF node 113
c Line #215. Created POG AND Node 304 to hold literals between NNF nodes 113 and 109
c Line #215.  Adding edge between POG nodes 303 and 304
c Line #216. Created POG AND Node 305 to hold literals between NNF nodes 113 and 109
c Line #216.  Adding edge between POG nodes 303 and 305
c Line #217. Created POG AND Node 306 to hold literals between NNF nodes 62 and 113
c Line #217.  Adding edge between POG nodes 151 and 306
c Line #218. Created POG AND Node 307 to hold literals between NNF nodes 61 and 62
c Line #218.  Adding edge between POG nodes 150 and 307
c Line #219.  Created POG node OR number 308 from NNF node 114
c Line #220. Created POG AND Node 309 to hold literals between NNF nodes 114 and 113
c Line #220.  Adding edge between POG nodes 308 and 309
c Line #221. Created POG AND Node 310 to hold literals between NNF nodes 114 and 64
c Line #221.  Adding edge between POG nodes 308 and 310
c Line #222. Created POG AND Node 311 to hold literals between NNF nodes 61 and 114
c Line #222.  Adding edge between POG nodes 150 and 311
c Line #223. Created POG AND Node 312 to hold literals between NNF nodes 60 and 61
c Line #223.  Adding edge between POG nodes 149 and 312
c Line #224.  Created POG node OR number 313 from NNF node 115
c Line #225. Created POG AND Node 314 to hold literals between NNF nodes 115 and 113
c Line #225.  Adding edge between POG nodes 313 and 314
c Line #226. Created POG AND Node 315 to hold literals between NNF nodes 115 and 113
c Line #226.  Adding edge between POG nodes 313 and 315
c Line #227. Created POG AND Node 316 to hold literals between NNF nodes 60 and 115
c Line #227.  Adding edge between POG nodes 149 and 316
c Line #228. Created POG AND Node 317 to hold literals between NNF nodes 59 and 60
c Line #228.  Adding edge between POG nodes 148 and 317
c Line #229.  Created POG node OR number 318 from NNF node 116
c Line #230. Created POG AND Node 319 to hold literals between NNF nodes 116 and 115
c Line #230.  Adding edge between POG nodes 318 and 319
c Line #231. Created POG AND Node 320 to hold literals between NNF nodes 116 and 62
c Line #231.  Adding edge between POG nodes 318 and 320
c Line #232. Created POG AND Node 321 to hold literals between NNF nodes 59 and 116
c Line #232.  Adding edge between POG nodes 148 and 321
c Line #233. Created POG AND Node 322 to hold literals between NNF nodes 58 and 59
c Line #233.  Adding edge between POG nodes 147 and 322
c Line #234.  Created POG node OR number 323 from NNF node 117
c Line #235. Created POG AND Node 324 to hold literals between NNF nodes 117 and 113
c Line #235.  Adding edge between POG nodes 323 and 324
c Line #236. Created POG AND Node 325 to hold literals between NNF nodes 117 and 113
c Line #236.  Adding edge between POG nodes 323 and 325
c Line #237. Created POG AND Node 326 to hold literals between NNF nodes 58 and 117
c Line #237.  Adding edge between POG nodes 147 and 326
c Line #238. Created POG AND Node 327 to hold literals between NNF nodes 57 and 58
c Line #238.  Adding edge between POG nodes 146 and 327
c Line #239.  Created POG node OR number 328 from NNF node 118
c Line #240. Created POG AND Node 329 to hold literals between NNF nodes 118 and 117
c Line #240.  Adding edge between POG nodes 328 and 329
c Line #241. Created POG AND Node 330 to hold literals between NNF nodes 118 and 60
c Line #241.  Adding edge between POG nodes 328 and 330
c Line #242. Created POG AND Node 331 to hold literals between NNF nodes 57 and 118
c Line #242.  Adding edge between POG nodes 146 and 331
c Line #243. Created POG AND Node 332 to hold literals between NNF nodes 56 and 57
c Line #243.  Adding edge between POG nodes 145 and 332
c Line #244.  Created POG node OR number 333 from NNF node 119
c Line #245. Created POG AND Node 334 to hold literals between NNF nodes 119 and 117
c Line #245.  Adding edge between POG nodes 333 and 334
c Line #246. Created POG AND Node 335 to hold literals between NNF nodes 119 and 117
c Line #246.  Adding edge between POG nodes 333 and 335
c Line #247. Created POG AND Node 336 to hold literals between NNF nodes 56 and 119
c Line #247.  Adding edge between POG nodes 145 and 336
c Line #248. Created POG AND Node 337 to hold literals between NNF nodes 55 and 56
c Line #248.  Adding edge between POG nodes 144 and 337
c Line #249. Created POG AND Node 338 to hold literals between NNF nodes 55 and 1
c Line #249.  Adding edge between POG nodes 144 and 338
c Line #250. Created POG AND Node 339 to hold literals between NNF nodes 54 and 55
c Line #250.  Adding edge between POG nodes 143 and 339
c Line #251.  Created POG node OR number 340 from NNF node 120
c Line #252. Created POG AND Node 341 to hold literals between NNF nodes 120 and 117
c Line #252.  Adding edge between POG nodes 340 and 341
c Line #253. Created POG AND Node 342 to hold literals between NNF nodes 120 and 117
c Line #253.  Adding edge between POG nodes 340 and 342
c Line #254. Created POG AND Node 343 to hold literals between NNF nodes 54 and 120
c Line #254.  Adding edge between POG nodes 143 and 343
c Line #255. Created POG AND Node 344 to hold literals between NNF nodes 53 and 54
c Line #255.  Adding edge between POG nodes 142 and 344
c Line #256. Created POG AND Node 345 to hold literals between NNF nodes 53 and 1
c Line #256.  Adding edge between POG nodes 142 and 345
c Line #257. Created POG AND Node 346 to hold literals between NNF nodes 52 and 53
c Line #257.  Adding edge between POG nodes 141 and 346
c Line #258.  Created POG node OR number 347 from NNF node 121
c Line #259. Created POG AND Node 348 to hold literals between NNF nodes 121 and 120
c Line #259.  Adding edge between POG nodes 347 and 348
c Line #260. Created POG AND Node 349 to hold literals between NNF nodes 121 and 120
c Line #260.  Adding edge between POG nodes 347 and 349
c Line #261. Created POG AND Node 350 to hold literals between NNF nodes 52 and 121
c Line #261.  Adding edge between POG nodes 141 and 350
c Line #262. Created POG AND Node 351 to hold literals between NNF nodes 51 and 52
c Line #262.  Adding edge between POG nodes 140 and 351
c Line #263. Created POG AND Node 352 to hold literals between NNF nodes 51 and 1
c Line #263.  Adding edge between POG nodes 140 and 352
c Line #264. Created POG AND Node 353 to hold literals between NNF nodes 50 and 51
c Line #264.  Adding edge between POG nodes 139 and 353
c Line #265.  Created POG node OR number 354 from NNF node 122
c Line #266. Created POG AND Node 355 to hold literals between NNF nodes 122 and 120
c Line #266.  Adding edge between POG nodes 354 and 355
c Line #267. Created POG AND Node 356 to hold literals between NNF nodes 122 and 120
c Line #267.  Adding edge between POG nodes 354 and 356
c Line #268. Created POG AND Node 357 to hold literals between NNF nodes 50 and 122
c Line #268.  Adding edge between POG nodes 139 and 357
c Line #269. Created POG AND Node 358 to hold literals between NNF nodes 49 and 50
c Line #269.  Adding edge between POG nodes 138 and 358
c Line #270. Created POG AND Node 359 to hold literals between NNF nodes 49 and 1
c Line #270.  Adding edge between POG nodes 138 and 359
c Line #271. Created POG AND Node 360 to hold literals between NNF nodes 48 and 49
c Line #271.  Adding edge between POG nodes 137 and 360
c Line #272.  Created POG node OR number 361 from NNF node 123
c Line #273. Created POG AND Node 362 to hold literals between NNF nodes 123 and 122
c Line #273.  Adding edge between POG nodes 361 and 362
c Line #274. Created POG AND Node 363 to hold literals between NNF nodes 123 and 122
c Line #274.  Adding edge between POG nodes 361 and 363
c Line #275. Created POG AND Node 364 to hold literals between NNF nodes 48 and 123
c Line #275.  Adding edge between POG nodes 137 and 364
c Line #276. Created POG AND Node 365 to hold literals between NNF nodes 47 and 48
c Line #276.  Adding edge between POG nodes 136 and 365
c Line #277. Created POG AND Node 366 to hold literals between NNF nodes 47 and 1
c Line #277.  Adding edge between POG nodes 136 and 366
c Line #278. Created POG AND Node 367 to hold literals between NNF nodes 46 and 47
c Line #278.  Adding edge between POG nodes 135 and 367
c Line #279.  Created POG node OR number 368 from NNF node 124
c Line #280. Created POG AND Node 369 to hold literals between NNF nodes 124 and 122
c Line #280.  Adding edge between POG nodes 368 and 369
c Line #281. Created POG AND Node 370 to hold literals between NNF nodes 124 and 122
c Line #281.  Adding edge between POG nodes 368 and 370
c Line #282. Created POG AND Node 371 to hold literals between NNF nodes 46 and 124
c Line #282.  Adding edge between POG nodes 135 and 371
c Line #283. Created POG AND Node 372 to hold literals between NNF nodes 45 and 46
c Line #283.  Adding edge between POG nodes 134 and 372
c Line #284. Created POG AND Node 373 to hold literals between NNF nodes 45 and 1
c Line #284.  Adding edge between POG nodes 134 and 373
c Line #285. Created POG AND Node 374 to hold literals between NNF nodes 44 and 45
c Line #285.  Adding edge between POG nodes 133 and 374
c Line #286.  Created POG node OR number 375 from NNF node 125
c Line #287. Created POG AND Node 376 to hold literals between NNF nodes 125 and 124
c Line #287.  Adding edge between POG nodes 375 and 376
c Line #288. Created POG AND Node 377 to hold literals between NNF nodes 125 and 124
c Line #288.  Adding edge between POG nodes 375 and 377
c Line #289. Created POG AND Node 378 to hold literals between NNF nodes 44 and 125
c Line #289.  Adding edge between POG nodes 133 and 378
c Line #290. Created POG AND Node 379 to hold literals between NNF nodes 43 and 44
c Line #290.  Adding edge between POG nodes 132 and 379
c Line #291. Created POG AND Node 380 to hold literals between NNF nodes 43 and 1
c Line #291.  Adding edge between POG nodes 132 and 380
c Line #292. Created POG AND Node 381 to hold literals between NNF nodes 42 and 43
c Line #292.  Adding edge between POG nodes 131 and 381
c Line #293.  Created POG node OR number 382 from NNF node 126
c Line #294. Created POG AND Node 383 to hold literals between NNF nodes 126 and 124
c Line #294.  Adding edge between POG nodes 382 and 383
c Line #295. Created POG AND Node 384 to hold literals between NNF nodes 126 and 124
c Line #295.  Adding edge between POG nodes 382 and 384
c Line #296. Created POG AND Node 385 to hold literals between NNF nodes 42 and 126
c Line #296.  Adding edge between POG nodes 131 and 385
c Line #297. Created POG AND Node 386 to hold literals between NNF nodes 41 and 42
c Line #297.  Adding edge between POG nodes 130 and 386
c Line #298. Created POG AND Node 387 to hold literals between NNF nodes 41 and 1
c Line #298.  Adding edge between POG nodes 130 and 387
c Line #299. Created POG AND Node 388 to hold literals between NNF nodes 40 and 41
c Line #299.  Adding edge between POG nodes 129 and 388
c Line #300.  Created POG node OR number 389 from NNF node 127
c Line #301. Created POG AND Node 390 to hold literals between NNF nodes 127 and 126
c Line #301.  Adding edge between POG nodes 389 and 390
c Line #302. Created POG AND Node 391 to hold literals between NNF nodes 127 and 126
c Line #302.  Adding edge between POG nodes 389 and 391
c Line #303. Created POG AND Node 392 to hold literals between NNF nodes 40 and 127
c Line #303.  Adding edge between POG nodes 129 and 392
c Line #304. Created POG AND Node 393 to hold literals between NNF nodes 39 and 40
c Line #304.  Adding edge between POG nodes 128 and 393
c Line #305. Created POG AND Node 394 to hold literals between NNF nodes 39 and 1
c Line #305.  Adding edge between POG nodes 128 and 394
c Line #306. Created POG AND Node 395 to hold literals between NNF nodes 38 and 39
c Line #306.  Adding edge between POG nodes 127 and 395
c Line #307.  Created POG node OR number 396 from NNF node 128
c Line #308. Created POG AND Node 397 to hold literals between NNF nodes 128 and 126
c Line #308.  Adding edge between POG nodes 396 and 397
c Line #309. Created POG AND Node 398 to hold literals between NNF nodes 128 and 126
c Line #309.  Adding edge between POG nodes 396 and 398
c Line #310. Created POG AND Node 399 to hold literals between NNF nodes 38 and 128
c Line #310.  Adding edge between POG nodes 127 and 399
c Line #311. Created POG AND Node 400 to hold literals between NNF nodes 37 and 38
c Line #311.  Adding edge between POG nodes 126 and 400
c Line #312. Created POG AND Node 401 to hold literals between NNF nodes 37 and 1
c Line #312.  Adding edge between POG nodes 126 and 401
c Line #313. Created POG AND Node 402 to hold literals between NNF nodes 36 and 37
c Line #313.  Adding edge between POG nodes 125 and 402
c Line #314.  Created POG node OR number 403 from NNF node 129
c Line #315. Created POG AND Node 404 to hold literals between NNF nodes 129 and 128
c Line #315.  Adding edge between POG nodes 403 and 404
c Line #316. Created POG AND Node 405 to hold literals between NNF nodes 129 and 128
c Line #316.  Adding edge between POG nodes 403 and 405
c Line #317. Created POG AND Node 406 to hold literals between NNF nodes 36 and 129
c Line #317.  Adding edge between POG nodes 125 and 406
c Line #318. Created POG AND Node 407 to hold literals between NNF nodes 35 and 36
c Line #318.  Adding edge between POG nodes 124 and 407
c Line #319. Created POG AND Node 408 to hold literals between NNF nodes 35 and 1
c Line #319.  Adding edge between POG nodes 124 and 408
c Line #320. Created POG AND Node 409 to hold literals between NNF nodes 34 and 35
c Line #320.  Adding edge between POG nodes 123 and 409
c Line #321.  Created POG node OR number 410 from NNF node 130
c Line #322. Created POG AND Node 411 to hold literals between NNF nodes 130 and 128
c Line #322.  Adding edge between POG nodes 410 and 411
c Line #323. Created POG AND Node 412 to hold literals between NNF nodes 130 and 128
c Line #323.  Adding edge between POG nodes 410 and 412
c Line #324. Created POG AND Node 413 to hold literals between NNF nodes 34 and 130
c Line #324.  Adding edge between POG nodes 123 and 413
c Line #325. Created POG AND Node 414 to hold literals between NNF nodes 33 and 34
c Line #325.  Adding edge between POG nodes 122 and 414
c Line #326. Created POG AND Node 415 to hold literals between NNF nodes 33 and 1
c Line #326.  Adding edge between POG nodes 122 and 415
c Line #327. Created POG AND Node 416 to hold literals between NNF nodes 32 and 33
c Line #327.  Adding edge between POG nodes 121 and 416
c Line #328.  Created POG node OR number 417 from NNF node 131
c Line #329. Created POG AND Node 418 to hold literals between NNF nodes 131 and 130
c Line #329.  Adding edge between POG nodes 417 and 418
c Line #330. Created POG AND Node 419 to hold literals between NNF nodes 131 and 130
c Line #330.  Adding edge between POG nodes 417 and 419
c Line #331. Created POG AND Node 420 to hold literals between NNF nodes 32 and 131
c Line #331.  Adding edge between POG nodes 121 and 420
c Line #332. Created POG AND Node 421 to hold literals between NNF nodes 31 and 32
c Line #332.  Adding edge between POG nodes 120 and 421
c Line #333. Created POG AND Node 422 to hold literals between NNF nodes 31 and 1
c Line #333.  Adding edge between POG nodes 120 and 422
c Line #334. Created POG AND Node 423 to hold literals between NNF nodes 30 and 31
c Line #334.  Adding edge between POG nodes 119 and 423
c Line #335.  Created POG node OR number 424 from NNF node 132
c Line #336. Created POG AND Node 425 to hold literals between NNF nodes 132 and 130
c Line #336.  Adding edge between POG nodes 424 and 425
c Line #337. Created POG AND Node 426 to hold literals between NNF nodes 132 and 130
c Line #337.  Adding edge between POG nodes 424 and 426
c Line #338. Created POG AND Node 427 to hold literals between NNF nodes 30 and 132
c Line #338.  Adding edge between POG nodes 119 and 427
c Line #339. Created POG AND Node 428 to hold literals between NNF nodes 29 and 30
c Line #339.  Adding edge between POG nodes 118 and 428
c Line #340. Created POG AND Node 429 to hold literals between NNF nodes 29 and 1
c Line #340.  Adding edge between POG nodes 118 and 429
c Line #341. Created POG AND Node 430 to hold literals between NNF nodes 28 and 29
c Line #341.  Adding edge between POG nodes 117 and 430
c Line #342.  Created POG node OR number 431 from NNF node 133
c Line #343. Created POG AND Node 432 to hold literals between NNF nodes 133 and 132
c Line #343.  Adding edge between POG nodes 431 and 432
c Line #344. Created POG AND Node 433 to hold literals between NNF nodes 133 and 132
c Line #344.  Adding edge between POG nodes 431 and 433
c Line #345. Created POG AND Node 434 to hold literals between NNF nodes 28 and 133
c Line #345.  Adding edge between POG nodes 117 and 434
c Line #346. Created POG AND Node 435 to hold literals between NNF nodes 27 and 28
c Line #346.  Adding edge between POG nodes 116 and 435
c Line #347. Created POG AND Node 436 to hold literals between NNF nodes 27 and 1
c Line #347.  Adding edge between POG nodes 116 and 436
c Line #348. Created POG AND Node 437 to hold literals between NNF nodes 26 and 27
c Line #348.  Adding edge between POG nodes 115 and 437
c Line #349.  Created POG node OR number 438 from NNF node 134
c Line #350. Created POG AND Node 439 to hold literals between NNF nodes 134 and 132
c Line #350.  Adding edge between POG nodes 438 and 439
c Line #351. Created POG AND Node 440 to hold literals between NNF nodes 134 and 132
c Line #351.  Adding edge between POG nodes 438 and 440
c Line #352. Created POG AND Node 441 to hold literals between NNF nodes 26 and 134
c Line #352.  Adding edge between POG nodes 115 and 441
c Line #353. Created POG AND Node 442 to hold literals between NNF nodes 25 and 26
c Line #353.  Adding edge between POG nodes 114 and 442
c Line #354. Created POG AND Node 443 to hold literals between NNF nodes 25 and 1
c Line #354.  Adding edge between POG nodes 114 and 443
c Line #355. Created POG AND Node 444 to hold literals between NNF nodes 24 and 25
c Line #355.  Adding edge between POG nodes 113 and 444
c Line #356.  Created POG node OR number 445 from NNF node 135
c Line #357. Created POG AND Node 446 to hold literals between NNF nodes 135 and 134
c Line #357.  Adding edge between POG nodes 445 and 446
c Line #358. Created POG AND Node 447 to hold literals between NNF nodes 135 and 134
c Line #358.  Adding edge between POG nodes 445 and 447
c Line #359. Created POG AND Node 448 to hold literals between NNF nodes 24 and 135
c Line #359.  Adding edge between POG nodes 113 and 448
c Line #360. Created POG AND Node 449 to hold literals between NNF nodes 23 and 24
c Line #360.  Adding edge between POG nodes 112 and 449
c Line #361. Created POG AND Node 450 to hold literals between NNF nodes 23 and 1
c Line #361.  Adding edge between POG nodes 112 and 450
c Line #362. Created POG AND Node 451 to hold literals between NNF nodes 22 and 23
c Line #362.  Adding edge between POG nodes 111 and 451
c Line #363.  Created POG node OR number 452 from NNF node 136
c Line #364. Created POG AND Node 453 to hold literals between NNF nodes 136 and 134
c Line #364.  Adding edge between POG nodes 452 and 453
c Line #365. Created POG AND Node 454 to hold literals between NNF nodes 136 and 134
c Line #365.  Adding edge between POG nodes 452 and 454
c Line #366. Created POG AND Node 455 to hold literals between NNF nodes 22 and 136
c Line #366.  Adding edge between POG nodes 111 and 455
c Line #367. Created POG AND Node 456 to hold literals between NNF nodes 21 and 22
c Line #367.  Adding edge between POG nodes 110 and 456
c Line #368. Created POG AND Node 457 to hold literals between NNF nodes 21 and 1
c Line #368.  Adding edge between POG nodes 110 and 457
c Line #369. Created POG AND Node 458 to hold literals between NNF nodes 20 and 21
c Line #369.  Adding edge between POG nodes 109 and 458
c Line #370.  Created POG node OR number 459 from NNF node 137
c Line #371. Created POG AND Node 460 to hold literals between NNF nodes 137 and 136
c Line #371.  Adding edge between POG nodes 459 and 460
c Line #372. Created POG AND Node 461 to hold literals between NNF nodes 137 and 136
c Line #372.  Adding edge between POG nodes 459 and 461
c Line #373. Created POG AND Node 462 to hold literals between NNF nodes 20 and 137
c Line #373.  Adding edge between POG nodes 109 and 462
c Line #374. Created POG AND Node 463 to hold literals between NNF nodes 19 and 20
c Line #374.  Adding edge between POG nodes 108 and 463
c Line #375. Created POG AND Node 464 to hold literals between NNF nodes 19 and 1
c Line #375.  Adding edge between POG nodes 108 and 464
c Line #376. Created POG AND Node 465 to hold literals between NNF nodes 18 and 19
c Line #376.  Adding edge between POG nodes 107 and 465
c Line #377.  Created POG node OR number 466 from NNF node 138
c Line #378. Created POG AND Node 467 to hold literals between NNF nodes 138 and 136
c Line #378.  Adding edge between POG nodes 466 and 467
c Line #379. Created POG AND Node 468 to hold literals between NNF nodes 138 and 136
c Line #379.  Adding edge between POG nodes 466 and 468
c Line #380. Created POG AND Node 469 to hold literals between NNF nodes 18 and 138
c Line #380.  Adding edge between POG nodes 107 and 469
c Line #381. Created POG AND Node 470 to hold literals between NNF nodes 17 and 18
c Line #381.  Adding edge between POG nodes 106 and 470
c Line #382. Created POG AND Node 471 to hold literals between NNF nodes 17 and 1
c Line #382.  Adding edge between POG nodes 106 and 471
c Line #383. Created POG AND Node 472 to hold literals between NNF nodes 16 and 17
c Line #383.  Adding edge between POG nodes 105 and 472
c Line #384.  Created POG node OR number 473 from NNF node 139
c Line #385. Created POG AND Node 474 to hold literals between NNF nodes 139 and 138
c Line #385.  Adding edge between POG nodes 473 and 474
c Line #386. Created POG AND Node 475 to hold literals between NNF nodes 139 and 138
c Line #386.  Adding edge between POG nodes 473 and 475
c Line #387. Created POG AND Node 476 to hold literals between NNF nodes 16 and 139
c Line #387.  Adding edge between POG nodes 105 and 476
c Line #388. Created POG AND Node 477 to hold literals between NNF nodes 15 and 16
c Line #388.  Adding edge between POG nodes 104 and 477
c Line #389. Created POG AND Node 478 to hold literals between NNF nodes 15 and 1
c Line #389.  Adding edge between POG nodes 104 and 478
c Line #390. Created POG AND Node 479 to hold literals between NNF nodes 14 and 15
c Line #390.  Adding edge between POG nodes 103 and 479
c Line #391.  Created POG node OR number 480 from NNF node 140
c Line #392. Created POG AND Node 481 to hold literals between NNF nodes 140 and 138
c Line #392.  Adding edge between POG nodes 480 and 481
c Line #393. Created POG AND Node 482 to hold literals between NNF nodes 140 and 138
c Line #393.  Adding edge between POG nodes 480 and 482
c Line #394. Created POG AND Node 483 to hold literals between NNF nodes 14 and 140
c Line #394.  Adding edge between POG nodes 103 and 483
c Line #395. Created POG AND Node 484 to hold literals between NNF nodes 13 and 14
c Line #395.  Adding edge between POG nodes 102 and 484
c Line #396. Created POG AND Node 485 to hold literals between NNF nodes 13 and 1
c Line #396.  Adding edge between POG nodes 102 and 485
c Line #397. Created POG AND Node 486 to hold literals between NNF nodes 12 and 13
c Line #397.  Adding edge between POG nodes 101 and 486
c Line #398.  Created POG node OR number 487 from NNF node 141
c Line #399. Created POG AND Node 488 to hold literals between NNF nodes 141 and 140
c Line #399.  Adding edge between POG nodes 487 and 488
c Line #400. Created POG AND Node 489 to hold literals between NNF nodes 141 and 140
c Line #400.  Adding edge between POG nodes 487 and 489
c Line #401. Created POG AND Node 490 to hold literals between NNF nodes 12 and 141
c Line #401.  Adding edge between POG nodes 101 and 490
c Line #402. Created POG AND Node 491 to hold literals between NNF nodes 11 and 12
c Line #402.  Adding edge between POG nodes 100 and 491
c Line #403. Created POG AND Node 492 to hold literals between NNF nodes 11 and 1
c Line #403.  Adding edge between POG nodes 100 and 492
c Line #404. Created POG AND Node 493 to hold literals between NNF nodes 10 and 11
c Line #404.  Adding edge between POG nodes 99 and 493
c Line #405.  Created POG node OR number 494 from NNF node 142
c Line #406. Created POG AND Node 495 to hold literals between NNF nodes 142 and 140
c Line #406.  Adding edge between POG nodes 494 and 495
c Line #407. Created POG AND Node 496 to hold literals between NNF nodes 142 and 140
c Line #407.  Adding edge between POG nodes 494 and 496
c Line #408. Created POG AND Node 497 to hold literals between NNF nodes 10 and 142
c Line #408.  Adding edge between POG nodes 99 and 497
c Line #409. Created POG AND Node 498 to hold literals between NNF nodes 9 and 10
c Line #409.  Adding edge between POG nodes 98 and 498
c Line #410. Created POG AND Node 499 to hold literals between NNF nodes 9 and 1
c Line #410.  Adding edge between POG nodes 98 and 499
c Line #411. Created POG AND Node 500 to hold literals between NNF nodes 8 and 9
c Line #411.  Adding edge between POG nodes 97 and 500
c Line #412.  Created POG node OR number 501 from NNF node 143
c Line #413. Created POG AND Node 502 to hold literals between NNF nodes 143 and 142
c Line #413.  Adding edge between POG nodes 501 and 502
c Line #414. Created POG AND Node 503 to hold literals between NNF nodes 143 and 142
c Line #414.  Adding edge between POG nodes 501 and 503
c Line #415. Created POG AND Node 504 to hold literals between NNF nodes 8 and 143
c Line #415.  Adding edge between POG nodes 97 and 504
c Line #416. Created POG AND Node 505 to hold literals between NNF nodes 7 and 8
c Line #416.  Adding edge between POG nodes 96 and 505
c Line #417. Created POG AND Node 506 to hold literals between NNF nodes 7 and 1
c Line #417.  Adding edge between POG nodes 96 and 506
c Line #418. Created POG AND Node 507 to hold literals between NNF nodes 6 and 7
c Line #418.  Adding edge between POG nodes 95 and 507
c Line #419.  Created POG node OR number 508 from NNF node 144
c Line #420. Created POG AND Node 509 to hold literals between NNF nodes 144 and 142
c Line #420.  Adding edge between POG nodes 508 and 509
c Line #421. Created POG AND Node 510 to hold literals between NNF nodes 144 and 142
c Line #421.  Adding edge between POG nodes 508 and 510
c Line #422. Created POG AND Node 511 to hold literals between NNF nodes 6 and 144
c Line #422.  Adding edge between POG nodes 95 and 511
c Line #423. Created POG AND Node 512 to hold literals between NNF nodes 5 and 6
c Line #423.  Adding edge between POG nodes 94 and 512
c Line #424. Created POG AND Node 513 to hold literals between NNF nodes 5 and 1
c Line #424.  Adding edge between POG nodes 94 and 513
c Line #425. Created POG AND Node 514 to hold literals between NNF nodes 4 and 5
c Line #425.  Adding edge between POG nodes 93 and 514
c Line #426.  Created POG node OR number 515 from NNF node 145
c Line #427.  Created POG node OR number 516 from NNF node 146
c Line #428.  Created POG node OR number 517 from NNF node 147
c Line #429.  Created POG node OR number 518 from NNF node 148
c Line #430.  Created POG node OR number 519 from NNF node 149
c Line #431.  Created POG node OR number 520 from NNF node 150
c Line #432.  Created POG node OR number 521 from NNF node 151
c Line #433.  Created POG node OR number 522 from NNF node 152
c Line #434.  Created POG node OR number 523 from NNF node 153
c Line #435.  Created POG node OR number 524 from NNF node 154
c Line #436.  Created POG node OR number 525 from NNF node 155
c Line #437.  Created POG node OR number 526 from NNF node 156
c Line #438.  Created POG node OR number 527 from NNF node 157
c Line #439.  Created POG node OR number 528 from NNF node 158
c Line #440.  Created POG node OR number 529 from NNF node 159
c Line #441.  Created POG node OR number 530 from NNF node 160
c Line #442.  Created POG node OR number 531 from NNF node 161
c Line #443.  Created POG node OR number 532 from NNF node 162
c Line #444.  Created POG node OR number 533 from NNF node 163
c Line #445.  Created POG node OR number 534 from NNF node 164
c Line #446.  Created POG node OR number 535 from NNF node 165
c Line #447.  Created POG node OR number 536 from NNF node 166
c Line #448.  Created POG node OR number 537 from NNF node 167
c Line #449.  Created POG node OR number 538 from NNF node 168
c Line #450.  Created POG node OR number 539 from NNF node 169
c Line #451.  Created POG node OR number 540 from NNF node 170
c Line #452.  Created POG node OR number 541 from NNF node 171
c Line #453.  Created POG node OR number 542 from NNF node 172
c Line #454.  Created POG node OR number 543 from NNF node 173
c Line #455.  Created POG node OR number 544 from NNF node 174
c Line #456.  Created POG node OR number 545 from NNF node 175
c Line #457.  Created POG node OR number 546 from NNF node 176
c Line #458.  Created POG node OR number 547 from NNF node 177
c Line #459.  Created POG node OR number 548 from NNF node 178
c Line #460.  Created POG node OR number 549 from NNF node 179
c Line #461.  Created POG node OR number 550 from NNF node 180
c Line #462.  Created POG node OR number 551 from NNF node 181
c Line #463.  Created POG node OR number 552 from NNF node 182
c Line #464.  Created POG node OR number 553 from NNF node 183
c Line #465.  Created POG node OR number 554 from NNF node 184
c Line #466.  Created POG node OR number 555 from NNF node 185
c Line #467.  Created POG node OR number 556 from NNF node 186
c Line #468.  Created POG node OR number 557 from NNF node 187
c Line #469. Created POG AND Node 558 to hold literals between NNF nodes 187 and 1
c Line #469.  Adding edge between POG nodes 557 and 558
c Line #470. Created POG AND Node 559 to hold literals between NNF nodes 187 and 2
c Line #470.  Adding edge between POG nodes 557 and 559
c Line #471. Created POG AND Node 560 to hold literals between NNF nodes 186 and 187
c Line #471.  Adding edge between POG nodes 556 and 560
c Line #472. Created POG AND Node 561 to hold literals between NNF nodes 186 and 2
c Line #472.  Adding edge between POG nodes 556 and 561
c Line #473. Created POG AND Node 562 to hold literals between NNF nodes 185 and 186
c Line #473.  Adding edge between POG nodes 555 and 562
c Line #474. Created POG AND Node 563 to hold literals between NNF nodes 185 and 89
c Line #474.  Adding edge between POG nodes 555 and 563
c Line #475. Created POG AND Node 564 to hold literals between NNF nodes 184 and 185
c Line #475.  Adding edge between POG nodes 554 and 564
c Line #476. Created POG AND Node 565 to hold literals between NNF nodes 184 and 91
c Line #476.  Adding edge between POG nodes 554 and 565
c Line #477. Created POG AND Node 566 to hold literals between NNF nodes 183 and 184
c Line #477.  Adding edge between POG nodes 553 and 566
c Line #478. Created POG AND Node 567 to hold literals between NNF nodes 183 and 93
c Line #478.  Adding edge between POG nodes 553 and 567
c Line #479. Created POG AND Node 568 to hold literals between NNF nodes 182 and 183
c Line #479.  Adding edge between POG nodes 552 and 568
c Line #480. Created POG AND Node 569 to hold literals between NNF nodes 182 and 95
c Line #480.  Adding edge between POG nodes 552 and 569
c Line #481. Created POG AND Node 570 to hold literals between NNF nodes 181 and 182
c Line #481.  Adding edge between POG nodes 551 and 570
c Line #482. Created POG AND Node 571 to hold literals between NNF nodes 181 and 97
c Line #482.  Adding edge between POG nodes 551 and 571
c Line #483. Created POG AND Node 572 to hold literals between NNF nodes 180 and 181
c Line #483.  Adding edge between POG nodes 550 and 572
c Line #484. Created POG AND Node 573 to hold literals between NNF nodes 180 and 99
c Line #484.  Adding edge between POG nodes 550 and 573
c Line #485. Created POG AND Node 574 to hold literals between NNF nodes 179 and 180
c Line #485.  Adding edge between POG nodes 549 and 574
c Line #486. Created POG AND Node 575 to hold literals between NNF nodes 179 and 101
c Line #486.  Adding edge between POG nodes 549 and 575
c Line #487. Created POG AND Node 576 to hold literals between NNF nodes 178 and 179
c Line #487.  Adding edge between POG nodes 548 and 576
c Line #488. Created POG AND Node 577 to hold literals between NNF nodes 178 and 103
c Line #488.  Adding edge between POG nodes 548 and 577
c Line #489. Created POG AND Node 578 to hold literals between NNF nodes 177 and 178
c Line #489.  Adding edge between POG nodes 547 and 578
c Line #490. Created POG AND Node 579 to hold literals between NNF nodes 177 and 105
c Line #490.  Adding edge between POG nodes 547 and 579
c Line #491. Created POG AND Node 580 to hold literals between NNF nodes 176 and 177
c Line #491.  Adding edge between POG nodes 546 and 580
c Line #492. Created POG AND Node 581 to hold literals between NNF nodes 176 and 107
c Line #492.  Adding edge between POG nodes 546 and 581
c Line #493. Created POG AND Node 582 to hold literals between NNF nodes 175 and 176
c Line #493.  Adding edge between POG nodes 545 and 582
c Line #494. Created POG AND Node 583 to hold literals between NNF nodes 175 and 109
c Line #494.  Adding edge between POG nodes 545 and 583
c Line #495. Created POG AND Node 584 to hold literals between NNF nodes 174 and 175
c Line #495.  Adding edge between POG nodes 544 and 584
c Line #496. Created POG AND Node 585 to hold literals between NNF nodes 174 and 111
c Line #496.  Adding edge between POG nodes 544 and 585
c Line #497. Created POG AND Node 586 to hold literals between NNF nodes 173 and 174
c Line #497.  Adding edge between POG nodes 543 and 586
c Line #498. Created POG AND Node 587 to hold literals between NNF nodes 173 and 113
c Line #498.  Adding edge between POG nodes 543 and 587
c Line #499. Created POG AND Node 588 to hold literals between NNF nodes 172 and 173
c Line #499.  Adding edge between POG nodes 542 and 588
c Line #500. Created POG AND Node 589 to hold literals between NNF nodes 172 and 115
c Line #500.  Adding edge between POG nodes 542 and 589
c Line #501. Created POG AND Node 590 to hold literals between NNF nodes 171 and 172
c Line #501.  Adding edge between POG nodes 541 and 590
c Line #502. Created POG AND Node 591 to hold literals between NNF nodes 171 and 117
c Line #502.  Adding edge between POG nodes 541 and 591
c Line #503. Created POG AND Node 592 to hold literals between NNF nodes 170 and 171
c Line #503.  Adding edge between POG nodes 540 and 592
c Line #504. Created POG AND Node 593 to hold literals between NNF nodes 170 and 119
c Line #504.  Adding edge between POG nodes 540 and 593
c Line #505. Created POG AND Node 594 to hold literals between NNF nodes 169 and 170
c Line #505.  Adding edge between POG nodes 539 and 594
c Line #506. Created POG AND Node 595 to hold literals between NNF nodes 169 and 120
c Line #506.  Adding edge between POG nodes 539 and 595
c Line #507. Created POG AND Node 596 to hold literals between NNF nodes 168 and 169
c Line #507.  Adding edge between POG nodes 538 and 596
c Line #508. Created POG AND Node 597 to hold literals between NNF nodes 168 and 121
c Line #508.  Adding edge between POG nodes 538 and 597
c Line #509. Created POG AND Node 598 to hold literals between NNF nodes 167 and 168
c Line #509.  Adding edge between POG nodes 537 and 598
c Line #510. Created POG AND Node 599 to hold literals between NNF nodes 167 and 122
c Line #510.  Adding edge between POG nodes 537 and 599
c Line #511. Created POG AND Node 600 to hold literals between NNF nodes 166 and 167
c Line #511.  Adding edge between POG nodes 536 and 600
c Line #512. Created POG AND Node 601 to hold literals between NNF nodes 166 and 123
c Line #512.  Adding edge between POG nodes 536 and 601
c Line #513. Created POG AND Node 602 to hold literals between NNF nodes 165 and 166
c Line #513.  Adding edge between POG nodes 535 and 602
c Line #514. Created POG AND Node 603 to hold literals between NNF nodes 165 and 124
c Line #514.  Adding edge between POG nodes 535 and 603
c Line #515. Created POG AND Node 604 to hold literals between NNF nodes 164 and 165
c Line #515.  Adding edge between POG nodes 534 and 604
c Line #516. Created POG AND Node 605 to hold literals between NNF nodes 164 and 125
c Line #516.  Adding edge between POG nodes 534 and 605
c Line #517. Created POG AND Node 606 to hold literals between NNF nodes 163 and 164
c Line #517.  Adding edge between POG nodes 533 and 606
c Line #518. Created POG AND Node 607 to hold literals between NNF nodes 163 and 126
c Line #518.  Adding edge between POG nodes 533 and 607
c Line #519. Created POG AND Node 608 to hold literals between NNF nodes 162 and 163
c Line #519.  Adding edge between POG nodes 532 and 608
c Line #520. Created POG AND Node 609 to hold literals between NNF nodes 162 and 127
c Line #520.  Adding edge between POG nodes 532 and 609
c Line #521. Created POG AND Node 610 to hold literals between NNF nodes 161 and 162
c Line #521.  Adding edge between POG nodes 531 and 610
c Line #522. Created POG AND Node 611 to hold literals between NNF nodes 161 and 128
c Line #522.  Adding edge between POG nodes 531 and 611
c Line #523. Created POG AND Node 612 to hold literals between NNF nodes 160 and 161
c Line #523.  Adding edge between POG nodes 530 and 612
c Line #524. Created POG AND Node 613 to hold literals between NNF nodes 160 and 129
c Line #524.  Adding edge between POG nodes 530 and 613
c Line #525. Created POG AND Node 614 to hold literals between NNF nodes 159 and 160
c Line #525.  Adding edge between POG nodes 529 and 614
c Line #526. Created POG AND Node 615 to hold literals between NNF nodes 159 and 130
c Line #526.  Adding edge between POG nodes 529 and 615
c Line #527. Created POG AND Node 616 to hold literals between NNF nodes 158 and 159
c Line #527.  Adding edge between POG nodes 528 and 616
c Line #528. Created POG AND Node 617 to hold literals between NNF nodes 158 and 131
c Line #528.  Adding edge between POG nodes 528 and 617
c Line #529. Created POG AND Node 618 to hold literals between NNF nodes 157 and 158
c Line #529.  Adding edge between POG nodes 527 and 618
c Line #530. Created POG AND Node 619 to hold literals between NNF nodes 157 and 132
c Line #530.  Adding edge between POG nodes 527 and 619
c Line #531. Created POG AND Node 620 to hold literals between NNF nodes 156 and 157
c Line #531.  Adding edge between POG nodes 526 and 620
c Line #532. Created POG AND Node 621 to hold literals between NNF nodes 156 and 133
c Line #532.  Adding edge between POG nodes 526 and 621
c Line #533. Created POG AND Node 622 to hold literals between NNF nodes 155 and 156
c Line #533.  Adding edge between POG nodes 525 and 622
c Line #534. Created POG AND Node 623 to hold literals between NNF nodes 155 and 134
c Line #534.  Adding edge between POG nodes 525 and 623
c Line #535. Created POG AND Node 624 to hold literals between NNF nodes 154 and 155
c Line #535.  Adding edge between POG nodes 524 and 624
c Line #536. Created POG AND Node 625 to hold literals between NNF nodes 154 and 135
c Line #536.  Adding edge between POG nodes 524 and 625
c Line #537. Created POG AND Node 626 to hold literals between NNF nodes 153 and 154
c Line #537.  Adding edge between POG nodes 523 and 626
c Line #538. Created POG AND Node 627 to hold literals between NNF nodes 153 and 136
c Line #538.  Adding edge between POG nodes 523 and 627
c Line #539. Created POG AND Node 628 to hold literals between NNF nodes 152 and 153
c Line #539.  Adding edge between POG nodes 522 and 628
c Line #540. Created POG AND Node 629 to hold literals between NNF nodes 152 and 137
c Line #540.  Adding edge between POG nodes 522 and 629
c Line #541. Created POG AND Node 630 to hold literals between NNF nodes 151 and 152
c Line #541.  Adding edge between POG nodes 521 and 630
c Line #542. Created POG AND Node 631 to hold literals between NNF nodes 151 and 138
c Line #542.  Adding edge between POG nodes 521 and 631
c Line #543. Created POG AND Node 632 to hold literals between NNF nodes 150 and 151
c Line #543.  Adding edge between POG nodes 520 and 632
c Line #544. Created POG AND Node 633 to hold literals between NNF nodes 150 and 139
c Line #544.  Adding edge between POG nodes 520 and 633
c Line #545. Created POG AND Node 634 to hold literals between NNF nodes 149 and 150
c Line #545.  Adding edge between POG nodes 519 and 634
c Line #546. Created POG AND Node 635 to hold literals between NNF nodes 149 and 140
c Line #546.  Adding edge between POG nodes 519 and 635
c Line #547. Created POG AND Node 636 to hold literals between NNF nodes 148 and 149
c Line #547.  Adding edge between POG nodes 518 and 636
c Line #548. Created POG AND Node 637 to hold literals between NNF nodes 148 and 141
c Line #548.  Adding edge between POG nodes 518 and 637
c Line #549. Created POG AND Node 638 to hold literals between NNF nodes 147 and 148
c Line #549.  Adding edge between POG nodes 517 and 638
c Line #550. Created POG AND Node 639 to hold literals between NNF nodes 147 and 142
c Line #550.  Adding edge between POG nodes 517 and 639
c Line #551. Created POG AND Node 640 to hold literals between NNF nodes 146 and 147
c Line #551.  Adding edge between POG nodes 516 and 640
c Line #552. Created POG AND Node 641 to hold literals between NNF nodes 146 and 143
c Line #552.  Adding edge between POG nodes 516 and 641
c Line #553. Created POG AND Node 642 to hold literals between NNF nodes 145 and 146
c Line #553.  Adding edge between POG nodes 515 and 642
c Line #554. Created POG AND Node 643 to hold literals between NNF nodes 145 and 144
c Line #554.  Adding edge between POG nodes 515 and 643
c Line #555. Created POG AND Node 644 to hold literals between NNF nodes 4 and 145
c Line #555.  Adding edge between POG nodes 93 and 644
c Line #556. Created POG AND Node 645 to hold literals between NNF nodes 3 and 4
c Line #556.  Adding edge between POG nodes 92 and 645
c Setting root literal to 92
c Read D4 NNF file with 556 nodes (187 explicit) and 369 edges
c Before optimization:
N90_FALSE()
N91_TRUE()
N92_OR(645)
N93_OR(514,644)
N94_OR(512,513)
N95_OR(507,511)
N96_OR(505,506)
N97_OR(500,504)
N98_OR(498,499)
N99_OR(493,497)
N100_OR(491,492)
N101_OR(486,490)
N102_OR(484,485)
N103_OR(479,483)
N104_OR(477,478)
N105_OR(472,476)
N106_OR(470,471)
N107_OR(465,469)
N108_OR(463,464)
N109_OR(458,462)
N110_OR(456,457)
N111_OR(451,455)
N112_OR(449,450)
N113_OR(444,448)
N114_OR(442,443)
N115_OR(437,441)
N116_OR(435,436)
N117_OR(430,434)
N118_OR(428,429)
N119_OR(423,427)
N120_OR(421,422)
N121_OR(416,420)
N122_OR(414,415)
N123_OR(409,413)
N124_OR(407,408)
N125_OR(402,406)
N126_OR(400,401)
N127_OR(395,399)
N128_OR(393,394)
N129_OR(388,392)
N130_OR(386,387)
N131_OR(381,385)
N132_OR(379,380)
N133_OR(374,378)
N134_OR(372,373)
N135_OR(367,371)
N136_OR(365,366)
N137_OR(360,364)
N138_OR(358,359)
N139_OR(353,357)
N140_OR(351,352)
N141_OR(346,350)
N142_OR(344,345)
N143_OR(339,343)
N144_OR(337,338)
N145_OR(332,336)
N146_OR(327,331)
N147_OR(322,326)
N148_OR(317,321)
N149_OR(312,316)
N150_OR(307,311)
N151_OR(302,306)
N152_OR(297,301)
N153_OR(292,296)
N154_OR(287,291)
N155_OR(282,286)
N156_OR(277,281)
N157_OR(272,276)
N158_OR(267,271)
N159_OR(262,266)
N160_OR(257,261)
N161_OR(252,256)
N162_OR(247,251)
N163_OR(242,246)
N164_OR(237,241)
N165_OR(232,236)
N166_OR(227,231)
N167_OR(222,226)
N168_OR(217,221)
N169_OR(212,216)
N170_OR(207,211)
N171_OR(202,206)
N172_OR(197,201)
N173_OR(192,196)
N174_OR(187,191)
N175_OR(182,186)
N176_OR(180,181)
N177_OR(178,179)
N178_AND(-47,-46,91)
N179_AND(47,91)
N180_AND(-3,177)
N181_AND(3,-47,91)
N182_AND(-48,176)
N183_OR(184,185)
N184_AND(-47,91)
N185_AND(47,91)
N186_AND(48,3,183)
N187_AND(-4,175)
N188_OR(189,190)
N189_AND(-48,3,183)
N190_AND(48,-3,177)
N191_AND(4,188)
N192_AND(-49,174)
N193_OR(194,195)
N194_AND(-48,3,183)
N195_AND(48,3,183)
N196_AND(49,4,193)
N197_AND(-5,173)
N198_OR(199,200)
N199_AND(-49,4,193)
N200_AND(49,-4,175)
N201_AND(5,198)
N202_AND(-50,172)
N203_OR(204,205)
N204_AND(-49,3,183)
N205_AND(49,3,183)
N206_AND(50,5,4,203)
N207_AND(-6,171)
N208_OR(209,210)
N209_AND(-50,5,4,203)
N210_AND(50,-5,173)
N211_AND(6,208)
N212_AND(-51,170)
N213_OR(214,215)
N214_AND(-50,5,4,203)
N215_AND(50,5,4,203)
N216_AND(51,6,213)
N217_AND(-7,169)
N218_OR(219,220)
N219_AND(-51,6,213)
N220_AND(51,-6,171)
N221_AND(7,218)
N222_AND(-52,168)
N223_OR(224,225)
N224_AND(-51,5,4,203)
N225_AND(51,5,4,203)
N226_AND(52,7,6,223)
N227_AND(-8,167)
N228_OR(229,230)
N229_AND(-52,7,6,223)
N230_AND(52,-7,169)
N231_AND(8,228)
N232_AND(-53,166)
N233_OR(234,235)
N234_AND(-52,7,6,223)
N235_AND(52,7,6,223)
N236_AND(53,8,233)
N237_AND(-9,165)
N238_OR(239,240)
N239_AND(-53,8,233)
N240_AND(53,-8,167)
N241_AND(9,238)
N242_AND(-54,164)
N243_OR(244,245)
N244_AND(-53,7,6,223)
N245_AND(53,7,6,223)
N246_AND(54,9,8,243)
N247_AND(-10,163)
N248_OR(249,250)
N249_AND(-54,9,8,243)
N250_AND(54,-9,165)
N251_AND(10,248)
N252_AND(-55,162)
N253_OR(254,255)
N254_AND(-54,9,8,243)
N255_AND(54,9,8,243)
N256_AND(55,10,253)
N257_AND(-11,161)
N258_OR(259,260)
N259_AND(-55,10,253)
N260_AND(55,-10,163)
N261_AND(11,258)
N262_AND(-56,160)
N263_OR(264,265)
N264_AND(-55,9,8,243)
N265_AND(55,9,8,243)
N266_AND(56,11,10,263)
N267_AND(-12,159)
N268_OR(269,270)
N269_AND(-56,11,10,263)
N270_AND(56,-11,161)
N271_AND(12,268)
N272_AND(-57,158)
N273_OR(274,275)
N274_AND(-56,11,10,263)
N275_AND(56,11,10,263)
N276_AND(57,12,273)
N277_AND(-13,157)
N278_OR(279,280)
N279_AND(-57,12,273)
N280_AND(57,-12,159)
N281_AND(13,278)
N282_AND(-58,156)
N283_OR(284,285)
N284_AND(-57,11,10,263)
N285_AND(57,11,10,263)
N286_AND(58,13,12,283)
N287_AND(-14,155)
N288_OR(289,290)
N289_AND(-58,13,12,283)
N290_AND(58,-13,157)
N291_AND(14,288)
N292_AND(-59,154)
N293_OR(294,295)
N294_AND(-58,13,12,283)
N295_AND(58,13,12,283)
N296_AND(59,14,293)
N297_AND(-15,153)
N298_OR(299,300)
N299_AND(-59,14,293)
N300_AND(59,-14,155)
N301_AND(15,298)
N302_AND(-60,152)
N303_OR(304,305)
N304_AND(-59,13,12,283)
N305_AND(59,13,12,283)
N306_AND(60,15,14,303)
N307_AND(-16,151)
N308_OR(309,310)
N309_AND(-60,15,14,303)
N310_AND(60,-15,153)
N311_AND(16,308)
N312_AND(-61,150)
N313_OR(314,315)
N314_AND(-60,15,14,303)
N315_AND(60,15,14,303)
N316_AND(61,16,313)
N317_AND(-17,149)
N318_OR(319,320)
N319_AND(-61,16,313)
N320_AND(61,-16,151)
N321_AND(17,318)
N322_AND(-62,148)
N323_OR(324,325)
N324_AND(-61,15,14,303)
N325_AND(61,15,14,303)
N326_AND(62,17,16,323)
N327_AND(-18,147)
N328_OR(329,330)
N329_AND(-62,17,16,323)
N330_AND(62,-17,149)
N331_AND(18,328)
N332_AND(-63,146)
N333_OR(334,335)
N334_AND(-62,17,16,323)
N335_AND(62,17,16,323)
N336_AND(63,18,333)
N337_AND(-19,145)
N338_AND(19,90)
N339_AND(-64,144)
N340_OR(341,342)
N341_AND(-63,17,16,323)
N342_AND(63,17,16,323)
N343_AND(64,19,18,340)
N344_AND(-20,143)
N345_AND(20,90)
N346_AND(-65,142)
N347_OR(348,349)
N348_AND(-64,19,18,340)
N349_AND(64,19,18,340)
N350_AND(65,20,347)
N351_AND(-21,141)
N352_AND(21,90)
N353_AND(-66,140)
N354_OR(355,356)
N355_AND(-65,19,18,340)
N356_AND(65,19,18,340)
N357_AND(66,21,20,354)
N358_AND(-22,139)
N359_AND(22,90)
N360_AND(-67,138)
N361_OR(362,363)
N362_AND(-66,21,20,354)
N363_AND(66,21,20,354)
N364_AND(67,22,361)
N365_AND(-23,137)
N366_AND(23,90)
N367_AND(-68,136)
N368_OR(369,370)
N369_AND(-67,21,20,354)
N370_AND(67,21,20,354)
N371_AND(68,23,22,368)
N372_AND(-24,135)
N373_AND(24,90)
N374_AND(-69,134)
N375_OR(376,377)
N376_AND(-68,23,22,368)
N377_AND(68,23,22,368)
N378_AND(69,24,375)
N379_AND(-25,133)
N380_AND(25,90)
N381_AND(-70,132)
N382_OR(383,384)
N383_AND(-69,23,22,368)
N384_AND(69,23,22,368)
N385_AND(70,25,24,382)
N386_AND(-26,131)
N387_AND(26,90)
N388_AND(-71,130)
N389_OR(390,391)
N390_AND(-70,25,24,382)
N391_AND(70,25,24,382)
N392_AND(71,26,389)
N393_AND(-27,129)
N394_AND(27,90)
N395_AND(-72,128)
N396_OR(397,398)
N397_AND(-71,25,24,382)
N398_AND(71,25,24,382)
N399_AND(72,27,26,396)
N400_AND(-28,127)
N401_AND(28,90)
N402_AND(-73,126)
N403_OR(404,405)
N404_AND(-72,27,26,396)
N405_AND(72,27,26,396)
N406_AND(73,28,403)
N407_AND(-29,125)
N408_AND(29,90)
N409_AND(-74,124)
N410_OR(411,412)
N411_AND(-73,27,26,396)
N412_AND(73,27,26,396)
N413_AND(74,29,28,410)
N414_AND(-30,123)
N415_AND(30,90)
N416_AND(-75,122)
N417_OR(418,419)
N418_AND(-74,29,28,410)
N419_AND(74,29,28,410)
N420_AND(75,30,417)
N421_AND(-31,121)
N422_AND(31,90)
N423_AND(-76,120)
N424_OR(425,426)
N425_AND(-75,29,28,410)
N426_AND(75,29,28,410)
N427_AND(76,31,30,424)
N428_AND(-32,119)
N429_AND(32,90)
N430_AND(-77,118)
N431_OR(432,433)
N432_AND(-76,31,30,424)
N433_AND(76,31,30,424)
N434_AND(77,32,431)
N435_AND(-33,117)
N436_AND(33,90)
N437_AND(-78,116)
N438_OR(439,440)
N439_AND(-77,31,30,424)
N440_AND(77,31,30,424)
N441_AND(78,33,32,438)
N442_AND(-34,115)
N443_AND(34,90)
N444_AND(-79,114)
N445_OR(446,447)
N446_AND(-78,33,32,438)
N447_AND(78,33,32,438)
N448_AND(79,34,445)
N449_AND(-35,113)
N450_AND(35,90)
N451_AND(-80,112)
N452_OR(453,454)
N453_AND(-79,33,32,438)
N454_AND(79,33,32,438)
N455_AND(80,35,34,452)
N456_AND(-36,111)
N457_AND(36,90)
N458_AND(-81,110)
N459_OR(460,461)
N460_AND(-80,35,34,452)
N461_AND(80,35,34,452)
N462_AND(81,36,459)
N463_AND(-37,109)
N464_AND(37,90)
N465_AND(-82,108)
N466_OR(467,468)
N467_AND(-81,35,34,452)
N468_AND(81,35,34,452)
N469_AND(82,37,36,466)
N470_AND(-38,107)
N471_AND(38,90)
N472_AND(-83,106)
N473_OR(474,475)
N474_AND(-82,37,36,466)
N475_AND(82,37,36,466)
N476_AND(83,38,473)
N477_AND(-39,105)
N478_AND(39,90)
N479_AND(-84,104)
N480_OR(481,482)
N481_AND(-83,37,36,466)
N482_AND(83,37,36,466)
N483_AND(84,39,38,480)
N484_AND(-40,103)
N485_AND(40,90)
N486_AND(-85,102)
N487_OR(488,489)
N488_AND(-84,39,38,480)
N489_AND(84,39,38,480)
N490_AND(85,40,487)
N491_AND(-41,101)
N492_AND(41,90)
N493_AND(-86,100)
N494_OR(495,496)
N495_AND(-85,39,38,480)
N496_AND(85,39,38,480)
N497_AND(86,41,40,494)
N498_AND(-42,99)
N499_AND(42,90)
N500_AND(-87,98)
N501_OR(502,503)
N502_AND(-86,41,40,494)
N503_AND(86,41,40,494)
N504_AND(87,42,501)
N505_AND(-43,97)
N506_AND(43,90)
N507_AND(-88,96)
N508_OR(509,510)
N509_AND(-87,41,40,494)
N510_AND(87,41,40,494)
N511_AND(88,43,42,508)
N512_AND(-44,95)
N513_AND(44,90)
N514_AND(-89,2,1,94)
N515_OR(642,643)
N516_OR(640,641)
N517_OR(638,639)
N518_OR(636,637)
N519_OR(634,635)
N520_OR(632,633)
N521_OR(630,631)
N522_OR(628,629)
N523_OR(626,627)
N524_OR(624,625)
N525_OR(622,623)
N526_OR(620,621)
N527_OR(618,619)
N528_OR(616,617)
N529_OR(614,615)
N530_OR(612,613)
N531_OR(610,611)
N532_OR(608,609)
N533_OR(606,607)
N534_OR(604,605)
N535_OR(602,603)
N536_OR(600,601)
N537_OR(598,599)
N538_OR(596,597)
N539_OR(594,595)
N540_OR(592,593)
N541_OR(590,591)
N542_OR(588,589)
N543_OR(586,587)
N544_OR(584,585)
N545_OR(582,583)
N546_OR(580,581)
N547_OR(578,579)
N548_OR(576,577)
N549_OR(574,575)
N550_OR(572,573)
N551_OR(570,571)
N552_OR(568,569)
N553_OR(566,567)
N554_OR(564,565)
N555_OR(562,563)
N556_OR(560,561)
N557_OR(558,559)
N558_AND(-2,90)
N559_AND(2,1,91)
N560_AND(-47,557)
N561_AND(47,2,1,91)
N562_AND(-48,3,556)
N563_AND(48,2,1,3,183)
N564_AND(-49,4,555)
N565_AND(49,2,1,4,193)
N566_AND(-50,5,554)
N567_AND(50,2,1,5,4,203)
N568_AND(-51,6,553)
N569_AND(51,2,1,6,213)
N570_AND(-52,7,552)
N571_AND(52,2,1,7,6,223)
N572_AND(-53,8,551)
N573_AND(53,2,1,8,233)
N574_AND(-54,9,550)
N575_AND(54,2,1,9,8,243)
N576_AND(-55,10,549)
N577_AND(55,2,1,10,253)
N578_AND(-56,11,548)
N579_AND(56,2,1,11,10,263)
N580_AND(-57,12,547)
N581_AND(57,2,1,12,273)
N582_AND(-58,13,546)
N583_AND(58,2,1,13,12,283)
N584_AND(-59,14,545)
N585_AND(59,2,1,14,293)
N586_AND(-60,15,544)
N587_AND(60,2,1,15,14,303)
N588_AND(-61,16,543)
N589_AND(61,2,1,16,313)
N590_AND(-62,17,542)
N591_AND(62,2,1,17,16,323)
N592_AND(-63,18,541)
N593_AND(63,2,1,18,333)
N594_AND(-64,19,540)
N595_AND(64,2,1,19,18,340)
N596_AND(-65,20,539)
N597_AND(65,2,1,20,347)
N598_AND(-66,21,538)
N599_AND(66,2,1,21,20,354)
N600_AND(-67,22,537)
N601_AND(67,2,1,22,361)
N602_AND(-68,23,536)
N603_AND(68,2,1,23,22,368)
N604_AND(-69,24,535)
N605_AND(69,2,1,24,375)
N606_AND(-70,25,534)
N607_AND(70,2,1,25,24,382)
N608_AND(-71,26,533)
N609_AND(71,2,1,26,389)
N610_AND(-72,27,532)
N611_AND(72,2,1,27,26,396)
N612_AND(-73,28,531)
N613_AND(73,2,1,28,403)
N614_AND(-74,29,530)
N615_AND(74,2,1,29,28,410)
N616_AND(-75,30,529)
N617_AND(75,2,1,30,417)
N618_AND(-76,31,528)
N619_AND(76,2,1,31,30,424)
N620_AND(-77,32,527)
N621_AND(77,2,1,32,431)
N622_AND(-78,33,526)
N623_AND(78,2,1,33,32,438)
N624_AND(-79,34,525)
N625_AND(79,2,1,34,445)
N626_AND(-80,35,524)
N627_AND(80,2,1,35,34,452)
N628_AND(-81,36,523)
N629_AND(81,2,1,36,459)
N630_AND(-82,37,522)
N631_AND(82,2,1,37,36,466)
N632_AND(-83,38,521)
N633_AND(83,2,1,38,473)
N634_AND(-84,39,520)
N635_AND(84,2,1,39,38,480)
N636_AND(-85,40,519)
N637_AND(85,2,1,40,487)
N638_AND(-86,41,518)
N639_AND(86,2,1,41,40,494)
N640_AND(-87,42,517)
N641_AND(87,2,1,42,501)
N642_AND(-88,43,516)
N643_AND(88,2,1,43,42,508)
N644_AND(89,44,515)
N645_AND(-45,93)
ROOT 92
c Compressing POG with 556 nodes (556 accessible from root) and root literal 92
c   Converted node N178_AND(-47,-46,91) to N90_AND(-47,-46)
c   Converted node N177_OR(178,179) to N91_OR(90,47)
c   Converted node N180_AND(-3,177) to N92_AND(-3,91)
c   Converted node N181_AND(3,-47,91) to N93_AND(3,-47)
c   Converted node N176_OR(180,181) to N94_OR(92,93)
c   Converted node N182_AND(-48,176) to N95_AND(-48,94)
c   Converted node N183_OR(184,185) to N96_OR(-47,47)
c   Converted node N186_AND(48,3,183) to N97_AND(48,3,96)
c   Converted node N175_OR(182,186) to N98_OR(95,97)
c   Converted node N187_AND(-4,175) to N99_AND(-4,98)
c   Converted node N189_AND(-48,3,183) to N100_AND(-48,3,96)
c   Converted node N190_AND(48,-3,177) to N101_AND(48,-3,91)
c   Converted node N188_OR(189,190) to N102_OR(100,101)
c   Converted node N191_AND(4,188) to N103_AND(4,102)
c   Converted node N174_OR(187,191) to N104_OR(99,103)
c   Converted node N192_AND(-49,174) to N105_AND(-49,104)
c   Converted node N194_AND(-48,3,183) to N106_AND(-48,3,96)
c   Converted node N195_AND(48,3,183) to N107_AND(48,3,96)
c   Converted node N193_OR(194,195) to N108_OR(106,107)
c   Converted node N196_AND(49,4,193) to N109_AND(49,4,108)
c   Converted node N173_OR(192,196) to N110_OR(105,109)
c   Converted node N197_AND(-5,173) to N111_AND(-5,110)
c   Converted node N199_AND(-49,4,193) to N112_AND(-49,4,108)
c   Converted node N200_AND(49,-4,175) to N113_AND(49,-4,98)
c   Converted node N198_OR(199,200) to N114_OR(112,113)
c   Converted node N201_AND(5,198) to N115_AND(5,114)
c   Converted node N172_OR(197,201) to N116_OR(111,115)
c   Converted node N202_AND(-50,172) to N117_AND(-50,116)
c   Converted node N204_AND(-49,3,183) to N118_AND(-49,3,96)
c   Converted node N205_AND(49,3,183) to N119_AND(49,3,96)
c   Converted node N203_OR(204,205) to N120_OR(118,119)
c   Converted node N206_AND(50,5,4,203) to N121_AND(50,5,4,120)
c   Converted node N171_OR(202,206) to N122_OR(117,121)
c   Converted node N207_AND(-6,171) to N123_AND(-6,122)
c   Converted node N209_AND(-50,5,4,203) to N124_AND(-50,5,4,120)
c   Converted node N210_AND(50,-5,173) to N125_AND(50,-5,110)
c   Converted node N208_OR(209,210) to N126_OR(124,125)
c   Converted node N211_AND(6,208) to N127_AND(6,126)
c   Converted node N170_OR(207,211) to N128_OR(123,127)
c   Converted node N212_AND(-51,170) to N129_AND(-51,128)
c   Converted node N214_AND(-50,5,4,203) to N130_AND(-50,5,4,120)
c   Converted node N215_AND(50,5,4,203) to N131_AND(50,5,4,120)
c   Converted node N213_OR(214,215) to N132_OR(130,131)
c   Converted node N216_AND(51,6,213) to N133_AND(51,6,132)
c   Converted node N169_OR(212,216) to N134_OR(129,133)
c   Converted node N217_AND(-7,169) to N135_AND(-7,134)
c   Converted node N219_AND(-51,6,213) to N136_AND(-51,6,132)
c   Converted node N220_AND(51,-6,171) to N137_AND(51,-6,122)
c   Converted node N218_OR(219,220) to N138_OR(136,137)
c   Converted node N221_AND(7,218) to N139_AND(7,138)
c   Converted node N168_OR(217,221) to N140_OR(135,139)
c   Converted node N222_AND(-52,168) to N141_AND(-52,140)
c   Converted node N224_AND(-51,5,4,203) to N142_AND(-51,5,4,120)
c   Converted node N225_AND(51,5,4,203) to N143_AND(51,5,4,120)
c   Converted node N223_OR(224,225) to N144_OR(142,143)
c   Converted node N226_AND(52,7,6,223) to N145_AND(52,7,6,144)
c   Converted node N167_OR(222,226) to N146_OR(141,145)
c   Converted node N227_AND(-8,167) to N147_AND(-8,146)
c   Converted node N229_AND(-52,7,6,223) to N148_AND(-52,7,6,144)
c   Converted node N230_AND(52,-7,169) to N149_AND(52,-7,134)
c   Converted node N228_OR(229,230) to N150_OR(148,149)
c   Converted node N231_AND(8,228) to N151_AND(8,150)
c   Converted node N166_OR(227,231) to N152_OR(147,151)
c   Converted node N232_AND(-53,166) to N153_AND(-53,152)
c   Converted node N234_AND(-52,7,6,223) to N154_AND(-52,7,6,144)
c   Converted node N235_AND(52,7,6,223) to N155_AND(52,7,6,144)
c   Converted node N233_OR(234,235) to N156_OR(154,155)
c   Converted node N236_AND(53,8,233) to N157_AND(53,8,156)
c   Converted node N165_OR(232,236) to N158_OR(153,157)
c   Converted node N237_AND(-9,165) to N159_AND(-9,158)
c   Converted node N239_AND(-53,8,233) to N160_AND(-53,8,156)
c   Converted node N240_AND(53,-8,167) to N161_AND(53,-8,146)
c   Converted node N238_OR(239,240) to N162_OR(160,161)
c   Converted node N241_AND(9,238) to N163_AND(9,162)
c   Converted node N164_OR(237,241) to N164_OR(159,163)
c   Converted node N242_AND(-54,164) to N165_AND(-54,164)
c   Converted node N244_AND(-53,7,6,223) to N166_AND(-53,7,6,144)
c   Converted node N245_AND(53,7,6,223) to N167_AND(53,7,6,144)
c   Converted node N243_OR(244,245) to N168_OR(166,167)
c   Converted node N246_AND(54,9,8,243) to N169_AND(54,9,8,168)
c   Converted node N163_OR(242,246) to N170_OR(165,169)
c   Converted node N247_AND(-10,163) to N171_AND(-10,170)
c   Converted node N249_AND(-54,9,8,243) to N172_AND(-54,9,8,168)
c   Converted node N250_AND(54,-9,165) to N173_AND(54,-9,158)
c   Converted node N248_OR(249,250) to N174_OR(172,173)
c   Converted node N251_AND(10,248) to N175_AND(10,174)
c   Converted node N162_OR(247,251) to N176_OR(171,175)
c   Converted node N252_AND(-55,162) to N177_AND(-55,176)
c   Converted node N254_AND(-54,9,8,243) to N178_AND(-54,9,8,168)
c   Converted node N255_AND(54,9,8,243) to N179_AND(54,9,8,168)
c   Converted node N253_OR(254,255) to N180_OR(178,179)
c   Converted node N256_AND(55,10,253) to N181_AND(55,10,180)
c   Converted node N161_OR(252,256) to N182_OR(177,181)
c   Converted node N257_AND(-11,161) to N183_AND(-11,182)
c   Converted node N259_AND(-55,10,253) to N184_AND(-55,10,180)
c   Converted node N260_AND(55,-10,163) to N185_AND(55,-10,170)
c   Converted node N258_OR(259,260) to N186_OR(184,185)
c   Converted node N261_AND(11,258) to N187_AND(11,186)
c   Converted node N160_OR(257,261) to N188_OR(183,187)
c   Converted node N262_AND(-56,160) to N189_AND(-56,188)
c   Converted node N264_AND(-55,9,8,243) to N190_AND(-55,9,8,168)
c   Converted node N265_AND(55,9,8,243) to N191_AND(55,9,8,168)
c   Converted node N263_OR(264,265) to N192_OR(190,191)
c   Converted node N266_AND(56,11,10,263) to N193_AND(56,11,10,192)
c   Converted node N159_OR(262,266) to N194_OR(189,193)
c   Converted node N267_AND(-12,159) to N195_AND(-12,194)
c   Converted node N269_AND(-56,11,10,263) to N196_AND(-56,11,10,192)
c   Converted node N270_AND(56,-11,161) to N197_AND(56,-11,182)
c   Converted node N268_OR(269,270) to N198_OR(196,197)
c   Converted node N271_AND(12,268) to N199_AND(12,198)
c   Converted node N158_OR(267,271) to N200_OR(195,199)
c   Converted node N272_AND(-57,158) to N201_AND(-57,200)
c   Converted node N274_AND(-56,11,10,263) to N202_AND(-56,11,10,192)
c   Converted node N275_AND(56,11,10,263) to N203_AND(56,11,10,192)
c   Converted node N273_OR(274,275) to N204_OR(202,203)
c   Converted node N276_AND(57,12,273) to N205_AND(57,12,204)
c   Converted node N157_OR(272,276) to N206_OR(201,205)
c   Converted node N277_AND(-13,157) to N207_AND(-13,206)
c   Converted node N279_AND(-57,12,273) to N208_AND(-57,12,204)
c   Converted node N280_AND(57,-12,159) to N209_AND(57,-12,194)
c   Converted node N278_OR(279,280) to N210_OR(208,209)
c   Converted node N281_AND(13,278) to N211_AND(13,210)
c   Converted node N156_OR(277,281) to N212_OR(207,211)
c   Converted node N282_AND(-58,156) to N213_AND(-58,212)
c   Converted node N284_AND(-57,11,10,263) to N214_AND(-57,11,10,192)
c   Converted node N285_AND(57,11,10,263) to N215_AND(57,11,10,192)
c   Converted node N283_OR(284,285) to N216_OR(214,215)
c   Converted node N286_AND(58,13,12,283) to N217_AND(58,13,12,216)
c   Converted node N155_OR(282,286) to N218_OR(213,217)
c   Converted node N287_AND(-14,155) to N219_AND(-14,218)
c   Converted node N289_AND(-58,13,12,283) to N220_AND(-58,13,12,216)
c   Converted node N290_AND(58,-13,157) to N221_AND(58,-13,206)
c   Converted node N288_OR(289,290) to N222_OR(220,221)
c   Converted node N291_AND(14,288) to N223_AND(14,222)
c   Converted node N154_OR(287,291) to N224_OR(219,223)
c   Converted node N292_AND(-59,154) to N225_AND(-59,224)
c   Converted node N294_AND(-58,13,12,283) to N226_AND(-58,13,12,216)
c   Converted node N295_AND(58,13,12,283) to N227_AND(58,13,12,216)
c   Converted node N293_OR(294,295) to N228_OR(226,227)
c   Converted node N296_AND(59,14,293) to N229_AND(59,14,228)
c   Converted node N153_OR(292,296) to N230_OR(225,229)
c   Converted node N297_AND(-15,153) to N231_AND(-15,230)
c   Converted node N299_AND(-59,14,293) to N232_AND(-59,14,228)
c   Converted node N300_AND(59,-14,155) to N233_AND(59,-14,218)
c   Converted node N298_OR(299,300) to N234_OR(232,233)
c   Converted node N301_AND(15,298) to N235_AND(15,234)
c   Converted node N152_OR(297,301) to N236_OR(231,235)
c   Converted node N302_AND(-60,152) to N237_AND(-60,236)
c   Converted node N304_AND(-59,13,12,283) to N238_AND(-59,13,12,216)
c   Converted node N305_AND(59,13,12,283) to N239_AND(59,13,12,216)
c   Converted node N303_OR(304,305) to N240_OR(238,239)
c   Converted node N306_AND(60,15,14,303) to N241_AND(60,15,14,240)
c   Converted node N151_OR(302,306) to N242_OR(237,241)
c   Converted node N307_AND(-16,151) to N243_AND(-16,242)
c   Converted node N309_AND(-60,15,14,303) to N244_AND(-60,15,14,240)
c   Converted node N310_AND(60,-15,153) to N245_AND(60,-15,230)
c   Converted node N308_OR(309,310) to N246_OR(244,245)
c   Converted node N311_AND(16,308) to N247_AND(16,246)
c   Converted node N150_OR(307,311) to N248_OR(243,247)
c   Converted node N312_AND(-61,150) to N249_AND(-61,248)
c   Converted node N314_AND(-60,15,14,303) to N250_AND(-60,15,14,240)
c   Converted node N315_AND(60,15,14,303) to N251_AND(60,15,14,240)
c   Converted node N313_OR(314,315) to N252_OR(250,251)
c   Converted node N316_AND(61,16,313) to N253_AND(61,16,252)
c   Converted node N149_OR(312,316) to N254_OR(249,253)
c   Converted node N317_AND(-17,149) to N255_AND(-17,254)
c   Converted node N319_AND(-61,16,313) to N256_AND(-61,16,252)
c   Converted node N320_AND(61,-16,151) to N257_AND(61,-16,242)
c   Converted node N318_OR(319,320) to N258_OR(256,257)
c   Converted node N321_AND(17,318) to N259_AND(17,258)
c   Converted node N148_OR(317,321) to N260_OR(255,259)
c   Converted node N322_AND(-62,148) to N261_AND(-62,260)
c   Converted node N324_AND(-61,15,14,303) to N262_AND(-61,15,14,240)
c   Converted node N325_AND(61,15,14,303) to N263_AND(61,15,14,240)
c   Converted node N323_OR(324,325) to N264_OR(262,263)
c   Converted node N326_AND(62,17,16,323) to N265_AND(62,17,16,264)
c   Converted node N147_OR(322,326) to N266_OR(261,265)
c   Converted node N327_AND(-18,147) to N267_AND(-18,266)
c   Converted node N329_AND(-62,17,16,323) to N268_AND(-62,17,16,264)
c   Converted node N330_AND(62,-17,149) to N269_AND(62,-17,254)
c   Converted node N328_OR(329,330) to N270_OR(268,269)
c   Converted node N331_AND(18,328) to N271_AND(18,270)
c   Converted node N146_OR(327,331) to N272_OR(267,271)
c   Converted node N332_AND(-63,146) to N273_AND(-63,272)
c   Converted node N334_AND(-62,17,16,323) to N274_AND(-62,17,16,264)
c   Converted node N335_AND(62,17,16,323) to N275_AND(62,17,16,264)
c   Converted node N333_OR(334,335) to N276_OR(274,275)
c   Converted node N336_AND(63,18,333) to N277_AND(63,18,276)
c   Converted node N145_OR(332,336) to N278_OR(273,277)
c   Converted node N337_AND(-19,145) to N279_AND(-19,278)
c   Converted node N338_AND(19,90) to FALSE
c   Node N144_OR(337,338)  maps to 279
c   Converted node N339_AND(-64,144) to N280_AND(-64,279)
c   Converted node N341_AND(-63,17,16,323) to N281_AND(-63,17,16,264)
c   Converted node N342_AND(63,17,16,323) to N282_AND(63,17,16,264)
c   Converted node N340_OR(341,342) to N283_OR(281,282)
c   Converted node N343_AND(64,19,18,340) to N284_AND(64,19,18,283)
c   Converted node N143_OR(339,343) to N285_OR(280,284)
c   Converted node N344_AND(-20,143) to N286_AND(-20,285)
c   Converted node N345_AND(20,90) to FALSE
c   Node N142_OR(344,345)  maps to 286
c   Converted node N346_AND(-65,142) to N287_AND(-65,286)
c   Converted node N348_AND(-64,19,18,340) to N288_AND(-64,19,18,283)
c   Converted node N349_AND(64,19,18,340) to N289_AND(64,19,18,283)
c   Converted node N347_OR(348,349) to N290_OR(288,289)
c   Converted node N350_AND(65,20,347) to N291_AND(65,20,290)
c   Converted node N141_OR(346,350) to N292_OR(287,291)
c   Converted node N351_AND(-21,141) to N293_AND(-21,292)
c   Converted node N352_AND(21,90) to FALSE
c   Node N140_OR(351,352)  maps to 293
c   Converted node N353_AND(-66,140) to N294_AND(-66,293)
c   Converted node N355_AND(-65,19,18,340) to N295_AND(-65,19,18,283)
c   Converted node N356_AND(65,19,18,340) to N296_AND(65,19,18,283)
c   Converted node N354_OR(355,356) to N297_OR(295,296)
c   Converted node N357_AND(66,21,20,354) to N298_AND(66,21,20,297)
c   Converted node N139_OR(353,357) to N299_OR(294,298)
c   Converted node N358_AND(-22,139) to N300_AND(-22,299)
c   Converted node N359_AND(22,90) to FALSE
c   Node N138_OR(358,359)  maps to 300
c   Converted node N360_AND(-67,138) to N301_AND(-67,300)
c   Converted node N362_AND(-66,21,20,354) to N302_AND(-66,21,20,297)
c   Converted node N363_AND(66,21,20,354) to N303_AND(66,21,20,297)
c   Converted node N361_OR(362,363) to N304_OR(302,303)
c   Converted node N364_AND(67,22,361) to N305_AND(67,22,304)
c   Converted node N137_OR(360,364) to N306_OR(301,305)
c   Converted node N365_AND(-23,137) to N307_AND(-23,306)
c   Converted node N366_AND(23,90) to FALSE
c   Node N136_OR(365,366)  maps to 307
c   Converted node N367_AND(-68,136) to N308_AND(-68,307)
c   Converted node N369_AND(-67,21,20,354) to N309_AND(-67,21,20,297)
c   Converted node N370_AND(67,21,20,354) to N310_AND(67,21,20,297)
c   Converted node N368_OR(369,370) to N311_OR(309,310)
c   Converted node N371_AND(68,23,22,368) to N312_AND(68,23,22,311)
c   Converted node N135_OR(367,371) to N313_OR(308,312)
c   Converted node N372_AND(-24,135) to N314_AND(-24,313)
c   Converted node N373_AND(24,90) to FALSE
c   Node N134_OR(372,373)  maps to 314
c   Converted node N374_AND(-69,134) to N315_AND(-69,314)
c   Converted node N376_AND(-68,23,22,368) to N316_AND(-68,23,22,311)
c   Converted node N377_AND(68,23,22,368) to N317_AND(68,23,22,311)
c   Converted node N375_OR(376,377) to N318_OR(316,317)
c   Converted node N378_AND(69,24,375) to N319_AND(69,24,318)
c   Converted node N133_OR(374,378) to N320_OR(315,319)
c   Converted node N379_AND(-25,133) to N321_AND(-25,320)
c   Converted node N380_AND(25,90) to FALSE
c   Node N132_OR(379,380)  maps to 321
c   Converted node N381_AND(-70,132) to N322_AND(-70,321)
c   Converted node N383_AND(-69,23,22,368) to N323_AND(-69,23,22,311)
c   Converted node N384_AND(69,23,22,368) to N324_AND(69,23,22,311)
c   Converted node N382_OR(383,384) to N325_OR(323,324)
c   Converted node N385_AND(70,25,24,382) to N326_AND(70,25,24,325)
c   Converted node N131_OR(381,385) to N327_OR(322,326)
c   Converted node N386_AND(-26,131) to N328_AND(-26,327)
c   Converted node N387_AND(26,90) to FALSE
c   Node N130_OR(386,387)  maps to 328
c   Converted node N388_AND(-71,130) to N329_AND(-71,328)
c   Converted node N390_AND(-70,25,24,382) to N330_AND(-70,25,24,325)
c   Converted node N391_AND(70,25,24,382) to N331_AND(70,25,24,325)
c   Converted node N389_OR(390,391) to N332_OR(330,331)
c   Converted node N392_AND(71,26,389) to N333_AND(71,26,332)
c   Converted node N129_OR(388,392) to N334_OR(329,333)
c   Converted node N393_AND(-27,129) to N335_AND(-27,334)
c   Converted node N394_AND(27,90) to FALSE
c   Node N128_OR(393,394)  maps to 335
c   Converted node N395_AND(-72,128) to N336_AND(-72,335)
c   Converted node N397_AND(-71,25,24,382) to N337_AND(-71,25,24,325)
c   Converted node N398_AND(71,25,24,382) to N338_AND(71,25,24,325)
c   Converted node N396_OR(397,398) to N339_OR(337,338)
c   Converted node N399_AND(72,27,26,396) to N340_AND(72,27,26,339)
c   Converted node N127_OR(395,399) to N341_OR(336,340)
c   Converted node N400_AND(-28,127) to N342_AND(-28,341)
c   Converted node N401_AND(28,90) to FALSE
c   Node N126_OR(400,401)  maps to 342
c   Converted node N402_AND(-73,126) to N343_AND(-73,342)
c   Converted node N404_AND(-72,27,26,396) to N344_AND(-72,27,26,339)
c   Converted node N405_AND(72,27,26,396) to N345_AND(72,27,26,339)
c   Converted node N403_OR(404,405) to N346_OR(344,345)
c   Converted node N406_AND(73,28,403) to N347_AND(73,28,346)
c   Converted node N125_OR(402,406) to N348_OR(343,347)
c   Converted node N407_AND(-29,125) to N349_AND(-29,348)
c   Converted node N408_AND(29,90) to FALSE
c   Node N124_OR(407,408)  maps to 349
c   Converted node N409_AND(-74,124) to N350_AND(-74,349)
c   Converted node N411_AND(-73,27,26,396) to N351_AND(-73,27,26,339)
c   Converted node N412_AND(73,27,26,396) to N352_AND(73,27,26,339)
c   Converted node N410_OR(411,412) to N353_OR(351,352)
c   Converted node N413_AND(74,29,28,410) to N354_AND(74,29,28,353)
c   Converted node N123_OR(409,413) to N355_OR(350,354)
c   Converted node N414_AND(-30,123) to N356_AND(-30,355)
c   Converted node N415_AND(30,90) to FALSE
c   Node N122_OR(414,415)  maps to 356
c   Converted node N416_AND(-75,122) to N357_AND(-75,356)
c   Converted node N418_AND(-74,29,28,410) to N358_AND(-74,29,28,353)
c   Converted node N419_AND(74,29,28,410) to N359_AND(74,29,28,353)
c   Converted node N417_OR(418,419) to N360_OR(358,359)
c   Converted node N420_AND(75,30,417) to N361_AND(75,30,360)
c   Converted node N121_OR(416,420) to N362_OR(357,361)
c   Converted node N421_AND(-31,121) to N363_AND(-31,362)
c   Converted node N422_AND(31,90) to FALSE
c   Node N120_OR(421,422)  maps to 363
c   Converted node N423_AND(-76,120) to N364_AND(-76,363)
c   Converted node N425_AND(-75,29,28,410) to N365_AND(-75,29,28,353)
c   Converted node N426_AND(75,29,28,410) to N366_AND(75,29,28,353)
c   Converted node N424_OR(425,426) to N367_OR(365,366)
c   Converted node N427_AND(76,31,30,424) to N368_AND(76,31,30,367)
c   Converted node N119_OR(423,427) to N369_OR(364,368)
c   Converted node N428_AND(-32,119) to N370_AND(-32,369)
c   Converted node N429_AND(32,90) to FALSE
c   Node N118_OR(428,429)  maps to 370
c   Converted node N430_AND(-77,118) to N371_AND(-77,370)
c   Converted node N432_AND(-76,31,30,424) to N372_AND(-76,31,30,367)
c   Converted node N433_AND(76,31,30,424) to N373_AND(76,31,30,367)
c   Converted node N431_OR(432,433) to N374_OR(372,373)
c   Converted node N434_AND(77,32,431) to N375_AND(77,32,374)
c   Converted node N117_OR(430,434) to N376_OR(371,375)
c   Converted node N435_AND(-33,117) to N377_AND(-33,376)
c   Converted node N436_AND(33,90) to FALSE
c   Node N116_OR(435,436)  maps to 377
c   Converted node N437_AND(-78,116) to N378_AND(-78,377)
c   Converted node N439_AND(-77,31,30,424) to N379_AND(-77,31,30,367)
c   Converted node N440_AND(77,31,30,424) to N380_AND(77,31,30,367)
c   Converted node N438_OR(439,440) to N381_OR(379,380)
c   Converted node N441_AND(78,33,32,438) to N382_AND(78,33,32,381)
c   Converted node N115_OR(437,441) to N383_OR(378,382)
c   Converted node N442_AND(-34,115) to N384_AND(-34,383)
c   Converted node N443_AND(34,90) to FALSE
c   Node N114_OR(442,443)  maps to 384
c   Converted node N444_AND(-79,114) to N385_AND(-79,384)
c   Converted node N446_AND(-78,33,32,438) to N386_AND(-78,33,32,381)
c   Converted node N447_AND(78,33,32,438) to N387_AND(78,33,32,381)
c   Converted node N445_OR(446,447) to N388_OR(386,387)
c   Converted node N448_AND(79,34,445) to N389_AND(79,34,388)
c   Converted node N113_OR(444,448) to N390_OR(385,389)
c   Converted node N449_AND(-35,113) to N391_AND(-35,390)
c   Converted node N450_AND(35,90) to FALSE
c   Node N112_OR(449,450)  maps to 391
c   Converted node N451_AND(-80,112) to N392_AND(-80,391)
c   Converted node N453_AND(-79,33,32,438) to N393_AND(-79,33,32,381)
c   Converted node N454_AND(79,33,32,438) to N394_AND(79,33,32,381)
c   Converted node N452_OR(453,454) to N395_OR(393,394)
c   Converted node N455_AND(80,35,34,452) to N396_AND(80,35,34,395)
c   Converted node N111_OR(451,455) to N397_OR(392,396)
c   Converted node N456_AND(-36,111) to N398_AND(-36,397)
c   Converted node N457_AND(36,90) to FALSE
c   Node N110_OR(456,457)  maps to 398
c   Converted node N458_AND(-81,110) to N399_AND(-81,398)
c   Converted node N460_AND(-80,35,34,452) to N400_AND(-80,35,34,395)
c   Converted node N461_AND(80,35,34,452) to N401_AND(80,35,34,395)
c   Converted node N459_OR(460,461) to N402_OR(400,401)
c   Converted node N462_AND(81,36,459) to N403_AND(81,36,402)
c   Converted node N109_OR(458,462) to N404_OR(399,403)
c   Converted node N463_AND(-37,109) to N405_AND(-37,404)
c   Converted node N464_AND(37,90) to FALSE
c   Node N108_OR(463,464)  maps to 405
c   Converted node N465_AND(-82,108) to N406_AND(-82,405)
c   Converted node N467_AND(-81,35,34,452) to N407_AND(-81,35,34,395)
c   Converted node N468_AND(81,35,34,452) to N408_AND(81,35,34,395)
c   Converted node N466_OR(467,468) to N409_OR(407,408)
c   Converted node N469_AND(82,37,36,466) to N410_AND(82,37,36,409)
c   Converted node N107_OR(465,469) to N411_OR(406,410)
c   Converted node N470_AND(-38,107) to N412_AND(-38,411)
c   Converted node N471_AND(38,90) to FALSE
c   Node N106_OR(470,471)  maps to 412
c   Converted node N472_AND(-83,106) to N413_AND(-83,412)
c   Converted node N474_AND(-82,37,36,466) to N414_AND(-82,37,36,409)
c   Converted node N475_AND(82,37,36,466) to N415_AND(82,37,36,409)
c   Converted node N473_OR(474,475) to N416_OR(414,415)
c   Converted node N476_AND(83,38,473) to N417_AND(83,38,416)
c   Converted node N105_OR(472,476) to N418_OR(413,417)
c   Converted node N477_AND(-39,105) to N419_AND(-39,418)
c   Converted node N478_AND(39,90) to FALSE
c   Node N104_OR(477,478)  maps to 419
c   Converted node N479_AND(-84,104) to N420_AND(-84,419)
c   Converted node N481_AND(-83,37,36,466) to N421_AND(-83,37,36,409)
c   Converted node N482_AND(83,37,36,466) to N422_AND(83,37,36,409)
c   Converted node N480_OR(481,482) to N423_OR(421,422)
c   Converted node N483_AND(84,39,38,480) to N424_AND(84,39,38,423)
c   Converted node N103_OR(479,483) to N425_OR(420,424)
c   Converted node N484_AND(-40,103) to N426_AND(-40,425)
c   Converted node N485_AND(40,90) to FALSE
c   Node N102_OR(484,485)  maps to 426
c   Converted node N486_AND(-85,102) to N427_AND(-85,426)
c   Converted node N488_AND(-84,39,38,480) to N428_AND(-84,39,38,423)
c   Converted node N489_AND(84,39,38,480) to N429_AND(84,39,38,423)
c   Converted node N487_OR(488,489) to N430_OR(428,429)
c   Converted node N490_AND(85,40,487) to N431_AND(85,40,430)
c   Converted node N101_OR(486,490) to N432_OR(427,431)
c   Converted node N491_AND(-41,101) to N433_AND(-41,432)
c   Converted node N492_AND(41,90) to FALSE
c   Node N100_OR(491,492)  maps to 433
c   Converted node N493_AND(-86,100) to N434_AND(-86,433)
c   Converted node N495_AND(-85,39,38,480) to N435_AND(-85,39,38,423)
c   Converted node N496_AND(85,39,38,480) to N436_AND(85,39,38,423)
c   Converted node N494_OR(495,496) to N437_OR(435,436)
c   Converted node N497_AND(86,41,40,494) to N438_AND(86,41,40,437)
c   Converted node N99_OR(493,497) to N439_OR(434,438)
c   Converted node N498_AND(-42,99) to N440_AND(-42,439)
c   Converted node N499_AND(42,90) to FALSE
c   Node N98_OR(498,499)  maps to 440
c   Converted node N500_AND(-87,98) to N441_AND(-87,440)
c   Converted node N502_AND(-86,41,40,494) to N442_AND(-86,41,40,437)
c   Converted node N503_AND(86,41,40,494) to N443_AND(86,41,40,437)
c   Converted node N501_OR(502,503) to N444_OR(442,443)
c   Converted node N504_AND(87,42,501) to N445_AND(87,42,444)
c   Converted node N97_OR(500,504) to N446_OR(441,445)
c   Converted node N505_AND(-43,97) to N447_AND(-43,446)
c   Converted node N506_AND(43,90) to FALSE
c   Node N96_OR(505,506)  maps to 447
c   Converted node N507_AND(-88,96) to N448_AND(-88,447)
c   Converted node N509_AND(-87,41,40,494) to N449_AND(-87,41,40,437)
c   Converted node N510_AND(87,41,40,494) to N450_AND(87,41,40,437)
c   Converted node N508_OR(509,510) to N451_OR(449,450)
c   Converted node N511_AND(88,43,42,508) to N452_AND(88,43,42,451)
c   Converted node N95_OR(507,511) to N453_OR(448,452)
c   Converted node N512_AND(-44,95) to N454_AND(-44,453)
c   Converted node N513_AND(44,90) to FALSE
c   Node N94_OR(512,513)  maps to 454
c   Converted node N514_AND(-89,2,1,94) to N455_AND(-89,2,1,454)
c   Converted node N558_AND(-2,90) to FALSE
c   Converted node N559_AND(2,1,91) to N456_AND(2,1)
c   Node N557_OR(558,559)  maps to 456
c   Converted node N560_AND(-47,557) to N457_AND(-47,456)
c   Converted node N561_AND(47,2,1,91) to N458_AND(47,2,1)
c   Converted node N556_OR(560,561) to N459_OR(457,458)
c   Converted node N562_AND(-48,3,556) to N460_AND(-48,3,459)
c   Converted node N563_AND(48,2,1,3,183) to N461_AND(48,2,1,3,96)
c   Converted node N555_OR(562,563) to N462_OR(460,461)
c   Converted node N564_AND(-49,4,555) to N463_AND(-49,4,462)
c   Converted node N565_AND(49,2,1,4,193) to N464_AND(49,2,1,4,108)
c   Converted node N554_OR(564,565) to N465_OR(463,464)
c   Converted node N566_AND(-50,5,554) to N466_AND(-50,5,465)
c   Converted node N567_AND(50,2,1,5,4,203) to N467_AND(50,2,1,5,4,120)
c   Converted node N553_OR(566,567) to N468_OR(466,467)
c   Converted node N568_AND(-51,6,553) to N469_AND(-51,6,468)
c   Converted node N569_AND(51,2,1,6,213) to N470_AND(51,2,1,6,132)
c   Converted node N552_OR(568,569) to N471_OR(469,470)
c   Converted node N570_AND(-52,7,552) to N472_AND(-52,7,471)
c   Converted node N571_AND(52,2,1,7,6,223) to N473_AND(52,2,1,7,6,144)
c   Converted node N551_OR(570,571) to N474_OR(472,473)
c   Converted node N572_AND(-53,8,551) to N475_AND(-53,8,474)
c   Converted node N573_AND(53,2,1,8,233) to N476_AND(53,2,1,8,156)
c   Converted node N550_OR(572,573) to N477_OR(475,476)
c   Converted node N574_AND(-54,9,550) to N478_AND(-54,9,477)
c   Converted node N575_AND(54,2,1,9,8,243) to N479_AND(54,2,1,9,8,168)
c   Converted node N549_OR(574,575) to N480_OR(478,479)
c   Converted node N576_AND(-55,10,549) to N481_AND(-55,10,480)
c   Converted node N577_AND(55,2,1,10,253) to N482_AND(55,2,1,10,180)
c   Converted node N548_OR(576,577) to N483_OR(481,482)
c   Converted node N578_AND(-56,11,548) to N484_AND(-56,11,483)
c   Converted node N579_AND(56,2,1,11,10,263) to N485_AND(56,2,1,11,10,192)
c   Converted node N547_OR(578,579) to N486_OR(484,485)
c   Converted node N580_AND(-57,12,547) to N487_AND(-57,12,486)
c   Converted node N581_AND(57,2,1,12,273) to N488_AND(57,2,1,12,204)
c   Converted node N546_OR(580,581) to N489_OR(487,488)
c   Converted node N582_AND(-58,13,546) to N490_AND(-58,13,489)
c   Converted node N583_AND(58,2,1,13,12,283) to N491_AND(58,2,1,13,12,216)
c   Converted node N545_OR(582,583) to N492_OR(490,491)
c   Converted node N584_AND(-59,14,545) to N493_AND(-59,14,492)
c   Converted node N585_AND(59,2,1,14,293) to N494_AND(59,2,1,14,228)
c   Converted node N544_OR(584,585) to N495_OR(493,494)
c   Converted node N586_AND(-60,15,544) to N496_AND(-60,15,495)
c   Converted node N587_AND(60,2,1,15,14,303) to N497_AND(60,2,1,15,14,240)
c   Converted node N543_OR(586,587) to N498_OR(496,497)
c   Converted node N588_AND(-61,16,543) to N499_AND(-61,16,498)
c   Converted node N589_AND(61,2,1,16,313) to N500_AND(61,2,1,16,252)
c   Converted node N542_OR(588,589) to N501_OR(499,500)
c   Converted node N590_AND(-62,17,542) to N502_AND(-62,17,501)
c   Converted node N591_AND(62,2,1,17,16,323) to N503_AND(62,2,1,17,16,264)
c   Converted node N541_OR(590,591) to N504_OR(502,503)
c   Converted node N592_AND(-63,18,541) to N505_AND(-63,18,504)
c   Converted node N593_AND(63,2,1,18,333) to N506_AND(63,2,1,18,276)
c   Converted node N540_OR(592,593) to N507_OR(505,506)
c   Converted node N594_AND(-64,19,540) to N508_AND(-64,19,507)
c   Converted node N595_AND(64,2,1,19,18,340) to N509_AND(64,2,1,19,18,283)
c   Converted node N539_OR(594,595) to N510_OR(508,509)
c   Converted node N596_AND(-65,20,539) to N511_AND(-65,20,510)
c   Converted node N597_AND(65,2,1,20,347) to N512_AND(65,2,1,20,290)
c   Converted node N538_OR(596,597) to N513_OR(511,512)
c   Converted node N598_AND(-66,21,538) to N514_AND(-66,21,513)
c   Converted node N599_AND(66,2,1,21,20,354) to N515_AND(66,2,1,21,20,297)
c   Converted node N537_OR(598,599) to N516_OR(514,515)
c   Converted node N600_AND(-67,22,537) to N517_AND(-67,22,516)
c   Converted node N601_AND(67,2,1,22,361) to N518_AND(67,2,1,22,304)
c   Converted node N536_OR(600,601) to N519_OR(517,518)
c   Converted node N602_AND(-68,23,536) to N520_AND(-68,23,519)
c   Converted node N603_AND(68,2,1,23,22,368) to N521_AND(68,2,1,23,22,311)
c   Converted node N535_OR(602,603) to N522_OR(520,521)
c   Converted node N604_AND(-69,24,535) to N523_AND(-69,24,522)
c   Converted node N605_AND(69,2,1,24,375) to N524_AND(69,2,1,24,318)
c   Converted node N534_OR(604,605) to N525_OR(523,524)
c   Converted node N606_AND(-70,25,534) to N526_AND(-70,25,525)
c   Converted node N607_AND(70,2,1,25,24,382) to N527_AND(70,2,1,25,24,325)
c   Converted node N533_OR(606,607) to N528_OR(526,527)
c   Converted node N608_AND(-71,26,533) to N529_AND(-71,26,528)
c   Converted node N609_AND(71,2,1,26,389) to N530_AND(71,2,1,26,332)
c   Converted node N532_OR(608,609) to N531_OR(529,530)
c   Converted node N610_AND(-72,27,532) to N532_AND(-72,27,531)
c   Converted node N611_AND(72,2,1,27,26,396) to N533_AND(72,2,1,27,26,339)
c   Converted node N531_OR(610,611) to N534_OR(532,533)
c   Converted node N612_AND(-73,28,531) to N535_AND(-73,28,534)
c   Converted node N613_AND(73,2,1,28,403) to N536_AND(73,2,1,28,346)
c   Converted node N530_OR(612,613) to N537_OR(535,536)
c   Converted node N614_AND(-74,29,530) to N538_AND(-74,29,537)
c   Converted node N615_AND(74,2,1,29,28,410) to N539_AND(74,2,1,29,28,353)
c   Converted node N529_OR(614,615) to N540_OR(538,539)
c   Converted node N616_AND(-75,30,529) to N541_AND(-75,30,540)
c   Converted node N617_AND(75,2,1,30,417) to N542_AND(75,2,1,30,360)
c   Converted node N528_OR(616,617) to N543_OR(541,542)
c   Converted node N618_AND(-76,31,528) to N544_AND(-76,31,543)
c   Converted node N619_AND(76,2,1,31,30,424) to N545_AND(76,2,1,31,30,367)
c   Converted node N527_OR(618,619) to N546_OR(544,545)
c   Converted node N620_AND(-77,32,527) to N547_AND(-77,32,546)
c   Converted node N621_AND(77,2,1,32,431) to N548_AND(77,2,1,32,374)
c   Converted node N526_OR(620,621) to N549_OR(547,548)
c   Converted node N622_AND(-78,33,526) to N550_AND(-78,33,549)
c   Converted node N623_AND(78,2,1,33,32,438) to N551_AND(78,2,1,33,32,381)
c   Converted node N525_OR(622,623) to N552_OR(550,551)
c   Converted node N624_AND(-79,34,525) to N553_AND(-79,34,552)
c   Converted node N625_AND(79,2,1,34,445) to N554_AND(79,2,1,34,388)
c   Converted node N524_OR(624,625) to N555_OR(553,554)
c   Converted node N626_AND(-80,35,524) to N556_AND(-80,35,555)
c   Converted node N627_AND(80,2,1,35,34,452) to N557_AND(80,2,1,35,34,395)
c   Converted node N523_OR(626,627) to N558_OR(556,557)
c   Converted node N628_AND(-81,36,523) to N559_AND(-81,36,558)
c   Converted node N629_AND(81,2,1,36,459) to N560_AND(81,2,1,36,402)
c   Converted node N522_OR(628,629) to N561_OR(559,560)
c   Converted node N630_AND(-82,37,522) to N562_AND(-82,37,561)
c   Converted node N631_AND(82,2,1,37,36,466) to N563_AND(82,2,1,37,36,409)
c   Converted node N521_OR(630,631) to N564_OR(562,563)
c   Converted node N632_AND(-83,38,521) to N565_AND(-83,38,564)
c   Converted node N633_AND(83,2,1,38,473) to N566_AND(83,2,1,38,416)
c   Converted node N520_OR(632,633) to N567_OR(565,566)
c   Converted node N634_AND(-84,39,520) to N568_AND(-84,39,567)
c   Converted node N635_AND(84,2,1,39,38,480) to N569_AND(84,2,1,39,38,423)
c   Converted node N519_OR(634,635) to N570_OR(568,569)
c   Converted node N636_AND(-85,40,519) to N571_AND(-85,40,570)
c   Converted node N637_AND(85,2,1,40,487) to N572_AND(85,2,1,40,430)
c   Converted node N518_OR(636,637) to N573_OR(571,572)
c   Converted node N638_AND(-86,41,518) to N574_AND(-86,41,573)
c   Converted node N639_AND(86,2,1,41,40,494) to N575_AND(86,2,1,41,40,437)
c   Converted node N517_OR(638,639) to N576_OR(574,575)
c   Converted node N640_AND(-87,42,517) to N577_AND(-87,42,576)
c   Converted node N641_AND(87,2,1,42,501) to N578_AND(87,2,1,42,444)
c   Converted node N516_OR(640,641) to N579_OR(577,578)
c   Converted node N642_AND(-88,43,516) to N580_AND(-88,43,579)
c   Converted node N643_AND(88,2,1,43,42,508) to N581_AND(88,2,1,43,42,451)
c   Converted node N515_OR(642,643) to N582_OR(580,581)
c   Converted node N644_AND(89,44,515) to N583_AND(89,44,582)
c   Converted node N93_OR(514,644) to N584_OR(455,583)
c   Converted node N645_AND(-45,93) to N585_AND(-45,584)
c Compressed POG has 496 nodes, root literal 585, and 1930 defining clauses
c Before concretizing:
N90_AND(-47,-46)
N91_OR(90,47)
N92_AND(-3,91)
N93_AND(3,-47)
N94_OR(92,93)
N95_AND(-48,94)
N96_OR(-47,47)
N97_AND(48,3,96)
N98_OR(95,97)
N99_AND(-4,98)
N100_AND(-48,3,96)
N101_AND(48,-3,91)
N102_OR(100,101)
N103_AND(4,102)
N104_OR(99,103)
N105_AND(-49,104)
N106_AND(-48,3,96)
N107_AND(48,3,96)
N108_OR(106,107)
N109_AND(49,4,108)
N110_OR(105,109)
N111_AND(-5,110)
N112_AND(-49,4,108)
N113_AND(49,-4,98)
N114_OR(112,113)
N115_AND(5,114)
N116_OR(111,115)
N117_AND(-50,116)
N118_AND(-49,3,96)
N119_AND(49,3,96)
N120_OR(118,119)
N121_AND(50,5,4,120)
N122_OR(117,121)
N123_AND(-6,122)
N124_AND(-50,5,4,120)
N125_AND(50,-5,110)
N126_OR(124,125)
N127_AND(6,126)
N128_OR(123,127)
N129_AND(-51,128)
N130_AND(-50,5,4,120)
N131_AND(50,5,4,120)
N132_OR(130,131)
N133_AND(51,6,132)
N134_OR(129,133)
N135_AND(-7,134)
N136_AND(-51,6,132)
N137_AND(51,-6,122)
N138_OR(136,137)
N139_AND(7,138)
N140_OR(135,139)
N141_AND(-52,140)
N142_AND(-51,5,4,120)
N143_AND(51,5,4,120)
N144_OR(142,143)
N145_AND(52,7,6,144)
N146_OR(141,145)
N147_AND(-8,146)
N148_AND(-52,7,6,144)
N149_AND(52,-7,134)
N150_OR(148,149)
N151_AND(8,150)
N152_OR(147,151)
N153_AND(-53,152)
N154_AND(-52,7,6,144)
N155_AND(52,7,6,144)
N156_OR(154,155)
N157_AND(53,8,156)
N158_OR(153,157)
N159_AND(-9,158)
N160_AND(-53,8,156)
N161_AND(53,-8,146)
N162_OR(160,161)
N163_AND(9,162)
N164_OR(159,163)
N165_AND(-54,164)
N166_AND(-53,7,6,144)
N167_AND(53,7,6,144)
N168_OR(166,167)
N169_AND(54,9,8,168)
N170_OR(165,169)
N171_AND(-10,170)
N172_AND(-54,9,8,168)
N173_AND(54,-9,158)
N174_OR(172,173)
N175_AND(10,174)
N176_OR(171,175)
N177_AND(-55,176)
N178_AND(-54,9,8,168)
N179_AND(54,9,8,168)
N180_OR(178,179)
N181_AND(55,10,180)
N182_OR(177,181)
N183_AND(-11,182)
N184_AND(-55,10,180)
N185_AND(55,-10,170)
N186_OR(184,185)
N187_AND(11,186)
N188_OR(183,187)
N189_AND(-56,188)
N190_AND(-55,9,8,168)
N191_AND(55,9,8,168)
N192_OR(190,191)
N193_AND(56,11,10,192)
N194_OR(189,193)
N195_AND(-12,194)
N196_AND(-56,11,10,192)
N197_AND(56,-11,182)
N198_OR(196,197)
N199_AND(12,198)
N200_OR(195,199)
N201_AND(-57,200)
N202_AND(-56,11,10,192)
N203_AND(56,11,10,192)
N204_OR(202,203)
N205_AND(57,12,204)
N206_OR(201,205)
N207_AND(-13,206)
N208_AND(-57,12,204)
N209_AND(57,-12,194)
N210_OR(208,209)
N211_AND(13,210)
N212_OR(207,211)
N213_AND(-58,212)
N214_AND(-57,11,10,192)
N215_AND(57,11,10,192)
N216_OR(214,215)
N217_AND(58,13,12,216)
N218_OR(213,217)
N219_AND(-14,218)
N220_AND(-58,13,12,216)
N221_AND(58,-13,206)
N222_OR(220,221)
N223_AND(14,222)
N224_OR(219,223)
N225_AND(-59,224)
N226_AND(-58,13,12,216)
N227_AND(58,13,12,216)
N228_OR(226,227)
N229_AND(59,14,228)
N230_OR(225,229)
N231_AND(-15,230)
N232_AND(-59,14,228)
N233_AND(59,-14,218)
N234_OR(232,233)
N235_AND(15,234)
N236_OR(231,235)
N237_AND(-60,236)
N238_AND(-59,13,12,216)
N239_AND(59,13,12,216)
N240_OR(238,239)
N241_AND(60,15,14,240)
N242_OR(237,241)
N243_AND(-16,242)
N244_AND(-60,15,14,240)
N245_AND(60,-15,230)
N246_OR(244,245)
N247_AND(16,246)
N248_OR(243,247)
N249_AND(-61,248)
N250_AND(-60,15,14,240)
N251_AND(60,15,14,240)
N252_OR(250,251)
N253_AND(61,16,252)
N254_OR(249,253)
N255_AND(-17,254)
N256_AND(-61,16,252)
N257_AND(61,-16,242)
N258_OR(256,257)
N259_AND(17,258)
N260_OR(255,259)
N261_AND(-62,260)
N262_AND(-61,15,14,240)
N263_AND(61,15,14,240)
N264_OR(262,263)
N265_AND(62,17,16,264)
N266_OR(261,265)
N267_AND(-18,266)
N268_AND(-62,17,16,264)
N269_AND(62,-17,254)
N270_OR(268,269)
N271_AND(18,270)
N272_OR(267,271)
N273_AND(-63,272)
N274_AND(-62,17,16,264)
N275_AND(62,17,16,264)
N276_OR(274,275)
N277_AND(63,18,276)
N278_OR(273,277)
N279_AND(-19,278)
N280_AND(-64,279)
N281_AND(-63,17,16,264)
N282_AND(63,17,16,264)
N283_OR(281,282)
N284_AND(64,19,18,283)
N285_OR(280,284)
N286_AND(-20,285)
N287_AND(-65,286)
N288_AND(-64,19,18,283)
N289_AND(64,19,18,283)
N290_OR(288,289)
N291_AND(65,20,290)
N292_OR(287,291)
N293_AND(-21,292)
N294_AND(-66,293)
N295_AND(-65,19,18,283)
N296_AND(65,19,18,283)
N297_OR(295,296)
N298_AND(66,21,20,297)
N299_OR(294,298)
N300_AND(-22,299)
N301_AND(-67,300)
N302_AND(-66,21,20,297)
N303_AND(66,21,20,297)
N304_OR(302,303)
N305_AND(67,22,304)
N306_OR(301,305)
N307_AND(-23,306)
N308_AND(-68,307)
N309_AND(-67,21,20,297)
N310_AND(67,21,20,297)
N311_OR(309,310)
N312_AND(68,23,22,311)
N313_OR(308,312)
N314_AND(-24,313)
N315_AND(-69,314)
N316_AND(-68,23,22,311)
N317_AND(68,23,22,311)
N318_OR(316,317)
N319_AND(69,24,318)
N320_OR(315,319)
N321_AND(-25,320)
N322_AND(-70,321)
N323_AND(-69,23,22,311)
N324_AND(69,23,22,311)
N325_OR(323,324)
N326_AND(70,25,24,325)
N327_OR(322,326)
N328_AND(-26,327)
N329_AND(-71,328)
N330_AND(-70,25,24,325)
N331_AND(70,25,24,325)
N332_OR(330,331)
N333_AND(71,26,332)
N334_OR(329,333)
N335_AND(-27,334)
N336_AND(-72,335)
N337_AND(-71,25,24,325)
N338_AND(71,25,24,325)
N339_OR(337,338)
N340_AND(72,27,26,339)
N341_OR(336,340)
N342_AND(-28,341)
N343_AND(-73,342)
N344_AND(-72,27,26,339)
N345_AND(72,27,26,339)
N346_OR(344,345)
N347_AND(73,28,346)
N348_OR(343,347)
N349_AND(-29,348)
N350_AND(-74,349)
N351_AND(-73,27,26,339)
N352_AND(73,27,26,339)
N353_OR(351,352)
N354_AND(74,29,28,353)
N355_OR(350,354)
N356_AND(-30,355)
N357_AND(-75,356)
N358_AND(-74,29,28,353)
N359_AND(74,29,28,353)
N360_OR(358,359)
N361_AND(75,30,360)
N362_OR(357,361)
N363_AND(-31,362)
N364_AND(-76,363)
N365_AND(-75,29,28,353)
N366_AND(75,29,28,353)
N367_OR(365,366)
N368_AND(76,31,30,367)
N369_OR(364,368)
N370_AND(-32,369)
N371_AND(-77,370)
N372_AND(-76,31,30,367)
N373_AND(76,31,30,367)
N374_OR(372,373)
N375_AND(77,32,374)
N376_OR(371,375)
N377_AND(-33,376)
N378_AND(-78,377)
N379_AND(-77,31,30,367)
N380_AND(77,31,30,367)
N381_OR(379,380)
N382_AND(78,33,32,381)
N383_OR(378,382)
N384_AND(-34,383)
N385_AND(-79,384)
N386_AND(-78,33,32,381)
N387_AND(78,33,32,381)
N388_OR(386,387)
N389_AND(79,34,388)
N390_OR(385,389)
N391_AND(-35,390)
N392_AND(-80,391)
N393_AND(-79,33,32,381)
N394_AND(79,33,32,381)
N395_OR(393,394)
N396_AND(80,35,34,395)
N397_OR(392,396)
N398_AND(-36,397)
N399_AND(-81,398)
N400_AND(-80,35,34,395)
N401_AND(80,35,34,395)
N402_OR(400,401)
N403_AND(81,36,402)
N404_OR(399,403)
N405_AND(-37,404)
N406_AND(-82,405)
N407_AND(-81,35,34,395)
N408_AND(81,35,34,395)
N409_OR(407,408)
N410_AND(82,37,36,409)
N411_OR(406,410)
N412_AND(-38,411)
N413_AND(-83,412)
N414_AND(-82,37,36,409)
N415_AND(82,37,36,409)
N416_OR(414,415)
N417_AND(83,38,416)
N418_OR(413,417)
N419_AND(-39,418)
N420_AND(-84,419)
N421_AND(-83,37,36,409)
N422_AND(83,37,36,409)
N423_OR(421,422)
N424_AND(84,39,38,423)
N425_OR(420,424)
N426_AND(-40,425)
N427_AND(-85,426)
N428_AND(-84,39,38,423)
N429_AND(84,39,38,423)
N430_OR(428,429)
N431_AND(85,40,430)
N432_OR(427,431)
N433_AND(-41,432)
N434_AND(-86,433)
N435_AND(-85,39,38,423)
N436_AND(85,39,38,423)
N437_OR(435,436)
N438_AND(86,41,40,437)
N439_OR(434,438)
N440_AND(-42,439)
N441_AND(-87,440)
N442_AND(-86,41,40,437)
N443_AND(86,41,40,437)
N444_OR(442,443)
N445_AND(87,42,444)
N446_OR(441,445)
N447_AND(-43,446)
N448_AND(-88,447)
N449_AND(-87,41,40,437)
N450_AND(87,41,40,437)
N451_OR(449,450)
N452_AND(88,43,42,451)
N453_OR(448,452)
N454_AND(-44,453)
N455_AND(-89,2,1,454)
N456_AND(2,1)
N457_AND(-47,456)
N458_AND(47,2,1)
N459_OR(457,458)
N460_AND(-48,3,459)
N461_AND(48,2,1,3,96)
N462_OR(460,461)
N463_AND(-49,4,462)
N464_AND(49,2,1,4,108)
N465_OR(463,464)
N466_AND(-50,5,465)
N467_AND(50,2,1,5,4,120)
N468_OR(466,467)
N469_AND(-51,6,468)
N470_AND(51,2,1,6,132)
N471_OR(469,470)
N472_AND(-52,7,471)
N473_AND(52,2,1,7,6,144)
N474_OR(472,473)
N475_AND(-53,8,474)
N476_AND(53,2,1,8,156)
N477_OR(475,476)
N478_AND(-54,9,477)
N479_AND(54,2,1,9,8,168)
N480_OR(478,479)
N481_AND(-55,10,480)
N482_AND(55,2,1,10,180)
N483_OR(481,482)
N484_AND(-56,11,483)
N485_AND(56,2,1,11,10,192)
N486_OR(484,485)
N487_AND(-57,12,486)
N488_AND(57,2,1,12,204)
N489_OR(487,488)
N490_AND(-58,13,489)
N491_AND(58,2,1,13,12,216)
N492_OR(490,491)
N493_AND(-59,14,492)
N494_AND(59,2,1,14,228)
N495_OR(493,494)
N496_AND(-60,15,495)
N497_AND(60,2,1,15,14,240)
N498_OR(496,497)
N499_AND(-61,16,498)
N500_AND(61,2,1,16,252)
N501_OR(499,500)
N502_AND(-62,17,501)
N503_AND(62,2,1,17,16,264)
N504_OR(502,503)
N505_AND(-63,18,504)
N506_AND(63,2,1,18,276)
N507_OR(505,506)
N508_AND(-64,19,507)
N509_AND(64,2,1,19,18,283)
N510_OR(508,509)
N511_AND(-65,20,510)
N512_AND(65,2,1,20,290)
N513_OR(511,512)
N514_AND(-66,21,513)
N515_AND(66,2,1,21,20,297)
N516_OR(514,515)
N517_AND(-67,22,516)
N518_AND(67,2,1,22,304)
N519_OR(517,518)
N520_AND(-68,23,519)
N521_AND(68,2,1,23,22,311)
N522_OR(520,521)
N523_AND(-69,24,522)
N524_AND(69,2,1,24,318)
N525_OR(523,524)
N526_AND(-70,25,525)
N527_AND(70,2,1,25,24,325)
N528_OR(526,527)
N529_AND(-71,26,528)
N530_AND(71,2,1,26,332)
N531_OR(529,530)
N532_AND(-72,27,531)
N533_AND(72,2,1,27,26,339)
N534_OR(532,533)
N535_AND(-73,28,534)
N536_AND(73,2,1,28,346)
N537_OR(535,536)
N538_AND(-74,29,537)
N539_AND(74,2,1,29,28,353)
N540_OR(538,539)
N541_AND(-75,30,540)
N542_AND(75,2,1,30,360)
N543_OR(541,542)
N544_AND(-76,31,543)
N545_AND(76,2,1,31,30,367)
N546_OR(544,545)
N547_AND(-77,32,546)
N548_AND(77,2,1,32,374)
N549_OR(547,548)
N550_AND(-78,33,549)
N551_AND(78,2,1,33,32,381)
N552_OR(550,551)
N553_AND(-79,34,552)
N554_AND(79,2,1,34,388)
N555_OR(553,554)
N556_AND(-80,35,555)
N557_AND(80,2,1,35,34,395)
N558_OR(556,557)
N559_AND(-81,36,558)
N560_AND(81,2,1,36,402)
N561_OR(559,560)
N562_AND(-82,37,561)
N563_AND(82,2,1,37,36,409)
N564_OR(562,563)
N565_AND(-83,38,564)
N566_AND(83,2,1,38,416)
N567_OR(565,566)
N568_AND(-84,39,567)
N569_AND(84,2,1,39,38,423)
N570_OR(568,569)
N571_AND(-85,40,570)
N572_AND(85,2,1,40,430)
N573_OR(571,572)
N574_AND(-86,41,573)
N575_AND(86,2,1,41,40,437)
N576_OR(574,575)
N577_AND(-87,42,576)
N578_AND(87,2,1,42,444)
N579_OR(577,578)
N580_AND(-88,43,579)
N581_AND(88,2,1,43,42,451)
N582_OR(580,581)
N583_AND(89,44,582)
N584_OR(455,583)
N585_AND(-45,584)
ROOT 585
c GEN: Time = 0.01.  Generated POG representation
c Justifying root literal 585
c GEN: Time = 0.01.  Deleted asserted clauses
c GEN: Time = 0.01.  Deleted input clauses
c 1541 lines written
c GEN: Formula
c GEN:    input variables: 89
c GEN:    input clauses  : 47
c GEN: POG nodes
c GEN:    product   : 338
c GEN:    sum       : 157
c GEN:    node TOTAL: 495
c GEN: Other nodes
c GEN:    aux product: 0
c GEN: Node visits
c GEN:    product/BCP: 0
c GEN:    product/SAT: 0
c GEN:    sum        : 0
c GEN:    visit TOTAL: 0
c GEN: Lemmas
c GEN:    definitions : 0
c GEN:    applications: 0
c GEN:    duplicates  : 0
c GEN:    merged args : 0
c GEN: SAT Problem Clause Counts (0 instances)
c GEN: Clauses
c GEN:    POG definition       : 1930
c GEN:    AUX definition       : 0
c GEN:    product justification: 0
c GEN:    sum justification    : 0
c GEN:    literal justification: 1
c GEN:    lemma application    : 0
c GEN:    monolithic proof     : 0
c GEN:    clause TOTAL         : 1931
c GEN: Time
c GEN:   SAT execution  : 0.00
c GEN:   other execution: 0.01
c GEN:   time TOTAL     : 0.01
GEN LOG: Elapsed time = 0.009 seconds
GEN OUTCOME: normal
GEN: LOG: size ./tree-exa2-45_low.cpog 545 lines 61028 bytes
FCHECK LOG: Running ../../src/cpog-check -v 5 -1 -S ./tree-exa2-45.sdimacs ./tree-exa2-45_low.cpog
FCHECK LOG: Time limit 2500 seconds
File ./tree-exa2-45.sdimacs. Line 1:Read token.  Token = 'p'.  Type = string
File ./tree-exa2-45.sdimacs. Line 1:Read token.  Token = 'cnf'.  Type = string
File ./tree-exa2-45.sdimacs. Line 1:Read token.  Token = '90'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 1:Read token.  Token = '47'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 2:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-45.sdimacs. Line 2:Read token.  Token = '-45'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 2:Starting clause 1
File ./tree-exa2-45.sdimacs. Line 2:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 2:Finished clause.  Full length 2.  Chunk ID 0.  Offset 0 1: -45
File ./tree-exa2-45.sdimacs. Line 3:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-45.sdimacs. Line 3:Read token.  Token = '45'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 3:Starting clause 2
File ./tree-exa2-45.sdimacs. Line 3:Read token.  Token = '89'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 3:Read token.  Token = '-44'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 3:Read token.  Token = '-88'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 3:Read token.  Token = '-43'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 3:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 3:Finished clause.  Full length 6.  Chunk ID 0.  Offset 2 2: 45 89 -44 -88 -43
File ./tree-exa2-45.sdimacs. Line 4:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-45.sdimacs. Line 4:Read token.  Token = '44'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 4:Starting clause 3
File ./tree-exa2-45.sdimacs. Line 4:Read token.  Token = '88'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 4:Read token.  Token = '-43'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 4:Read token.  Token = '-87'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 4:Read token.  Token = '-42'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 4:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 4:Finished clause.  Full length 6.  Chunk ID 0.  Offset 8 3: 44 88 -43 -87 -42
File ./tree-exa2-45.sdimacs. Line 5:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-45.sdimacs. Line 5:Read token.  Token = '43'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 5:Starting clause 4
File ./tree-exa2-45.sdimacs. Line 5:Read token.  Token = '87'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 5:Read token.  Token = '-42'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 5:Read token.  Token = '-86'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 5:Read token.  Token = '-41'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 5:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 5:Finished clause.  Full length 6.  Chunk ID 0.  Offset 14 4: 43 87 -42 -86 -41
File ./tree-exa2-45.sdimacs. Line 6:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-45.sdimacs. Line 6:Read token.  Token = '42'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 6:Starting clause 5
File ./tree-exa2-45.sdimacs. Line 6:Read token.  Token = '86'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 6:Read token.  Token = '-41'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 6:Read token.  Token = '-85'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 6:Read token.  Token = '-40'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 6:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 6:Finished clause.  Full length 6.  Chunk ID 0.  Offset 20 5: 42 86 -41 -85 -40
File ./tree-exa2-45.sdimacs. Line 7:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-45.sdimacs. Line 7:Read token.  Token = '41'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 7:Starting clause 6
File ./tree-exa2-45.sdimacs. Line 7:Read token.  Token = '85'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 7:Read token.  Token = '-40'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 7:Read token.  Token = '-84'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 7:Read token.  Token = '-39'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 7:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 7:Finished clause.  Full length 6.  Chunk ID 0.  Offset 26 6: 41 85 -40 -84 -39
File ./tree-exa2-45.sdimacs. Line 8:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-45.sdimacs. Line 8:Read token.  Token = '40'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 8:Starting clause 7
File ./tree-exa2-45.sdimacs. Line 8:Read token.  Token = '84'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 8:Read token.  Token = '-39'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 8:Read token.  Token = '-83'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 8:Read token.  Token = '-38'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 8:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 8:Finished clause.  Full length 6.  Chunk ID 0.  Offset 32 7: 40 84 -39 -83 -38
File ./tree-exa2-45.sdimacs. Line 9:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-45.sdimacs. Line 9:Read token.  Token = '39'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 9:Starting clause 8
File ./tree-exa2-45.sdimacs. Line 9:Read token.  Token = '83'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 9:Read token.  Token = '-38'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 9:Read token.  Token = '-82'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 9:Read token.  Token = '-37'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 9:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 9:Finished clause.  Full length 6.  Chunk ID 0.  Offset 38 8: 39 83 -38 -82 -37
File ./tree-exa2-45.sdimacs. Line 10:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-45.sdimacs. Line 10:Read token.  Token = '38'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 10:Starting clause 9
File ./tree-exa2-45.sdimacs. Line 10:Read token.  Token = '82'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 10:Read token.  Token = '-37'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 10:Read token.  Token = '-81'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 10:Read token.  Token = '-36'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 10:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 10:Finished clause.  Full length 6.  Chunk ID 0.  Offset 44 9: 38 82 -37 -81 -36
File ./tree-exa2-45.sdimacs. Line 11:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-45.sdimacs. Line 11:Read token.  Token = '37'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 11:Starting clause 10
File ./tree-exa2-45.sdimacs. Line 11:Read token.  Token = '81'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 11:Read token.  Token = '-36'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 11:Read token.  Token = '-80'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 11:Read token.  Token = '-35'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 11:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 11:Finished clause.  Full length 6.  Chunk ID 0.  Offset 50 10: 37 81 -36 -80 -35
File ./tree-exa2-45.sdimacs. Line 12:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-45.sdimacs. Line 12:Read token.  Token = '36'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 12:Starting clause 11
File ./tree-exa2-45.sdimacs. Line 12:Read token.  Token = '80'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 12:Read token.  Token = '-35'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 12:Read token.  Token = '-79'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 12:Read token.  Token = '-34'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 12:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 12:Finished clause.  Full length 6.  Chunk ID 0.  Offset 56 11: 36 80 -35 -79 -34
File ./tree-exa2-45.sdimacs. Line 13:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-45.sdimacs. Line 13:Read token.  Token = '35'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 13:Starting clause 12
File ./tree-exa2-45.sdimacs. Line 13:Read token.  Token = '79'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 13:Read token.  Token = '-34'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 13:Read token.  Token = '-78'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 13:Read token.  Token = '-33'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 13:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 13:Finished clause.  Full length 6.  Chunk ID 0.  Offset 62 12: 35 79 -34 -78 -33
File ./tree-exa2-45.sdimacs. Line 14:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-45.sdimacs. Line 14:Read token.  Token = '34'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 14:Starting clause 13
File ./tree-exa2-45.sdimacs. Line 14:Read token.  Token = '78'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 14:Read token.  Token = '-33'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 14:Read token.  Token = '-77'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 14:Read token.  Token = '-32'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 14:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 14:Finished clause.  Full length 6.  Chunk ID 0.  Offset 68 13: 34 78 -33 -77 -32
File ./tree-exa2-45.sdimacs. Line 15:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-45.sdimacs. Line 15:Read token.  Token = '33'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 15:Starting clause 14
File ./tree-exa2-45.sdimacs. Line 15:Read token.  Token = '77'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 15:Read token.  Token = '-32'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 15:Read token.  Token = '-76'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 15:Read token.  Token = '-31'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 15:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 15:Finished clause.  Full length 6.  Chunk ID 0.  Offset 74 14: 33 77 -32 -76 -31
File ./tree-exa2-45.sdimacs. Line 16:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-45.sdimacs. Line 16:Read token.  Token = '32'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 16:Starting clause 15
File ./tree-exa2-45.sdimacs. Line 16:Read token.  Token = '76'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 16:Read token.  Token = '-31'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 16:Read token.  Token = '-75'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 16:Read token.  Token = '-30'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 16:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 16:Finished clause.  Full length 6.  Chunk ID 0.  Offset 80 15: 32 76 -31 -75 -30
File ./tree-exa2-45.sdimacs. Line 17:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-45.sdimacs. Line 17:Read token.  Token = '31'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 17:Starting clause 16
File ./tree-exa2-45.sdimacs. Line 17:Read token.  Token = '75'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 17:Read token.  Token = '-30'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 17:Read token.  Token = '-74'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 17:Read token.  Token = '-29'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 17:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 17:Finished clause.  Full length 6.  Chunk ID 0.  Offset 86 16: 31 75 -30 -74 -29
File ./tree-exa2-45.sdimacs. Line 18:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-45.sdimacs. Line 18:Read token.  Token = '30'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 18:Starting clause 17
File ./tree-exa2-45.sdimacs. Line 18:Read token.  Token = '74'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 18:Read token.  Token = '-29'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 18:Read token.  Token = '-73'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 18:Read token.  Token = '-28'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 18:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 18:Finished clause.  Full length 6.  Chunk ID 0.  Offset 92 17: 30 74 -29 -73 -28
File ./tree-exa2-45.sdimacs. Line 19:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-45.sdimacs. Line 19:Read token.  Token = '29'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 19:Starting clause 18
File ./tree-exa2-45.sdimacs. Line 19:Read token.  Token = '73'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 19:Read token.  Token = '-28'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 19:Read token.  Token = '-72'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 19:Read token.  Token = '-27'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 19:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 19:Finished clause.  Full length 6.  Chunk ID 0.  Offset 98 18: 29 73 -28 -72 -27
File ./tree-exa2-45.sdimacs. Line 20:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-45.sdimacs. Line 20:Read token.  Token = '28'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 20:Starting clause 19
File ./tree-exa2-45.sdimacs. Line 20:Read token.  Token = '72'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 20:Read token.  Token = '-27'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 20:Read token.  Token = '-71'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 20:Read token.  Token = '-26'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 20:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 20:Finished clause.  Full length 6.  Chunk ID 0.  Offset 104 19: 28 72 -27 -71 -26
File ./tree-exa2-45.sdimacs. Line 21:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-45.sdimacs. Line 21:Read token.  Token = '27'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 21:Starting clause 20
File ./tree-exa2-45.sdimacs. Line 21:Read token.  Token = '71'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 21:Read token.  Token = '-26'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 21:Read token.  Token = '-70'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 21:Read token.  Token = '-25'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 21:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 21:Finished clause.  Full length 6.  Chunk ID 0.  Offset 110 20: 27 71 -26 -70 -25
File ./tree-exa2-45.sdimacs. Line 22:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-45.sdimacs. Line 22:Read token.  Token = '26'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 22:Starting clause 21
File ./tree-exa2-45.sdimacs. Line 22:Read token.  Token = '70'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 22:Read token.  Token = '-25'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 22:Read token.  Token = '-69'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 22:Read token.  Token = '-24'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 22:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 22:Finished clause.  Full length 6.  Chunk ID 0.  Offset 116 21: 26 70 -25 -69 -24
File ./tree-exa2-45.sdimacs. Line 23:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-45.sdimacs. Line 23:Read token.  Token = '25'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 23:Starting clause 22
File ./tree-exa2-45.sdimacs. Line 23:Read token.  Token = '69'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 23:Read token.  Token = '-24'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 23:Read token.  Token = '-68'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 23:Read token.  Token = '-23'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 23:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 23:Finished clause.  Full length 6.  Chunk ID 0.  Offset 122 22: 25 69 -24 -68 -23
File ./tree-exa2-45.sdimacs. Line 24:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-45.sdimacs. Line 24:Read token.  Token = '24'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 24:Starting clause 23
File ./tree-exa2-45.sdimacs. Line 24:Read token.  Token = '68'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 24:Read token.  Token = '-23'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 24:Read token.  Token = '-67'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 24:Read token.  Token = '-22'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 24:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 24:Finished clause.  Full length 6.  Chunk ID 0.  Offset 128 23: 24 68 -23 -67 -22
File ./tree-exa2-45.sdimacs. Line 25:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-45.sdimacs. Line 25:Read token.  Token = '23'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 25:Starting clause 24
File ./tree-exa2-45.sdimacs. Line 25:Read token.  Token = '67'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 25:Read token.  Token = '-22'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 25:Read token.  Token = '-66'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 25:Read token.  Token = '-21'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 25:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 25:Finished clause.  Full length 6.  Chunk ID 0.  Offset 134 24: 23 67 -22 -66 -21
File ./tree-exa2-45.sdimacs. Line 26:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-45.sdimacs. Line 26:Read token.  Token = '22'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 26:Starting clause 25
File ./tree-exa2-45.sdimacs. Line 26:Read token.  Token = '66'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 26:Read token.  Token = '-21'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 26:Read token.  Token = '-65'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 26:Read token.  Token = '-20'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 26:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 26:Finished clause.  Full length 6.  Chunk ID 0.  Offset 140 25: 22 66 -21 -65 -20
File ./tree-exa2-45.sdimacs. Line 27:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-45.sdimacs. Line 27:Read token.  Token = '21'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 27:Starting clause 26
File ./tree-exa2-45.sdimacs. Line 27:Read token.  Token = '65'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 27:Read token.  Token = '-20'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 27:Read token.  Token = '-64'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 27:Read token.  Token = '-19'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 27:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 27:Finished clause.  Full length 6.  Chunk ID 0.  Offset 146 26: 21 65 -20 -64 -19
File ./tree-exa2-45.sdimacs. Line 28:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-45.sdimacs. Line 28:Read token.  Token = '20'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 28:Starting clause 27
File ./tree-exa2-45.sdimacs. Line 28:Read token.  Token = '64'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 28:Read token.  Token = '-19'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 28:Read token.  Token = '-63'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 28:Read token.  Token = '-18'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 28:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 28:Finished clause.  Full length 6.  Chunk ID 0.  Offset 152 27: 20 64 -19 -63 -18
File ./tree-exa2-45.sdimacs. Line 29:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-45.sdimacs. Line 29:Read token.  Token = '19'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 29:Starting clause 28
File ./tree-exa2-45.sdimacs. Line 29:Read token.  Token = '63'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 29:Read token.  Token = '-18'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 29:Read token.  Token = '-62'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 29:Read token.  Token = '-17'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 29:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 29:Finished clause.  Full length 6.  Chunk ID 0.  Offset 158 28: 19 63 -18 -62 -17
File ./tree-exa2-45.sdimacs. Line 30:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-45.sdimacs. Line 30:Read token.  Token = '18'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 30:Starting clause 29
File ./tree-exa2-45.sdimacs. Line 30:Read token.  Token = '62'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 30:Read token.  Token = '-17'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 30:Read token.  Token = '-61'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 30:Read token.  Token = '-16'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 30:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 30:Finished clause.  Full length 6.  Chunk ID 0.  Offset 164 29: 18 62 -17 -61 -16
File ./tree-exa2-45.sdimacs. Line 31:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-45.sdimacs. Line 31:Read token.  Token = '17'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 31:Starting clause 30
File ./tree-exa2-45.sdimacs. Line 31:Read token.  Token = '61'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 31:Read token.  Token = '-16'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 31:Read token.  Token = '-60'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 31:Read token.  Token = '-15'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 31:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 31:Finished clause.  Full length 6.  Chunk ID 0.  Offset 170 30: 17 61 -16 -60 -15
File ./tree-exa2-45.sdimacs. Line 32:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-45.sdimacs. Line 32:Read token.  Token = '16'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 32:Starting clause 31
File ./tree-exa2-45.sdimacs. Line 32:Read token.  Token = '60'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 32:Read token.  Token = '-15'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 32:Read token.  Token = '-59'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 32:Read token.  Token = '-14'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 32:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 32:Finished clause.  Full length 6.  Chunk ID 0.  Offset 176 31: 16 60 -15 -59 -14
File ./tree-exa2-45.sdimacs. Line 33:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-45.sdimacs. Line 33:Read token.  Token = '15'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 33:Starting clause 32
File ./tree-exa2-45.sdimacs. Line 33:Read token.  Token = '59'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 33:Read token.  Token = '-14'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 33:Read token.  Token = '-58'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 33:Read token.  Token = '-13'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 33:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 33:Finished clause.  Full length 6.  Chunk ID 0.  Offset 182 32: 15 59 -14 -58 -13
File ./tree-exa2-45.sdimacs. Line 34:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-45.sdimacs. Line 34:Read token.  Token = '14'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 34:Starting clause 33
File ./tree-exa2-45.sdimacs. Line 34:Read token.  Token = '58'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 34:Read token.  Token = '-13'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 34:Read token.  Token = '-57'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 34:Read token.  Token = '-12'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 34:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 34:Finished clause.  Full length 6.  Chunk ID 0.  Offset 188 33: 14 58 -13 -57 -12
File ./tree-exa2-45.sdimacs. Line 35:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-45.sdimacs. Line 35:Read token.  Token = '13'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 35:Starting clause 34
File ./tree-exa2-45.sdimacs. Line 35:Read token.  Token = '57'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 35:Read token.  Token = '-12'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 35:Read token.  Token = '-56'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 35:Read token.  Token = '-11'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 35:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 35:Finished clause.  Full length 6.  Chunk ID 0.  Offset 194 34: 13 57 -12 -56 -11
File ./tree-exa2-45.sdimacs. Line 36:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-45.sdimacs. Line 36:Read token.  Token = '12'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 36:Starting clause 35
File ./tree-exa2-45.sdimacs. Line 36:Read token.  Token = '56'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 36:Read token.  Token = '-11'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 36:Read token.  Token = '-55'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 36:Read token.  Token = '-10'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 36:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 36:Finished clause.  Full length 6.  Chunk ID 0.  Offset 200 35: 12 56 -11 -55 -10
File ./tree-exa2-45.sdimacs. Line 37:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-45.sdimacs. Line 37:Read token.  Token = '11'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 37:Starting clause 36
File ./tree-exa2-45.sdimacs. Line 37:Read token.  Token = '55'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 37:Read token.  Token = '-10'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 37:Read token.  Token = '-54'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 37:Read token.  Token = '-9'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 37:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 37:Finished clause.  Full length 6.  Chunk ID 0.  Offset 206 36: 11 55 -10 -54 -9
File ./tree-exa2-45.sdimacs. Line 38:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-45.sdimacs. Line 38:Read token.  Token = '10'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 38:Starting clause 37
File ./tree-exa2-45.sdimacs. Line 38:Read token.  Token = '54'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 38:Read token.  Token = '-9'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 38:Read token.  Token = '-53'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 38:Read token.  Token = '-8'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 38:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 38:Finished clause.  Full length 6.  Chunk ID 0.  Offset 212 37: 10 54 -9 -53 -8
File ./tree-exa2-45.sdimacs. Line 39:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-45.sdimacs. Line 39:Read token.  Token = '9'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 39:Starting clause 38
File ./tree-exa2-45.sdimacs. Line 39:Read token.  Token = '53'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 39:Read token.  Token = '-8'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 39:Read token.  Token = '-52'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 39:Read token.  Token = '-7'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 39:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 39:Finished clause.  Full length 6.  Chunk ID 0.  Offset 218 38: 9 53 -8 -52 -7
File ./tree-exa2-45.sdimacs. Line 40:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-45.sdimacs. Line 40:Read token.  Token = '8'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 40:Starting clause 39
File ./tree-exa2-45.sdimacs. Line 40:Read token.  Token = '52'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 40:Read token.  Token = '-7'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 40:Read token.  Token = '-51'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 40:Read token.  Token = '-6'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 40:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 40:Finished clause.  Full length 6.  Chunk ID 0.  Offset 224 39: 8 52 -7 -51 -6
File ./tree-exa2-45.sdimacs. Line 41:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-45.sdimacs. Line 41:Read token.  Token = '7'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 41:Starting clause 40
File ./tree-exa2-45.sdimacs. Line 41:Read token.  Token = '51'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 41:Read token.  Token = '-6'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 41:Read token.  Token = '-50'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 41:Read token.  Token = '-5'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 41:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 41:Finished clause.  Full length 6.  Chunk ID 0.  Offset 230 40: 7 51 -6 -50 -5
File ./tree-exa2-45.sdimacs. Line 42:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-45.sdimacs. Line 42:Read token.  Token = '6'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 42:Starting clause 41
File ./tree-exa2-45.sdimacs. Line 42:Read token.  Token = '50'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 42:Read token.  Token = '-5'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 42:Read token.  Token = '-49'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 42:Read token.  Token = '-4'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 42:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 42:Finished clause.  Full length 6.  Chunk ID 0.  Offset 236 41: 6 50 -5 -49 -4
File ./tree-exa2-45.sdimacs. Line 43:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-45.sdimacs. Line 43:Read token.  Token = '5'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 43:Starting clause 42
File ./tree-exa2-45.sdimacs. Line 43:Read token.  Token = '49'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 43:Read token.  Token = '-4'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 43:Read token.  Token = '-48'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 43:Read token.  Token = '-3'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 43:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 43:Finished clause.  Full length 6.  Chunk ID 0.  Offset 242 42: 5 49 -4 -48 -3
File ./tree-exa2-45.sdimacs. Line 44:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-45.sdimacs. Line 44:Read token.  Token = '4'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 44:Starting clause 43
File ./tree-exa2-45.sdimacs. Line 44:Read token.  Token = '48'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 44:Read token.  Token = '-3'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 44:Read token.  Token = '-47'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 44:Read token.  Token = '-2'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 44:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 44:Finished clause.  Full length 6.  Chunk ID 0.  Offset 248 43: 4 48 -3 -47 -2
File ./tree-exa2-45.sdimacs. Line 45:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-45.sdimacs. Line 45:Read token.  Token = '3'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 45:Starting clause 44
File ./tree-exa2-45.sdimacs. Line 45:Read token.  Token = '47'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 45:Read token.  Token = '-2'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 45:Read token.  Token = '-46'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 45:Read token.  Token = '-1'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 45:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 45:Finished clause.  Full length 6.  Chunk ID 0.  Offset 254 44: 3 47 -2 -46 -1
File ./tree-exa2-45.sdimacs. Line 46:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-45.sdimacs. Line 46:Read token.  Token = '2'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 46:Starting clause 45
File ./tree-exa2-45.sdimacs. Line 46:Read token.  Token = '1'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 46:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 46:Finished clause.  Full length 3.  Chunk ID 0.  Offset 260 45: 2 1
File ./tree-exa2-45.sdimacs. Line 47:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-45.sdimacs. Line 47:Read token.  Token = '2'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 47:Starting clause 46
File ./tree-exa2-45.sdimacs. Line 47:Read token.  Token = '-1'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 47:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 47:Finished clause.  Full length 3.  Chunk ID 0.  Offset 263 46: 2 -1
File ./tree-exa2-45.sdimacs. Line 48:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-45.sdimacs. Line 48:Read token.  Token = '-2'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 48:Starting clause 47
File ./tree-exa2-45.sdimacs. Line 48:Read token.  Token = '1'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 48:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-45.sdimacs. Line 48:Finished clause.  Full length 3.  Chunk ID 0.  Offset 266 47: -2 1
File ./tree-exa2-45.sdimacs. Line 49:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-45.sdimacs. Line 49:Read token.  Token = ''.  Type = EOF
CHECK: Read CNF file with 90 variables and 47 clauses
CNF File.  47 clauses
1: -45
2: 45 89 -44 -88 -43
3: 44 88 -43 -87 -42
4: 43 87 -42 -86 -41
5: 42 86 -41 -85 -40
6: 41 85 -40 -84 -39
7: 40 84 -39 -83 -38
8: 39 83 -38 -82 -37
9: 38 82 -37 -81 -36
10: 37 81 -36 -80 -35
11: 36 80 -35 -79 -34
12: 35 79 -34 -78 -33
13: 34 78 -33 -77 -32
14: 33 77 -32 -76 -31
15: 32 76 -31 -75 -30
16: 31 75 -30 -74 -29
17: 30 74 -29 -73 -28
18: 29 73 -28 -72 -27
19: 28 72 -27 -71 -26
20: 27 71 -26 -70 -25
21: 26 70 -25 -69 -24
22: 25 69 -24 -68 -23
23: 24 68 -23 -67 -22
24: 23 67 -22 -66 -21
25: 22 66 -21 -65 -20
26: 21 65 -20 -64 -19
27: 20 64 -19 -63 -18
28: 19 63 -18 -62 -17
29: 18 62 -17 -61 -16
30: 17 61 -16 -60 -15
31: 16 60 -15 -59 -14
32: 15 59 -14 -58 -13
33: 14 58 -13 -57 -12
34: 13 57 -12 -56 -11
35: 12 56 -11 -55 -10
36: 11 55 -10 -54 -9
37: 10 54 -9 -53 -8
38: 9 53 -8 -52 -7
39: 8 52 -7 -51 -6
40: 7 51 -6 -50 -5
41: 6 50 -5 -49 -4
42: 5 49 -4 -48 -3
43: 4 48 -3 -47 -2
44: 3 47 -2 -46 -1
45: 2 1
46: 2 -1
47: -2 1
File ./tree-exa2-45_low.cpog. Line 1:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-45_low.cpog. Line 2:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-45_low.cpog. Line 3:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-45_low.cpog. Line 4:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-45_low.cpog. Line 5:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-45_low.cpog. Line 6:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-45_low.cpog. Line 7:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-45_low.cpog. Line 8:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-45_low.cpog. Line 9:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-45_low.cpog. Line 10:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-45_low.cpog. Line 11:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-45_low.cpog. Line 12:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-45_low.cpog. Line 13:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-45_low.cpog. Line 14:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-45_low.cpog. Line 15:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-45_low.cpog. Line 16:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-45_low.cpog. Line 17:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-45_low.cpog. Line 18:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-45_low.cpog. Line 19:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-45_low.cpog. Line 20:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-45_low.cpog. Line 21:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-45_low.cpog. Line 22:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-45_low.cpog. Line 23:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-45_low.cpog. Line 24:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-45_low.cpog. Line 25:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-45_low.cpog. Line 26:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-45_low.cpog. Line 27:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-45_low.cpog. Line 28:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-45_low.cpog. Line 29:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-45_low.cpog. Line 30:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-45_low.cpog. Line 31:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-45_low.cpog. Line 32:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-45_low.cpog. Line 33:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-45_low.cpog. Line 34:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-45_low.cpog. Line 35:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-45_low.cpog. Line 36:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-45_low.cpog. Line 37:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-45_low.cpog. Line 38:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-45_low.cpog. Line 39:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-45_low.cpog. Line 40:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-45_low.cpog. Line 41:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-45_low.cpog. Line 42:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-45_low.cpog. Line 43:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-45_low.cpog. Line 44:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-45_low.cpog. Line 45:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-45_low.cpog. Line 46:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-45_low.cpog. Line 47:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-45_low.cpog. Line 48:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-45_low.cpog. Line 49:Read token.  Token = 'r'.  Type = string
File ./tree-exa2-45_low.cpog. Line 49:Read token.  Token = '585'.  Type = integer
File ./tree-exa2-45_low.cpog. Line 49:Root literal declared as 585
File ./tree-exa2-45_low.cpog. Line 50:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-45_low.cpog. Line 50:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-45_low.cpog. Line 51:Read token.  Token = '48'.  Type = integer
File ./tree-exa2-45_low.cpog. Line 51:Read token.  Token = 'p'.  Type = string
File ./tree-exa2-45_low.cpog. Line 51:Read token.  Token = '90'.  Type = integer
ERROR. File ./tree-exa2-45_low.cpog. Line 51. Function node_new. Invalid operation id 90
FCHECK ERROR: Return code = 1
FCHECK LOG: Elapsed time = 0.000 seconds
FCHECK OUTCOME: failed
OVERALL LOG: Elapsed time = 0.014 seconds
OVERALL OUTCOME: failed
