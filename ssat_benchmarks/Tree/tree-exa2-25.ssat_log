SSAT LOG: Running ../../tools/SharpSSAT -l -p -s ./tree-exa2-25.sdimacs
SSAT LOG: Time limit 1000 seconds
Solving ./tree-exa2-25.sdimacs
variables (all/used/free): 	50/50/0
clauses (all/long/binary/unit): 27/23/3/1

Preprocessing .. DONE
variables (all/used/free): 	50/50/0
clauses (all/long/binary/unit): 26/23/3/0
Maximum cache size:	44927 MB

End of Solving
Start Generating Certificate...


variables (total / active / free)	50/50/0
clauses (removed) 			27 (0)
decisions 				110
conflicts 				1
conflict clauses (all/bin/unit) 	0/0/1

cache size 7MB	
cache (stores / hits) 			111/103
cache miss rate 0%
avg. variable count (stores / hits) 	23.7748/20.6796

number of nodes in trace 	116
number of edges in trace 	221

# satisfying probability = 1

# END

time: 0.002565s

upper trace written to ./tree-exa2-25_up.nnf
lower trace written to ./tree-exa2-25_low.nnf
maximum satisfying probability written to ./tree-exa2-25.prob
SSAT LOG: Elapsed time = 0.004 seconds
SSAT OUTCOME: normal
EVAL LOG: Running ../../src/evalSSAT ./tree-exa2-25.sdimacs ./tree-exa2-25_up.nnf ./tree-exa2-25_low.nnf ./tree-exa2-25.prob
EVAL LOG: Time limit 1000 seconds
c Read D4 NNF file with 334 nodes (113 explicit) and 221 edges
c Read D4 NNF file with 334 nodes (113 explicit) and 221 edges
EVAL LOG: Elapsed time = 0.001 seconds
EVAL OUTCOME: normal
GEN LOG: Running ../../src/cpog-gen -v 5 -1 -S -C 2147483647 -L d2p.log ./tree-exa2-25.sdimacs ./tree-exa2-25_low.nnf ./tree-exa2-25_low.cpog
GEN LOG: Time limit 2500 seconds
c GEN: Program options
c GEN:   Multi-literal:   yes
c GEN:   Use lemmas:      yes
c GEN:   Delete files:    yes
c GEN:   One-sided:       yes
c GEN:   Monolithic mode: no
c GEN:   DRAT threshold:  1000
c GEN:   Clause limit:    2147483647
c GEN:   BCP limit:       1
c GEN: Time = 0.00.  Read input file with 49 variables and 27 clauses
c Unit literal -25 justified by input clause #1
c BCP Pass 1.  Active clauses:c  2c  3c  4c  5c  6c  7c  8c  9c  10c  11c  12c  13c  14c  15c  16c  17c  18c  19c  20c  21c  22c  23c  24c  25c  26c  27c 
c   Checking clause #2: -23 -24 25 -48 49 0
c   Unit literals:c  -25c 
c     Potential unit -23
c     Additional unassigned literal -24
c     Still active
c   Checking clause #3: -22 -23 24 -47 48 0
c   Unit literals:c  -25c 
c     Potential unit -22
c     Additional unassigned literal -23
c     Still active
c   Checking clause #4: -21 -22 23 -46 47 0
c   Unit literals:c  -25c 
c     Potential unit -21
c     Additional unassigned literal -22
c     Still active
c   Checking clause #5: -20 -21 22 -45 46 0
c   Unit literals:c  -25c 
c     Potential unit -20
c     Additional unassigned literal -21
c     Still active
c   Checking clause #6: -19 -20 21 -44 45 0
c   Unit literals:c  -25c 
c     Potential unit -19
c     Additional unassigned literal -20
c     Still active
c   Checking clause #7: -18 -19 20 -43 44 0
c   Unit literals:c  -25c 
c     Potential unit -18
c     Additional unassigned literal -19
c     Still active
c   Checking clause #8: -17 -18 19 -42 43 0
c   Unit literals:c  -25c 
c     Potential unit -17
c     Additional unassigned literal -18
c     Still active
c   Checking clause #9: -16 -17 18 -41 42 0
c   Unit literals:c  -25c 
c     Potential unit -16
c     Additional unassigned literal -17
c     Still active
c   Checking clause #10: -15 -16 17 -40 41 0
c   Unit literals:c  -25c 
c     Potential unit -15
c     Additional unassigned literal -16
c     Still active
c   Checking clause #11: -14 -15 16 -39 40 0
c   Unit literals:c  -25c 
c     Potential unit -14
c     Additional unassigned literal -15
c     Still active
c   Checking clause #12: -13 -14 15 -38 39 0
c   Unit literals:c  -25c 
c     Potential unit -13
c     Additional unassigned literal -14
c     Still active
c   Checking clause #13: -12 -13 14 -37 38 0
c   Unit literals:c  -25c 
c     Potential unit -12
c     Additional unassigned literal -13
c     Still active
c   Checking clause #14: -11 -12 13 -36 37 0
c   Unit literals:c  -25c 
c     Potential unit -11
c     Additional unassigned literal -12
c     Still active
c   Checking clause #15: -10 -11 12 -35 36 0
c   Unit literals:c  -25c 
c     Potential unit -10
c     Additional unassigned literal -11
c     Still active
c   Checking clause #16: -9 -10 11 -34 35 0
c   Unit literals:c  -25c 
c     Potential unit -9
c     Additional unassigned literal -10
c     Still active
c   Checking clause #17: -8 -9 10 -33 34 0
c   Unit literals:c  -25c 
c     Potential unit -8
c     Additional unassigned literal -9
c     Still active
c   Checking clause #18: -7 -8 9 -32 33 0
c   Unit literals:c  -25c 
c     Potential unit -7
c     Additional unassigned literal -8
c     Still active
c   Checking clause #19: -6 -7 8 -31 32 0
c   Unit literals:c  -25c 
c     Potential unit -6
c     Additional unassigned literal -7
c     Still active
c   Checking clause #20: -5 -6 7 -30 31 0
c   Unit literals:c  -25c 
c     Potential unit -5
c     Additional unassigned literal -6
c     Still active
c   Checking clause #21: -4 -5 6 -29 30 0
c   Unit literals:c  -25c 
c     Potential unit -4
c     Additional unassigned literal -5
c     Still active
c   Checking clause #22: -3 -4 5 -28 29 0
c   Unit literals:c  -25c 
c     Potential unit -3
c     Additional unassigned literal -4
c     Still active
c   Checking clause #23: -2 -3 4 -27 28 0
c   Unit literals:c  -25c 
c     Potential unit -2
c     Additional unassigned literal -3
c     Still active
c   Checking clause #24: -1 -2 3 -26 27 0
c   Unit literals:c  -25c 
c     Potential unit -1
c     Additional unassigned literal -2
c     Still active
c   Checking clause #25: 1 2 0
c   Unit literals:c  -25c 
c     Potential unit 1
c     Additional unassigned literal 2
c     Still active
c   Checking clause #26: -1 2 0
c   Unit literals:c  -25c 
c     Potential unit -1
c     Additional unassigned literal 2
c     Still active
c   Checking clause #27: 1 -2 0
c   Unit literals:c  -25c 
c     Potential unit 1
c     Additional unassigned literal -2
c     Still active
c Line #1.  Created POG node FALSE number 50 from NNF node 1
c Line #2.  Created POG node TRUE number 51 from NNF node 2
c Line #3.  Created POG node OR number 52 from NNF node 3
c Line #4.  Created POG node OR number 53 from NNF node 4
c Line #5.  Created POG node OR number 54 from NNF node 5
c Line #6.  Created POG node OR number 55 from NNF node 6
c Line #7.  Created POG node OR number 56 from NNF node 7
c Line #8.  Created POG node OR number 57 from NNF node 8
c Line #9.  Created POG node OR number 58 from NNF node 9
c Line #10.  Created POG node OR number 59 from NNF node 10
c Line #11.  Created POG node OR number 60 from NNF node 11
c Line #12.  Created POG node OR number 61 from NNF node 12
c Line #13.  Created POG node OR number 62 from NNF node 13
c Line #14.  Created POG node OR number 63 from NNF node 14
c Line #15.  Created POG node OR number 64 from NNF node 15
c Line #16.  Created POG node OR number 65 from NNF node 16
c Line #17.  Created POG node OR number 66 from NNF node 17
c Line #18.  Created POG node OR number 67 from NNF node 18
c Line #19.  Created POG node OR number 68 from NNF node 19
c Line #20.  Created POG node OR number 69 from NNF node 20
c Line #21.  Created POG node OR number 70 from NNF node 21
c Line #22.  Created POG node OR number 71 from NNF node 22
c Line #23.  Created POG node OR number 72 from NNF node 23
c Line #24.  Created POG node OR number 73 from NNF node 24
c Line #25.  Created POG node OR number 74 from NNF node 25
c Line #26.  Created POG node OR number 75 from NNF node 26
c Line #27.  Created POG node OR number 76 from NNF node 27
c Line #28.  Created POG node OR number 77 from NNF node 28
c Line #29.  Created POG node OR number 78 from NNF node 29
c Line #30.  Created POG node OR number 79 from NNF node 30
c Line #31.  Created POG node OR number 80 from NNF node 31
c Line #32.  Created POG node OR number 81 from NNF node 32
c Line #33.  Created POG node OR number 82 from NNF node 33
c Line #34.  Created POG node OR number 83 from NNF node 34
c Line #35.  Created POG node OR number 84 from NNF node 35
c Line #36.  Created POG node OR number 85 from NNF node 36
c Line #37.  Created POG node OR number 86 from NNF node 37
c Line #38.  Created POG node OR number 87 from NNF node 38
c Line #39.  Created POG node OR number 88 from NNF node 39
c Line #40.  Created POG node OR number 89 from NNF node 40
c Line #41.  Created POG node OR number 90 from NNF node 41
c Line #42.  Created POG node OR number 91 from NNF node 42
c Line #43.  Created POG node OR number 92 from NNF node 43
c Line #44.  Created POG node OR number 93 from NNF node 44
c Line #45.  Created POG node OR number 94 from NNF node 45
c Line #46.  Created POG node OR number 95 from NNF node 46
c Line #47.  Created POG node OR number 96 from NNF node 47
c Line #48.  Created POG node OR number 97 from NNF node 48
c Line #49. Created POG AND Node 98 to hold literals between NNF nodes 48 and 2
c Line #49.  Adding edge between POG nodes 97 and 98
c Line #50. Created POG AND Node 99 to hold literals between NNF nodes 48 and 2
c Line #50.  Adding edge between POG nodes 97 and 99
c Line #51. Created POG AND Node 100 to hold literals between NNF nodes 47 and 48
c Line #51.  Adding edge between POG nodes 96 and 100
c Line #52. Created POG AND Node 101 to hold literals between NNF nodes 47 and 2
c Line #52.  Adding edge between POG nodes 96 and 101
c Line #53. Created POG AND Node 102 to hold literals between NNF nodes 46 and 47
c Line #53.  Adding edge between POG nodes 95 and 102
c Line #54.  Created POG node OR number 103 from NNF node 49
c Line #55. Created POG AND Node 104 to hold literals between NNF nodes 49 and 2
c Line #55.  Adding edge between POG nodes 103 and 104
c Line #56. Created POG AND Node 105 to hold literals between NNF nodes 49 and 2
c Line #56.  Adding edge between POG nodes 103 and 105
c Line #57. Created POG AND Node 106 to hold literals between NNF nodes 46 and 49
c Line #57.  Adding edge between POG nodes 95 and 106
c Line #58. Created POG AND Node 107 to hold literals between NNF nodes 45 and 46
c Line #58.  Adding edge between POG nodes 94 and 107
c Line #59.  Created POG node OR number 108 from NNF node 50
c Line #60. Created POG AND Node 109 to hold literals between NNF nodes 50 and 49
c Line #60.  Adding edge between POG nodes 108 and 109
c Line #61. Created POG AND Node 110 to hold literals between NNF nodes 50 and 48
c Line #61.  Adding edge between POG nodes 108 and 110
c Line #62. Created POG AND Node 111 to hold literals between NNF nodes 45 and 50
c Line #62.  Adding edge between POG nodes 94 and 111
c Line #63. Created POG AND Node 112 to hold literals between NNF nodes 44 and 45
c Line #63.  Adding edge between POG nodes 93 and 112
c Line #64.  Created POG node OR number 113 from NNF node 51
c Line #65. Created POG AND Node 114 to hold literals between NNF nodes 51 and 49
c Line #65.  Adding edge between POG nodes 113 and 114
c Line #66. Created POG AND Node 115 to hold literals between NNF nodes 51 and 49
c Line #66.  Adding edge between POG nodes 113 and 115
c Line #67. Created POG AND Node 116 to hold literals between NNF nodes 44 and 51
c Line #67.  Adding edge between POG nodes 93 and 116
c Line #68. Created POG AND Node 117 to hold literals between NNF nodes 43 and 44
c Line #68.  Adding edge between POG nodes 92 and 117
c Line #69.  Created POG node OR number 118 from NNF node 52
c Line #70. Created POG AND Node 119 to hold literals between NNF nodes 52 and 51
c Line #70.  Adding edge between POG nodes 118 and 119
c Line #71. Created POG AND Node 120 to hold literals between NNF nodes 52 and 46
c Line #71.  Adding edge between POG nodes 118 and 120
c Line #72. Created POG AND Node 121 to hold literals between NNF nodes 43 and 52
c Line #72.  Adding edge between POG nodes 92 and 121
c Line #73. Created POG AND Node 122 to hold literals between NNF nodes 42 and 43
c Line #73.  Adding edge between POG nodes 91 and 122
c Line #74.  Created POG node OR number 123 from NNF node 53
c Line #75. Created POG AND Node 124 to hold literals between NNF nodes 53 and 49
c Line #75.  Adding edge between POG nodes 123 and 124
c Line #76. Created POG AND Node 125 to hold literals between NNF nodes 53 and 49
c Line #76.  Adding edge between POG nodes 123 and 125
c Line #77. Created POG AND Node 126 to hold literals between NNF nodes 42 and 53
c Line #77.  Adding edge between POG nodes 91 and 126
c Line #78. Created POG AND Node 127 to hold literals between NNF nodes 41 and 42
c Line #78.  Adding edge between POG nodes 90 and 127
c Line #79.  Created POG node OR number 128 from NNF node 54
c Line #80. Created POG AND Node 129 to hold literals between NNF nodes 54 and 53
c Line #80.  Adding edge between POG nodes 128 and 129
c Line #81. Created POG AND Node 130 to hold literals between NNF nodes 54 and 44
c Line #81.  Adding edge between POG nodes 128 and 130
c Line #82. Created POG AND Node 131 to hold literals between NNF nodes 41 and 54
c Line #82.  Adding edge between POG nodes 90 and 131
c Line #83. Created POG AND Node 132 to hold literals between NNF nodes 40 and 41
c Line #83.  Adding edge between POG nodes 89 and 132
c Line #84.  Created POG node OR number 133 from NNF node 55
c Line #85. Created POG AND Node 134 to hold literals between NNF nodes 55 and 53
c Line #85.  Adding edge between POG nodes 133 and 134
c Line #86. Created POG AND Node 135 to hold literals between NNF nodes 55 and 53
c Line #86.  Adding edge between POG nodes 133 and 135
c Line #87. Created POG AND Node 136 to hold literals between NNF nodes 40 and 55
c Line #87.  Adding edge between POG nodes 89 and 136
c Line #88. Created POG AND Node 137 to hold literals between NNF nodes 39 and 40
c Line #88.  Adding edge between POG nodes 88 and 137
c Line #89.  Created POG node OR number 138 from NNF node 56
c Line #90. Created POG AND Node 139 to hold literals between NNF nodes 56 and 55
c Line #90.  Adding edge between POG nodes 138 and 139
c Line #91. Created POG AND Node 140 to hold literals between NNF nodes 56 and 42
c Line #91.  Adding edge between POG nodes 138 and 140
c Line #92. Created POG AND Node 141 to hold literals between NNF nodes 39 and 56
c Line #92.  Adding edge between POG nodes 88 and 141
c Line #93. Created POG AND Node 142 to hold literals between NNF nodes 38 and 39
c Line #93.  Adding edge between POG nodes 87 and 142
c Line #94.  Created POG node OR number 143 from NNF node 57
c Line #95. Created POG AND Node 144 to hold literals between NNF nodes 57 and 53
c Line #95.  Adding edge between POG nodes 143 and 144
c Line #96. Created POG AND Node 145 to hold literals between NNF nodes 57 and 53
c Line #96.  Adding edge between POG nodes 143 and 145
c Line #97. Created POG AND Node 146 to hold literals between NNF nodes 38 and 57
c Line #97.  Adding edge between POG nodes 87 and 146
c Line #98. Created POG AND Node 147 to hold literals between NNF nodes 37 and 38
c Line #98.  Adding edge between POG nodes 86 and 147
c Line #99.  Created POG node OR number 148 from NNF node 58
c Line #100. Created POG AND Node 149 to hold literals between NNF nodes 58 and 57
c Line #100.  Adding edge between POG nodes 148 and 149
c Line #101. Created POG AND Node 150 to hold literals between NNF nodes 58 and 40
c Line #101.  Adding edge between POG nodes 148 and 150
c Line #102. Created POG AND Node 151 to hold literals between NNF nodes 37 and 58
c Line #102.  Adding edge between POG nodes 86 and 151
c Line #103. Created POG AND Node 152 to hold literals between NNF nodes 36 and 37
c Line #103.  Adding edge between POG nodes 85 and 152
c Line #104.  Created POG node OR number 153 from NNF node 59
c Line #105. Created POG AND Node 154 to hold literals between NNF nodes 59 and 57
c Line #105.  Adding edge between POG nodes 153 and 154
c Line #106. Created POG AND Node 155 to hold literals between NNF nodes 59 and 57
c Line #106.  Adding edge between POG nodes 153 and 155
c Line #107. Created POG AND Node 156 to hold literals between NNF nodes 36 and 59
c Line #107.  Adding edge between POG nodes 85 and 156
c Line #108. Created POG AND Node 157 to hold literals between NNF nodes 35 and 36
c Line #108.  Adding edge between POG nodes 84 and 157
c Line #109.  Created POG node OR number 158 from NNF node 60
c Line #110. Created POG AND Node 159 to hold literals between NNF nodes 60 and 59
c Line #110.  Adding edge between POG nodes 158 and 159
c Line #111. Created POG AND Node 160 to hold literals between NNF nodes 60 and 38
c Line #111.  Adding edge between POG nodes 158 and 160
c Line #112. Created POG AND Node 161 to hold literals between NNF nodes 35 and 60
c Line #112.  Adding edge between POG nodes 84 and 161
c Line #113. Created POG AND Node 162 to hold literals between NNF nodes 34 and 35
c Line #113.  Adding edge between POG nodes 83 and 162
c Line #114.  Created POG node OR number 163 from NNF node 61
c Line #115. Created POG AND Node 164 to hold literals between NNF nodes 61 and 57
c Line #115.  Adding edge between POG nodes 163 and 164
c Line #116. Created POG AND Node 165 to hold literals between NNF nodes 61 and 57
c Line #116.  Adding edge between POG nodes 163 and 165
c Line #117. Created POG AND Node 166 to hold literals between NNF nodes 34 and 61
c Line #117.  Adding edge between POG nodes 83 and 166
c Line #118. Created POG AND Node 167 to hold literals between NNF nodes 33 and 34
c Line #118.  Adding edge between POG nodes 82 and 167
c Line #119.  Created POG node OR number 168 from NNF node 62
c Line #120. Created POG AND Node 169 to hold literals between NNF nodes 62 and 61
c Line #120.  Adding edge between POG nodes 168 and 169
c Line #121. Created POG AND Node 170 to hold literals between NNF nodes 62 and 36
c Line #121.  Adding edge between POG nodes 168 and 170
c Line #122. Created POG AND Node 171 to hold literals between NNF nodes 33 and 62
c Line #122.  Adding edge between POG nodes 82 and 171
c Line #123. Created POG AND Node 172 to hold literals between NNF nodes 32 and 33
c Line #123.  Adding edge between POG nodes 81 and 172
c Line #124.  Created POG node OR number 173 from NNF node 63
c Line #125. Created POG AND Node 174 to hold literals between NNF nodes 63 and 61
c Line #125.  Adding edge between POG nodes 173 and 174
c Line #126. Created POG AND Node 175 to hold literals between NNF nodes 63 and 61
c Line #126.  Adding edge between POG nodes 173 and 175
c Line #127. Created POG AND Node 176 to hold literals between NNF nodes 32 and 63
c Line #127.  Adding edge between POG nodes 81 and 176
c Line #128. Created POG AND Node 177 to hold literals between NNF nodes 31 and 32
c Line #128.  Adding edge between POG nodes 80 and 177
c Line #129.  Created POG node OR number 178 from NNF node 64
c Line #130. Created POG AND Node 179 to hold literals between NNF nodes 64 and 63
c Line #130.  Adding edge between POG nodes 178 and 179
c Line #131. Created POG AND Node 180 to hold literals between NNF nodes 64 and 34
c Line #131.  Adding edge between POG nodes 178 and 180
c Line #132. Created POG AND Node 181 to hold literals between NNF nodes 31 and 64
c Line #132.  Adding edge between POG nodes 80 and 181
c Line #133. Created POG AND Node 182 to hold literals between NNF nodes 30 and 31
c Line #133.  Adding edge between POG nodes 79 and 182
c Line #134.  Created POG node OR number 183 from NNF node 65
c Line #135. Created POG AND Node 184 to hold literals between NNF nodes 65 and 61
c Line #135.  Adding edge between POG nodes 183 and 184
c Line #136. Created POG AND Node 185 to hold literals between NNF nodes 65 and 61
c Line #136.  Adding edge between POG nodes 183 and 185
c Line #137. Created POG AND Node 186 to hold literals between NNF nodes 30 and 65
c Line #137.  Adding edge between POG nodes 79 and 186
c Line #138. Created POG AND Node 187 to hold literals between NNF nodes 29 and 30
c Line #138.  Adding edge between POG nodes 78 and 187
c Line #139.  Created POG node OR number 188 from NNF node 66
c Line #140. Created POG AND Node 189 to hold literals between NNF nodes 66 and 65
c Line #140.  Adding edge between POG nodes 188 and 189
c Line #141. Created POG AND Node 190 to hold literals between NNF nodes 66 and 32
c Line #141.  Adding edge between POG nodes 188 and 190
c Line #142. Created POG AND Node 191 to hold literals between NNF nodes 29 and 66
c Line #142.  Adding edge between POG nodes 78 and 191
c Line #143. Created POG AND Node 192 to hold literals between NNF nodes 28 and 29
c Line #143.  Adding edge between POG nodes 77 and 192
c Line #144.  Created POG node OR number 193 from NNF node 67
c Line #145. Created POG AND Node 194 to hold literals between NNF nodes 67 and 65
c Line #145.  Adding edge between POG nodes 193 and 194
c Line #146. Created POG AND Node 195 to hold literals between NNF nodes 67 and 65
c Line #146.  Adding edge between POG nodes 193 and 195
c Line #147. Created POG AND Node 196 to hold literals between NNF nodes 28 and 67
c Line #147.  Adding edge between POG nodes 77 and 196
c Line #148. Created POG AND Node 197 to hold literals between NNF nodes 27 and 28
c Line #148.  Adding edge between POG nodes 76 and 197
c Line #149.  Created POG node OR number 198 from NNF node 68
c Line #150. Created POG AND Node 199 to hold literals between NNF nodes 68 and 67
c Line #150.  Adding edge between POG nodes 198 and 199
c Line #151. Created POG AND Node 200 to hold literals between NNF nodes 68 and 30
c Line #151.  Adding edge between POG nodes 198 and 200
c Line #152. Created POG AND Node 201 to hold literals between NNF nodes 27 and 68
c Line #152.  Adding edge between POG nodes 76 and 201
c Line #153. Created POG AND Node 202 to hold literals between NNF nodes 26 and 27
c Line #153.  Adding edge between POG nodes 75 and 202
c Line #154.  Created POG node OR number 203 from NNF node 69
c Line #155. Created POG AND Node 204 to hold literals between NNF nodes 69 and 65
c Line #155.  Adding edge between POG nodes 203 and 204
c Line #156. Created POG AND Node 205 to hold literals between NNF nodes 69 and 65
c Line #156.  Adding edge between POG nodes 203 and 205
c Line #157. Created POG AND Node 206 to hold literals between NNF nodes 26 and 69
c Line #157.  Adding edge between POG nodes 75 and 206
c Line #158. Created POG AND Node 207 to hold literals between NNF nodes 25 and 26
c Line #158.  Adding edge between POG nodes 74 and 207
c Line #159.  Created POG node OR number 208 from NNF node 70
c Line #160. Created POG AND Node 209 to hold literals between NNF nodes 70 and 69
c Line #160.  Adding edge between POG nodes 208 and 209
c Line #161. Created POG AND Node 210 to hold literals between NNF nodes 70 and 28
c Line #161.  Adding edge between POG nodes 208 and 210
c Line #162. Created POG AND Node 211 to hold literals between NNF nodes 25 and 70
c Line #162.  Adding edge between POG nodes 74 and 211
c Line #163. Created POG AND Node 212 to hold literals between NNF nodes 24 and 25
c Line #163.  Adding edge between POG nodes 73 and 212
c Line #164.  Created POG node OR number 213 from NNF node 71
c Line #165. Created POG AND Node 214 to hold literals between NNF nodes 71 and 69
c Line #165.  Adding edge between POG nodes 213 and 214
c Line #166. Created POG AND Node 215 to hold literals between NNF nodes 71 and 69
c Line #166.  Adding edge between POG nodes 213 and 215
c Line #167. Created POG AND Node 216 to hold literals between NNF nodes 24 and 71
c Line #167.  Adding edge between POG nodes 73 and 216
c Line #168. Created POG AND Node 217 to hold literals between NNF nodes 23 and 24
c Line #168.  Adding edge between POG nodes 72 and 217
c Line #169.  Created POG node OR number 218 from NNF node 72
c Line #170. Created POG AND Node 219 to hold literals between NNF nodes 72 and 71
c Line #170.  Adding edge between POG nodes 218 and 219
c Line #171. Created POG AND Node 220 to hold literals between NNF nodes 72 and 26
c Line #171.  Adding edge between POG nodes 218 and 220
c Line #172. Created POG AND Node 221 to hold literals between NNF nodes 23 and 72
c Line #172.  Adding edge between POG nodes 72 and 221
c Line #173. Created POG AND Node 222 to hold literals between NNF nodes 22 and 23
c Line #173.  Adding edge between POG nodes 71 and 222
c Line #174.  Created POG node OR number 223 from NNF node 73
c Line #175. Created POG AND Node 224 to hold literals between NNF nodes 73 and 69
c Line #175.  Adding edge between POG nodes 223 and 224
c Line #176. Created POG AND Node 225 to hold literals between NNF nodes 73 and 69
c Line #176.  Adding edge between POG nodes 223 and 225
c Line #177. Created POG AND Node 226 to hold literals between NNF nodes 22 and 73
c Line #177.  Adding edge between POG nodes 71 and 226
c Line #178. Created POG AND Node 227 to hold literals between NNF nodes 21 and 22
c Line #178.  Adding edge between POG nodes 70 and 227
c Line #179.  Created POG node OR number 228 from NNF node 74
c Line #180. Created POG AND Node 229 to hold literals between NNF nodes 74 and 73
c Line #180.  Adding edge between POG nodes 228 and 229
c Line #181. Created POG AND Node 230 to hold literals between NNF nodes 74 and 24
c Line #181.  Adding edge between POG nodes 228 and 230
c Line #182. Created POG AND Node 231 to hold literals between NNF nodes 21 and 74
c Line #182.  Adding edge between POG nodes 70 and 231
c Line #183. Created POG AND Node 232 to hold literals between NNF nodes 20 and 21
c Line #183.  Adding edge between POG nodes 69 and 232
c Line #184.  Created POG node OR number 233 from NNF node 75
c Line #185. Created POG AND Node 234 to hold literals between NNF nodes 75 and 73
c Line #185.  Adding edge between POG nodes 233 and 234
c Line #186. Created POG AND Node 235 to hold literals between NNF nodes 75 and 73
c Line #186.  Adding edge between POG nodes 233 and 235
c Line #187. Created POG AND Node 236 to hold literals between NNF nodes 20 and 75
c Line #187.  Adding edge between POG nodes 69 and 236
c Line #188. Created POG AND Node 237 to hold literals between NNF nodes 19 and 20
c Line #188.  Adding edge between POG nodes 68 and 237
c Line #189.  Created POG node OR number 238 from NNF node 76
c Line #190. Created POG AND Node 239 to hold literals between NNF nodes 76 and 75
c Line #190.  Adding edge between POG nodes 238 and 239
c Line #191. Created POG AND Node 240 to hold literals between NNF nodes 76 and 22
c Line #191.  Adding edge between POG nodes 238 and 240
c Line #192. Created POG AND Node 241 to hold literals between NNF nodes 19 and 76
c Line #192.  Adding edge between POG nodes 68 and 241
c Line #193. Created POG AND Node 242 to hold literals between NNF nodes 18 and 19
c Line #193.  Adding edge between POG nodes 67 and 242
c Line #194.  Created POG node OR number 243 from NNF node 77
c Line #195. Created POG AND Node 244 to hold literals between NNF nodes 77 and 73
c Line #195.  Adding edge between POG nodes 243 and 244
c Line #196. Created POG AND Node 245 to hold literals between NNF nodes 77 and 73
c Line #196.  Adding edge between POG nodes 243 and 245
c Line #197. Created POG AND Node 246 to hold literals between NNF nodes 18 and 77
c Line #197.  Adding edge between POG nodes 67 and 246
c Line #198. Created POG AND Node 247 to hold literals between NNF nodes 17 and 18
c Line #198.  Adding edge between POG nodes 66 and 247
c Line #199.  Created POG node OR number 248 from NNF node 78
c Line #200. Created POG AND Node 249 to hold literals between NNF nodes 78 and 77
c Line #200.  Adding edge between POG nodes 248 and 249
c Line #201. Created POG AND Node 250 to hold literals between NNF nodes 78 and 20
c Line #201.  Adding edge between POG nodes 248 and 250
c Line #202. Created POG AND Node 251 to hold literals between NNF nodes 17 and 78
c Line #202.  Adding edge between POG nodes 66 and 251
c Line #203. Created POG AND Node 252 to hold literals between NNF nodes 16 and 17
c Line #203.  Adding edge between POG nodes 65 and 252
c Line #204.  Created POG node OR number 253 from NNF node 79
c Line #205. Created POG AND Node 254 to hold literals between NNF nodes 79 and 77
c Line #205.  Adding edge between POG nodes 253 and 254
c Line #206. Created POG AND Node 255 to hold literals between NNF nodes 79 and 77
c Line #206.  Adding edge between POG nodes 253 and 255
c Line #207. Created POG AND Node 256 to hold literals between NNF nodes 16 and 79
c Line #207.  Adding edge between POG nodes 65 and 256
c Line #208. Created POG AND Node 257 to hold literals between NNF nodes 15 and 16
c Line #208.  Adding edge between POG nodes 64 and 257
c Line #209.  Created POG node OR number 258 from NNF node 80
c Line #210. Created POG AND Node 259 to hold literals between NNF nodes 80 and 79
c Line #210.  Adding edge between POG nodes 258 and 259
c Line #211. Created POG AND Node 260 to hold literals between NNF nodes 80 and 18
c Line #211.  Adding edge between POG nodes 258 and 260
c Line #212. Created POG AND Node 261 to hold literals between NNF nodes 15 and 80
c Line #212.  Adding edge between POG nodes 64 and 261
c Line #213. Created POG AND Node 262 to hold literals between NNF nodes 14 and 15
c Line #213.  Adding edge between POG nodes 63 and 262
c Line #214.  Created POG node OR number 263 from NNF node 81
c Line #215. Created POG AND Node 264 to hold literals between NNF nodes 81 and 77
c Line #215.  Adding edge between POG nodes 263 and 264
c Line #216. Created POG AND Node 265 to hold literals between NNF nodes 81 and 77
c Line #216.  Adding edge between POG nodes 263 and 265
c Line #217. Created POG AND Node 266 to hold literals between NNF nodes 14 and 81
c Line #217.  Adding edge between POG nodes 63 and 266
c Line #218. Created POG AND Node 267 to hold literals between NNF nodes 13 and 14
c Line #218.  Adding edge between POG nodes 62 and 267
c Line #219.  Created POG node OR number 268 from NNF node 82
c Line #220. Created POG AND Node 269 to hold literals between NNF nodes 82 and 81
c Line #220.  Adding edge between POG nodes 268 and 269
c Line #221. Created POG AND Node 270 to hold literals between NNF nodes 82 and 16
c Line #221.  Adding edge between POG nodes 268 and 270
c Line #222. Created POG AND Node 271 to hold literals between NNF nodes 13 and 82
c Line #222.  Adding edge between POG nodes 62 and 271
c Line #223. Created POG AND Node 272 to hold literals between NNF nodes 12 and 13
c Line #223.  Adding edge between POG nodes 61 and 272
c Line #224.  Created POG node OR number 273 from NNF node 83
c Line #225. Created POG AND Node 274 to hold literals between NNF nodes 83 and 81
c Line #225.  Adding edge between POG nodes 273 and 274
c Line #226. Created POG AND Node 275 to hold literals between NNF nodes 83 and 81
c Line #226.  Adding edge between POG nodes 273 and 275
c Line #227. Created POG AND Node 276 to hold literals between NNF nodes 12 and 83
c Line #227.  Adding edge between POG nodes 61 and 276
c Line #228. Created POG AND Node 277 to hold literals between NNF nodes 11 and 12
c Line #228.  Adding edge between POG nodes 60 and 277
c Line #229.  Created POG node OR number 278 from NNF node 84
c Line #230. Created POG AND Node 279 to hold literals between NNF nodes 84 and 83
c Line #230.  Adding edge between POG nodes 278 and 279
c Line #231. Created POG AND Node 280 to hold literals between NNF nodes 84 and 14
c Line #231.  Adding edge between POG nodes 278 and 280
c Line #232. Created POG AND Node 281 to hold literals between NNF nodes 11 and 84
c Line #232.  Adding edge between POG nodes 60 and 281
c Line #233. Created POG AND Node 282 to hold literals between NNF nodes 10 and 11
c Line #233.  Adding edge between POG nodes 59 and 282
c Line #234.  Created POG node OR number 283 from NNF node 85
c Line #235. Created POG AND Node 284 to hold literals between NNF nodes 85 and 81
c Line #235.  Adding edge between POG nodes 283 and 284
c Line #236. Created POG AND Node 285 to hold literals between NNF nodes 85 and 81
c Line #236.  Adding edge between POG nodes 283 and 285
c Line #237. Created POG AND Node 286 to hold literals between NNF nodes 10 and 85
c Line #237.  Adding edge between POG nodes 59 and 286
c Line #238. Created POG AND Node 287 to hold literals between NNF nodes 9 and 10
c Line #238.  Adding edge between POG nodes 58 and 287
c Line #239.  Created POG node OR number 288 from NNF node 86
c Line #240. Created POG AND Node 289 to hold literals between NNF nodes 86 and 85
c Line #240.  Adding edge between POG nodes 288 and 289
c Line #241. Created POG AND Node 290 to hold literals between NNF nodes 86 and 12
c Line #241.  Adding edge between POG nodes 288 and 290
c Line #242. Created POG AND Node 291 to hold literals between NNF nodes 9 and 86
c Line #242.  Adding edge between POG nodes 58 and 291
c Line #243. Created POG AND Node 292 to hold literals between NNF nodes 8 and 9
c Line #243.  Adding edge between POG nodes 57 and 292
c Line #244.  Created POG node OR number 293 from NNF node 87
c Line #245. Created POG AND Node 294 to hold literals between NNF nodes 87 and 85
c Line #245.  Adding edge between POG nodes 293 and 294
c Line #246. Created POG AND Node 295 to hold literals between NNF nodes 87 and 85
c Line #246.  Adding edge between POG nodes 293 and 295
c Line #247. Created POG AND Node 296 to hold literals between NNF nodes 8 and 87
c Line #247.  Adding edge between POG nodes 57 and 296
c Line #248. Created POG AND Node 297 to hold literals between NNF nodes 7 and 8
c Line #248.  Adding edge between POG nodes 56 and 297
c Line #249.  Created POG node OR number 298 from NNF node 88
c Line #250. Created POG AND Node 299 to hold literals between NNF nodes 88 and 87
c Line #250.  Adding edge between POG nodes 298 and 299
c Line #251. Created POG AND Node 300 to hold literals between NNF nodes 88 and 10
c Line #251.  Adding edge between POG nodes 298 and 300
c Line #252. Created POG AND Node 301 to hold literals between NNF nodes 7 and 88
c Line #252.  Adding edge between POG nodes 56 and 301
c Line #253. Created POG AND Node 302 to hold literals between NNF nodes 6 and 7
c Line #253.  Adding edge between POG nodes 55 and 302
c Line #254.  Created POG node OR number 303 from NNF node 89
c Line #255. Created POG AND Node 304 to hold literals between NNF nodes 89 and 85
c Line #255.  Adding edge between POG nodes 303 and 304
c Line #256. Created POG AND Node 305 to hold literals between NNF nodes 89 and 85
c Line #256.  Adding edge between POG nodes 303 and 305
c Line #257. Created POG AND Node 306 to hold literals between NNF nodes 6 and 89
c Line #257.  Adding edge between POG nodes 55 and 306
c Line #258. Created POG AND Node 307 to hold literals between NNF nodes 5 and 6
c Line #258.  Adding edge between POG nodes 54 and 307
c Line #259.  Created POG node OR number 308 from NNF node 90
c Line #260. Created POG AND Node 309 to hold literals between NNF nodes 90 and 89
c Line #260.  Adding edge between POG nodes 308 and 309
c Line #261. Created POG AND Node 310 to hold literals between NNF nodes 90 and 8
c Line #261.  Adding edge between POG nodes 308 and 310
c Line #262. Created POG AND Node 311 to hold literals between NNF nodes 5 and 90
c Line #262.  Adding edge between POG nodes 54 and 311
c Line #263. Created POG AND Node 312 to hold literals between NNF nodes 4 and 5
c Line #263.  Adding edge between POG nodes 53 and 312
c Line #264.  Created POG node OR number 313 from NNF node 91
c Line #265.  Created POG node OR number 314 from NNF node 92
c Line #266.  Created POG node OR number 315 from NNF node 93
c Line #267.  Created POG node OR number 316 from NNF node 94
c Line #268.  Created POG node OR number 317 from NNF node 95
c Line #269.  Created POG node OR number 318 from NNF node 96
c Line #270.  Created POG node OR number 319 from NNF node 97
c Line #271.  Created POG node OR number 320 from NNF node 98
c Line #272.  Created POG node OR number 321 from NNF node 99
c Line #273.  Created POG node OR number 322 from NNF node 100
c Line #274.  Created POG node OR number 323 from NNF node 101
c Line #275.  Created POG node OR number 324 from NNF node 102
c Line #276.  Created POG node OR number 325 from NNF node 103
c Line #277.  Created POG node OR number 326 from NNF node 104
c Line #278.  Created POG node OR number 327 from NNF node 105
c Line #279.  Created POG node OR number 328 from NNF node 106
c Line #280.  Created POG node OR number 329 from NNF node 107
c Line #281.  Created POG node OR number 330 from NNF node 108
c Line #282.  Created POG node OR number 331 from NNF node 109
c Line #283.  Created POG node OR number 332 from NNF node 110
c Line #284.  Created POG node OR number 333 from NNF node 111
c Line #285.  Created POG node OR number 334 from NNF node 112
c Line #286.  Created POG node OR number 335 from NNF node 113
c Line #287. Created POG AND Node 336 to hold literals between NNF nodes 113 and 1
c Line #287.  Adding edge between POG nodes 335 and 336
c Line #288. Created POG AND Node 337 to hold literals between NNF nodes 113 and 2
c Line #288.  Adding edge between POG nodes 335 and 337
c Line #289. Created POG AND Node 338 to hold literals between NNF nodes 112 and 113
c Line #289.  Adding edge between POG nodes 334 and 338
c Line #290. Created POG AND Node 339 to hold literals between NNF nodes 112 and 2
c Line #290.  Adding edge between POG nodes 334 and 339
c Line #291. Created POG AND Node 340 to hold literals between NNF nodes 111 and 112
c Line #291.  Adding edge between POG nodes 333 and 340
c Line #292. Created POG AND Node 341 to hold literals between NNF nodes 111 and 49
c Line #292.  Adding edge between POG nodes 333 and 341
c Line #293. Created POG AND Node 342 to hold literals between NNF nodes 110 and 111
c Line #293.  Adding edge between POG nodes 332 and 342
c Line #294. Created POG AND Node 343 to hold literals between NNF nodes 110 and 51
c Line #294.  Adding edge between POG nodes 332 and 343
c Line #295. Created POG AND Node 344 to hold literals between NNF nodes 109 and 110
c Line #295.  Adding edge between POG nodes 331 and 344
c Line #296. Created POG AND Node 345 to hold literals between NNF nodes 109 and 53
c Line #296.  Adding edge between POG nodes 331 and 345
c Line #297. Created POG AND Node 346 to hold literals between NNF nodes 108 and 109
c Line #297.  Adding edge between POG nodes 330 and 346
c Line #298. Created POG AND Node 347 to hold literals between NNF nodes 108 and 55
c Line #298.  Adding edge between POG nodes 330 and 347
c Line #299. Created POG AND Node 348 to hold literals between NNF nodes 107 and 108
c Line #299.  Adding edge between POG nodes 329 and 348
c Line #300. Created POG AND Node 349 to hold literals between NNF nodes 107 and 57
c Line #300.  Adding edge between POG nodes 329 and 349
c Line #301. Created POG AND Node 350 to hold literals between NNF nodes 106 and 107
c Line #301.  Adding edge between POG nodes 328 and 350
c Line #302. Created POG AND Node 351 to hold literals between NNF nodes 106 and 59
c Line #302.  Adding edge between POG nodes 328 and 351
c Line #303. Created POG AND Node 352 to hold literals between NNF nodes 105 and 106
c Line #303.  Adding edge between POG nodes 327 and 352
c Line #304. Created POG AND Node 353 to hold literals between NNF nodes 105 and 61
c Line #304.  Adding edge between POG nodes 327 and 353
c Line #305. Created POG AND Node 354 to hold literals between NNF nodes 104 and 105
c Line #305.  Adding edge between POG nodes 326 and 354
c Line #306. Created POG AND Node 355 to hold literals between NNF nodes 104 and 63
c Line #306.  Adding edge between POG nodes 326 and 355
c Line #307. Created POG AND Node 356 to hold literals between NNF nodes 103 and 104
c Line #307.  Adding edge between POG nodes 325 and 356
c Line #308. Created POG AND Node 357 to hold literals between NNF nodes 103 and 65
c Line #308.  Adding edge between POG nodes 325 and 357
c Line #309. Created POG AND Node 358 to hold literals between NNF nodes 102 and 103
c Line #309.  Adding edge between POG nodes 324 and 358
c Line #310. Created POG AND Node 359 to hold literals between NNF nodes 102 and 67
c Line #310.  Adding edge between POG nodes 324 and 359
c Line #311. Created POG AND Node 360 to hold literals between NNF nodes 101 and 102
c Line #311.  Adding edge between POG nodes 323 and 360
c Line #312. Created POG AND Node 361 to hold literals between NNF nodes 101 and 69
c Line #312.  Adding edge between POG nodes 323 and 361
c Line #313. Created POG AND Node 362 to hold literals between NNF nodes 100 and 101
c Line #313.  Adding edge between POG nodes 322 and 362
c Line #314. Created POG AND Node 363 to hold literals between NNF nodes 100 and 71
c Line #314.  Adding edge between POG nodes 322 and 363
c Line #315. Created POG AND Node 364 to hold literals between NNF nodes 99 and 100
c Line #315.  Adding edge between POG nodes 321 and 364
c Line #316. Created POG AND Node 365 to hold literals between NNF nodes 99 and 73
c Line #316.  Adding edge between POG nodes 321 and 365
c Line #317. Created POG AND Node 366 to hold literals between NNF nodes 98 and 99
c Line #317.  Adding edge between POG nodes 320 and 366
c Line #318. Created POG AND Node 367 to hold literals between NNF nodes 98 and 75
c Line #318.  Adding edge between POG nodes 320 and 367
c Line #319. Created POG AND Node 368 to hold literals between NNF nodes 97 and 98
c Line #319.  Adding edge between POG nodes 319 and 368
c Line #320. Created POG AND Node 369 to hold literals between NNF nodes 97 and 77
c Line #320.  Adding edge between POG nodes 319 and 369
c Line #321. Created POG AND Node 370 to hold literals between NNF nodes 96 and 97
c Line #321.  Adding edge between POG nodes 318 and 370
c Line #322. Created POG AND Node 371 to hold literals between NNF nodes 96 and 79
c Line #322.  Adding edge between POG nodes 318 and 371
c Line #323. Created POG AND Node 372 to hold literals between NNF nodes 95 and 96
c Line #323.  Adding edge between POG nodes 317 and 372
c Line #324. Created POG AND Node 373 to hold literals between NNF nodes 95 and 81
c Line #324.  Adding edge between POG nodes 317 and 373
c Line #325. Created POG AND Node 374 to hold literals between NNF nodes 94 and 95
c Line #325.  Adding edge between POG nodes 316 and 374
c Line #326. Created POG AND Node 375 to hold literals between NNF nodes 94 and 83
c Line #326.  Adding edge between POG nodes 316 and 375
c Line #327. Created POG AND Node 376 to hold literals between NNF nodes 93 and 94
c Line #327.  Adding edge between POG nodes 315 and 376
c Line #328. Created POG AND Node 377 to hold literals between NNF nodes 93 and 85
c Line #328.  Adding edge between POG nodes 315 and 377
c Line #329. Created POG AND Node 378 to hold literals between NNF nodes 92 and 93
c Line #329.  Adding edge between POG nodes 314 and 378
c Line #330. Created POG AND Node 379 to hold literals between NNF nodes 92 and 87
c Line #330.  Adding edge between POG nodes 314 and 379
c Line #331. Created POG AND Node 380 to hold literals between NNF nodes 91 and 92
c Line #331.  Adding edge between POG nodes 313 and 380
c Line #332. Created POG AND Node 381 to hold literals between NNF nodes 91 and 89
c Line #332.  Adding edge between POG nodes 313 and 381
c Line #333. Created POG AND Node 382 to hold literals between NNF nodes 4 and 91
c Line #333.  Adding edge between POG nodes 53 and 382
c Line #334. Created POG AND Node 383 to hold literals between NNF nodes 3 and 4
c Line #334.  Adding edge between POG nodes 52 and 383
c Setting root literal to 52
c Read D4 NNF file with 334 nodes (113 explicit) and 221 edges
c Before optimization:
N50_FALSE()
N51_TRUE()
N52_OR(383)
N53_OR(312,382)
N54_OR(307,311)
N55_OR(302,306)
N56_OR(297,301)
N57_OR(292,296)
N58_OR(287,291)
N59_OR(282,286)
N60_OR(277,281)
N61_OR(272,276)
N62_OR(267,271)
N63_OR(262,266)
N64_OR(257,261)
N65_OR(252,256)
N66_OR(247,251)
N67_OR(242,246)
N68_OR(237,241)
N69_OR(232,236)
N70_OR(227,231)
N71_OR(222,226)
N72_OR(217,221)
N73_OR(212,216)
N74_OR(207,211)
N75_OR(202,206)
N76_OR(197,201)
N77_OR(192,196)
N78_OR(187,191)
N79_OR(182,186)
N80_OR(177,181)
N81_OR(172,176)
N82_OR(167,171)
N83_OR(162,166)
N84_OR(157,161)
N85_OR(152,156)
N86_OR(147,151)
N87_OR(142,146)
N88_OR(137,141)
N89_OR(132,136)
N90_OR(127,131)
N91_OR(122,126)
N92_OR(117,121)
N93_OR(112,116)
N94_OR(107,111)
N95_OR(102,106)
N96_OR(100,101)
N97_OR(98,99)
N98_AND(-27,-26,51)
N99_AND(27,51)
N100_AND(-3,97)
N101_AND(3,-27,51)
N102_AND(-28,96)
N103_OR(104,105)
N104_AND(-27,51)
N105_AND(27,51)
N106_AND(28,3,103)
N107_AND(-4,95)
N108_OR(109,110)
N109_AND(-28,3,103)
N110_AND(28,-3,97)
N111_AND(4,108)
N112_AND(-29,94)
N113_OR(114,115)
N114_AND(-28,3,103)
N115_AND(28,3,103)
N116_AND(29,4,113)
N117_AND(-5,93)
N118_OR(119,120)
N119_AND(-29,4,113)
N120_AND(29,-4,95)
N121_AND(5,118)
N122_AND(-30,92)
N123_OR(124,125)
N124_AND(-29,3,103)
N125_AND(29,3,103)
N126_AND(30,5,4,123)
N127_AND(-6,91)
N128_OR(129,130)
N129_AND(-30,5,4,123)
N130_AND(30,-5,93)
N131_AND(6,128)
N132_AND(-31,90)
N133_OR(134,135)
N134_AND(-30,5,4,123)
N135_AND(30,5,4,123)
N136_AND(31,6,133)
N137_AND(-7,89)
N138_OR(139,140)
N139_AND(-31,6,133)
N140_AND(31,-6,91)
N141_AND(7,138)
N142_AND(-32,88)
N143_OR(144,145)
N144_AND(-31,5,4,123)
N145_AND(31,5,4,123)
N146_AND(32,7,6,143)
N147_AND(-8,87)
N148_OR(149,150)
N149_AND(-32,7,6,143)
N150_AND(32,-7,89)
N151_AND(8,148)
N152_AND(-33,86)
N153_OR(154,155)
N154_AND(-32,7,6,143)
N155_AND(32,7,6,143)
N156_AND(33,8,153)
N157_AND(-9,85)
N158_OR(159,160)
N159_AND(-33,8,153)
N160_AND(33,-8,87)
N161_AND(9,158)
N162_AND(-34,84)
N163_OR(164,165)
N164_AND(-33,7,6,143)
N165_AND(33,7,6,143)
N166_AND(34,9,8,163)
N167_AND(-10,83)
N168_OR(169,170)
N169_AND(-34,9,8,163)
N170_AND(34,-9,85)
N171_AND(10,168)
N172_AND(-35,82)
N173_OR(174,175)
N174_AND(-34,9,8,163)
N175_AND(34,9,8,163)
N176_AND(35,10,173)
N177_AND(-11,81)
N178_OR(179,180)
N179_AND(-35,10,173)
N180_AND(35,-10,83)
N181_AND(11,178)
N182_AND(-36,80)
N183_OR(184,185)
N184_AND(-35,9,8,163)
N185_AND(35,9,8,163)
N186_AND(36,11,10,183)
N187_AND(-12,79)
N188_OR(189,190)
N189_AND(-36,11,10,183)
N190_AND(36,-11,81)
N191_AND(12,188)
N192_AND(-37,78)
N193_OR(194,195)
N194_AND(-36,11,10,183)
N195_AND(36,11,10,183)
N196_AND(37,12,193)
N197_AND(-13,77)
N198_OR(199,200)
N199_AND(-37,12,193)
N200_AND(37,-12,79)
N201_AND(13,198)
N202_AND(-38,76)
N203_OR(204,205)
N204_AND(-37,11,10,183)
N205_AND(37,11,10,183)
N206_AND(38,13,12,203)
N207_AND(-14,75)
N208_OR(209,210)
N209_AND(-38,13,12,203)
N210_AND(38,-13,77)
N211_AND(14,208)
N212_AND(-39,74)
N213_OR(214,215)
N214_AND(-38,13,12,203)
N215_AND(38,13,12,203)
N216_AND(39,14,213)
N217_AND(-15,73)
N218_OR(219,220)
N219_AND(-39,14,213)
N220_AND(39,-14,75)
N221_AND(15,218)
N222_AND(-40,72)
N223_OR(224,225)
N224_AND(-39,13,12,203)
N225_AND(39,13,12,203)
N226_AND(40,15,14,223)
N227_AND(-16,71)
N228_OR(229,230)
N229_AND(-40,15,14,223)
N230_AND(40,-15,73)
N231_AND(16,228)
N232_AND(-41,70)
N233_OR(234,235)
N234_AND(-40,15,14,223)
N235_AND(40,15,14,223)
N236_AND(41,16,233)
N237_AND(-17,69)
N238_OR(239,240)
N239_AND(-41,16,233)
N240_AND(41,-16,71)
N241_AND(17,238)
N242_AND(-42,68)
N243_OR(244,245)
N244_AND(-41,15,14,223)
N245_AND(41,15,14,223)
N246_AND(42,17,16,243)
N247_AND(-18,67)
N248_OR(249,250)
N249_AND(-42,17,16,243)
N250_AND(42,-17,69)
N251_AND(18,248)
N252_AND(-43,66)
N253_OR(254,255)
N254_AND(-42,17,16,243)
N255_AND(42,17,16,243)
N256_AND(43,18,253)
N257_AND(-19,65)
N258_OR(259,260)
N259_AND(-43,18,253)
N260_AND(43,-18,67)
N261_AND(19,258)
N262_AND(-44,64)
N263_OR(264,265)
N264_AND(-43,17,16,243)
N265_AND(43,17,16,243)
N266_AND(44,19,18,263)
N267_AND(-20,63)
N268_OR(269,270)
N269_AND(-44,19,18,263)
N270_AND(44,-19,65)
N271_AND(20,268)
N272_AND(-45,62)
N273_OR(274,275)
N274_AND(-44,19,18,263)
N275_AND(44,19,18,263)
N276_AND(45,20,273)
N277_AND(-21,61)
N278_OR(279,280)
N279_AND(-45,20,273)
N280_AND(45,-20,63)
N281_AND(21,278)
N282_AND(-46,60)
N283_OR(284,285)
N284_AND(-45,19,18,263)
N285_AND(45,19,18,263)
N286_AND(46,21,20,283)
N287_AND(-22,59)
N288_OR(289,290)
N289_AND(-46,21,20,283)
N290_AND(46,-21,61)
N291_AND(22,288)
N292_AND(-47,58)
N293_OR(294,295)
N294_AND(-46,21,20,283)
N295_AND(46,21,20,283)
N296_AND(47,22,293)
N297_AND(-23,57)
N298_OR(299,300)
N299_AND(-47,22,293)
N300_AND(47,-22,59)
N301_AND(23,298)
N302_AND(-48,56)
N303_OR(304,305)
N304_AND(-47,21,20,283)
N305_AND(47,21,20,283)
N306_AND(48,23,22,303)
N307_AND(-24,55)
N308_OR(309,310)
N309_AND(-48,23,22,303)
N310_AND(48,-23,57)
N311_AND(24,308)
N312_AND(-49,2,1,54)
N313_OR(380,381)
N314_OR(378,379)
N315_OR(376,377)
N316_OR(374,375)
N317_OR(372,373)
N318_OR(370,371)
N319_OR(368,369)
N320_OR(366,367)
N321_OR(364,365)
N322_OR(362,363)
N323_OR(360,361)
N324_OR(358,359)
N325_OR(356,357)
N326_OR(354,355)
N327_OR(352,353)
N328_OR(350,351)
N329_OR(348,349)
N330_OR(346,347)
N331_OR(344,345)
N332_OR(342,343)
N333_OR(340,341)
N334_OR(338,339)
N335_OR(336,337)
N336_AND(-2,50)
N337_AND(2,1,51)
N338_AND(-27,335)
N339_AND(27,2,1,51)
N340_AND(-28,3,334)
N341_AND(28,2,1,3,103)
N342_AND(-29,4,333)
N343_AND(29,2,1,4,113)
N344_AND(-30,5,332)
N345_AND(30,2,1,5,4,123)
N346_AND(-31,6,331)
N347_AND(31,2,1,6,133)
N348_AND(-32,7,330)
N349_AND(32,2,1,7,6,143)
N350_AND(-33,8,329)
N351_AND(33,2,1,8,153)
N352_AND(-34,9,328)
N353_AND(34,2,1,9,8,163)
N354_AND(-35,10,327)
N355_AND(35,2,1,10,173)
N356_AND(-36,11,326)
N357_AND(36,2,1,11,10,183)
N358_AND(-37,12,325)
N359_AND(37,2,1,12,193)
N360_AND(-38,13,324)
N361_AND(38,2,1,13,12,203)
N362_AND(-39,14,323)
N363_AND(39,2,1,14,213)
N364_AND(-40,15,322)
N365_AND(40,2,1,15,14,223)
N366_AND(-41,16,321)
N367_AND(41,2,1,16,233)
N368_AND(-42,17,320)
N369_AND(42,2,1,17,16,243)
N370_AND(-43,18,319)
N371_AND(43,2,1,18,253)
N372_AND(-44,19,318)
N373_AND(44,2,1,19,18,263)
N374_AND(-45,20,317)
N375_AND(45,2,1,20,273)
N376_AND(-46,21,316)
N377_AND(46,2,1,21,20,283)
N378_AND(-47,22,315)
N379_AND(47,2,1,22,293)
N380_AND(-48,23,314)
N381_AND(48,2,1,23,22,303)
N382_AND(49,24,313)
N383_AND(-25,53)
ROOT 52
c Compressing POG with 334 nodes (334 accessible from root) and root literal 52
c   Converted node N98_AND(-27,-26,51) to N50_AND(-27,-26)
c   Converted node N97_OR(98,99) to N51_OR(50,27)
c   Converted node N100_AND(-3,97) to N52_AND(-3,51)
c   Converted node N101_AND(3,-27,51) to N53_AND(3,-27)
c   Converted node N96_OR(100,101) to N54_OR(52,53)
c   Converted node N102_AND(-28,96) to N55_AND(-28,54)
c   Converted node N103_OR(104,105) to N56_OR(-27,27)
c   Converted node N106_AND(28,3,103) to N57_AND(28,3,56)
c   Converted node N95_OR(102,106) to N58_OR(55,57)
c   Converted node N107_AND(-4,95) to N59_AND(-4,58)
c   Converted node N109_AND(-28,3,103) to N60_AND(-28,3,56)
c   Converted node N110_AND(28,-3,97) to N61_AND(28,-3,51)
c   Converted node N108_OR(109,110) to N62_OR(60,61)
c   Converted node N111_AND(4,108) to N63_AND(4,62)
c   Converted node N94_OR(107,111) to N64_OR(59,63)
c   Converted node N112_AND(-29,94) to N65_AND(-29,64)
c   Converted node N114_AND(-28,3,103) to N66_AND(-28,3,56)
c   Converted node N115_AND(28,3,103) to N67_AND(28,3,56)
c   Converted node N113_OR(114,115) to N68_OR(66,67)
c   Converted node N116_AND(29,4,113) to N69_AND(29,4,68)
c   Converted node N93_OR(112,116) to N70_OR(65,69)
c   Converted node N117_AND(-5,93) to N71_AND(-5,70)
c   Converted node N119_AND(-29,4,113) to N72_AND(-29,4,68)
c   Converted node N120_AND(29,-4,95) to N73_AND(29,-4,58)
c   Converted node N118_OR(119,120) to N74_OR(72,73)
c   Converted node N121_AND(5,118) to N75_AND(5,74)
c   Converted node N92_OR(117,121) to N76_OR(71,75)
c   Converted node N122_AND(-30,92) to N77_AND(-30,76)
c   Converted node N124_AND(-29,3,103) to N78_AND(-29,3,56)
c   Converted node N125_AND(29,3,103) to N79_AND(29,3,56)
c   Converted node N123_OR(124,125) to N80_OR(78,79)
c   Converted node N126_AND(30,5,4,123) to N81_AND(30,5,4,80)
c   Converted node N91_OR(122,126) to N82_OR(77,81)
c   Converted node N127_AND(-6,91) to N83_AND(-6,82)
c   Converted node N129_AND(-30,5,4,123) to N84_AND(-30,5,4,80)
c   Converted node N130_AND(30,-5,93) to N85_AND(30,-5,70)
c   Converted node N128_OR(129,130) to N86_OR(84,85)
c   Converted node N131_AND(6,128) to N87_AND(6,86)
c   Converted node N90_OR(127,131) to N88_OR(83,87)
c   Converted node N132_AND(-31,90) to N89_AND(-31,88)
c   Converted node N134_AND(-30,5,4,123) to N90_AND(-30,5,4,80)
c   Converted node N135_AND(30,5,4,123) to N91_AND(30,5,4,80)
c   Converted node N133_OR(134,135) to N92_OR(90,91)
c   Converted node N136_AND(31,6,133) to N93_AND(31,6,92)
c   Converted node N89_OR(132,136) to N94_OR(89,93)
c   Converted node N137_AND(-7,89) to N95_AND(-7,94)
c   Converted node N139_AND(-31,6,133) to N96_AND(-31,6,92)
c   Converted node N140_AND(31,-6,91) to N97_AND(31,-6,82)
c   Converted node N138_OR(139,140) to N98_OR(96,97)
c   Converted node N141_AND(7,138) to N99_AND(7,98)
c   Converted node N88_OR(137,141) to N100_OR(95,99)
c   Converted node N142_AND(-32,88) to N101_AND(-32,100)
c   Converted node N144_AND(-31,5,4,123) to N102_AND(-31,5,4,80)
c   Converted node N145_AND(31,5,4,123) to N103_AND(31,5,4,80)
c   Converted node N143_OR(144,145) to N104_OR(102,103)
c   Converted node N146_AND(32,7,6,143) to N105_AND(32,7,6,104)
c   Converted node N87_OR(142,146) to N106_OR(101,105)
c   Converted node N147_AND(-8,87) to N107_AND(-8,106)
c   Converted node N149_AND(-32,7,6,143) to N108_AND(-32,7,6,104)
c   Converted node N150_AND(32,-7,89) to N109_AND(32,-7,94)
c   Converted node N148_OR(149,150) to N110_OR(108,109)
c   Converted node N151_AND(8,148) to N111_AND(8,110)
c   Converted node N86_OR(147,151) to N112_OR(107,111)
c   Converted node N152_AND(-33,86) to N113_AND(-33,112)
c   Converted node N154_AND(-32,7,6,143) to N114_AND(-32,7,6,104)
c   Converted node N155_AND(32,7,6,143) to N115_AND(32,7,6,104)
c   Converted node N153_OR(154,155) to N116_OR(114,115)
c   Converted node N156_AND(33,8,153) to N117_AND(33,8,116)
c   Converted node N85_OR(152,156) to N118_OR(113,117)
c   Converted node N157_AND(-9,85) to N119_AND(-9,118)
c   Converted node N159_AND(-33,8,153) to N120_AND(-33,8,116)
c   Converted node N160_AND(33,-8,87) to N121_AND(33,-8,106)
c   Converted node N158_OR(159,160) to N122_OR(120,121)
c   Converted node N161_AND(9,158) to N123_AND(9,122)
c   Converted node N84_OR(157,161) to N124_OR(119,123)
c   Converted node N162_AND(-34,84) to N125_AND(-34,124)
c   Converted node N164_AND(-33,7,6,143) to N126_AND(-33,7,6,104)
c   Converted node N165_AND(33,7,6,143) to N127_AND(33,7,6,104)
c   Converted node N163_OR(164,165) to N128_OR(126,127)
c   Converted node N166_AND(34,9,8,163) to N129_AND(34,9,8,128)
c   Converted node N83_OR(162,166) to N130_OR(125,129)
c   Converted node N167_AND(-10,83) to N131_AND(-10,130)
c   Converted node N169_AND(-34,9,8,163) to N132_AND(-34,9,8,128)
c   Converted node N170_AND(34,-9,85) to N133_AND(34,-9,118)
c   Converted node N168_OR(169,170) to N134_OR(132,133)
c   Converted node N171_AND(10,168) to N135_AND(10,134)
c   Converted node N82_OR(167,171) to N136_OR(131,135)
c   Converted node N172_AND(-35,82) to N137_AND(-35,136)
c   Converted node N174_AND(-34,9,8,163) to N138_AND(-34,9,8,128)
c   Converted node N175_AND(34,9,8,163) to N139_AND(34,9,8,128)
c   Converted node N173_OR(174,175) to N140_OR(138,139)
c   Converted node N176_AND(35,10,173) to N141_AND(35,10,140)
c   Converted node N81_OR(172,176) to N142_OR(137,141)
c   Converted node N177_AND(-11,81) to N143_AND(-11,142)
c   Converted node N179_AND(-35,10,173) to N144_AND(-35,10,140)
c   Converted node N180_AND(35,-10,83) to N145_AND(35,-10,130)
c   Converted node N178_OR(179,180) to N146_OR(144,145)
c   Converted node N181_AND(11,178) to N147_AND(11,146)
c   Converted node N80_OR(177,181) to N148_OR(143,147)
c   Converted node N182_AND(-36,80) to N149_AND(-36,148)
c   Converted node N184_AND(-35,9,8,163) to N150_AND(-35,9,8,128)
c   Converted node N185_AND(35,9,8,163) to N151_AND(35,9,8,128)
c   Converted node N183_OR(184,185) to N152_OR(150,151)
c   Converted node N186_AND(36,11,10,183) to N153_AND(36,11,10,152)
c   Converted node N79_OR(182,186) to N154_OR(149,153)
c   Converted node N187_AND(-12,79) to N155_AND(-12,154)
c   Converted node N189_AND(-36,11,10,183) to N156_AND(-36,11,10,152)
c   Converted node N190_AND(36,-11,81) to N157_AND(36,-11,142)
c   Converted node N188_OR(189,190) to N158_OR(156,157)
c   Converted node N191_AND(12,188) to N159_AND(12,158)
c   Converted node N78_OR(187,191) to N160_OR(155,159)
c   Converted node N192_AND(-37,78) to N161_AND(-37,160)
c   Converted node N194_AND(-36,11,10,183) to N162_AND(-36,11,10,152)
c   Converted node N195_AND(36,11,10,183) to N163_AND(36,11,10,152)
c   Converted node N193_OR(194,195) to N164_OR(162,163)
c   Converted node N196_AND(37,12,193) to N165_AND(37,12,164)
c   Converted node N77_OR(192,196) to N166_OR(161,165)
c   Converted node N197_AND(-13,77) to N167_AND(-13,166)
c   Converted node N199_AND(-37,12,193) to N168_AND(-37,12,164)
c   Converted node N200_AND(37,-12,79) to N169_AND(37,-12,154)
c   Converted node N198_OR(199,200) to N170_OR(168,169)
c   Converted node N201_AND(13,198) to N171_AND(13,170)
c   Converted node N76_OR(197,201) to N172_OR(167,171)
c   Converted node N202_AND(-38,76) to N173_AND(-38,172)
c   Converted node N204_AND(-37,11,10,183) to N174_AND(-37,11,10,152)
c   Converted node N205_AND(37,11,10,183) to N175_AND(37,11,10,152)
c   Converted node N203_OR(204,205) to N176_OR(174,175)
c   Converted node N206_AND(38,13,12,203) to N177_AND(38,13,12,176)
c   Converted node N75_OR(202,206) to N178_OR(173,177)
c   Converted node N207_AND(-14,75) to N179_AND(-14,178)
c   Converted node N209_AND(-38,13,12,203) to N180_AND(-38,13,12,176)
c   Converted node N210_AND(38,-13,77) to N181_AND(38,-13,166)
c   Converted node N208_OR(209,210) to N182_OR(180,181)
c   Converted node N211_AND(14,208) to N183_AND(14,182)
c   Converted node N74_OR(207,211) to N184_OR(179,183)
c   Converted node N212_AND(-39,74) to N185_AND(-39,184)
c   Converted node N214_AND(-38,13,12,203) to N186_AND(-38,13,12,176)
c   Converted node N215_AND(38,13,12,203) to N187_AND(38,13,12,176)
c   Converted node N213_OR(214,215) to N188_OR(186,187)
c   Converted node N216_AND(39,14,213) to N189_AND(39,14,188)
c   Converted node N73_OR(212,216) to N190_OR(185,189)
c   Converted node N217_AND(-15,73) to N191_AND(-15,190)
c   Converted node N219_AND(-39,14,213) to N192_AND(-39,14,188)
c   Converted node N220_AND(39,-14,75) to N193_AND(39,-14,178)
c   Converted node N218_OR(219,220) to N194_OR(192,193)
c   Converted node N221_AND(15,218) to N195_AND(15,194)
c   Converted node N72_OR(217,221) to N196_OR(191,195)
c   Converted node N222_AND(-40,72) to N197_AND(-40,196)
c   Converted node N224_AND(-39,13,12,203) to N198_AND(-39,13,12,176)
c   Converted node N225_AND(39,13,12,203) to N199_AND(39,13,12,176)
c   Converted node N223_OR(224,225) to N200_OR(198,199)
c   Converted node N226_AND(40,15,14,223) to N201_AND(40,15,14,200)
c   Converted node N71_OR(222,226) to N202_OR(197,201)
c   Converted node N227_AND(-16,71) to N203_AND(-16,202)
c   Converted node N229_AND(-40,15,14,223) to N204_AND(-40,15,14,200)
c   Converted node N230_AND(40,-15,73) to N205_AND(40,-15,190)
c   Converted node N228_OR(229,230) to N206_OR(204,205)
c   Converted node N231_AND(16,228) to N207_AND(16,206)
c   Converted node N70_OR(227,231) to N208_OR(203,207)
c   Converted node N232_AND(-41,70) to N209_AND(-41,208)
c   Converted node N234_AND(-40,15,14,223) to N210_AND(-40,15,14,200)
c   Converted node N235_AND(40,15,14,223) to N211_AND(40,15,14,200)
c   Converted node N233_OR(234,235) to N212_OR(210,211)
c   Converted node N236_AND(41,16,233) to N213_AND(41,16,212)
c   Converted node N69_OR(232,236) to N214_OR(209,213)
c   Converted node N237_AND(-17,69) to N215_AND(-17,214)
c   Converted node N239_AND(-41,16,233) to N216_AND(-41,16,212)
c   Converted node N240_AND(41,-16,71) to N217_AND(41,-16,202)
c   Converted node N238_OR(239,240) to N218_OR(216,217)
c   Converted node N241_AND(17,238) to N219_AND(17,218)
c   Converted node N68_OR(237,241) to N220_OR(215,219)
c   Converted node N242_AND(-42,68) to N221_AND(-42,220)
c   Converted node N244_AND(-41,15,14,223) to N222_AND(-41,15,14,200)
c   Converted node N245_AND(41,15,14,223) to N223_AND(41,15,14,200)
c   Converted node N243_OR(244,245) to N224_OR(222,223)
c   Converted node N246_AND(42,17,16,243) to N225_AND(42,17,16,224)
c   Converted node N67_OR(242,246) to N226_OR(221,225)
c   Converted node N247_AND(-18,67) to N227_AND(-18,226)
c   Converted node N249_AND(-42,17,16,243) to N228_AND(-42,17,16,224)
c   Converted node N250_AND(42,-17,69) to N229_AND(42,-17,214)
c   Converted node N248_OR(249,250) to N230_OR(228,229)
c   Converted node N251_AND(18,248) to N231_AND(18,230)
c   Converted node N66_OR(247,251) to N232_OR(227,231)
c   Converted node N252_AND(-43,66) to N233_AND(-43,232)
c   Converted node N254_AND(-42,17,16,243) to N234_AND(-42,17,16,224)
c   Converted node N255_AND(42,17,16,243) to N235_AND(42,17,16,224)
c   Converted node N253_OR(254,255) to N236_OR(234,235)
c   Converted node N256_AND(43,18,253) to N237_AND(43,18,236)
c   Converted node N65_OR(252,256) to N238_OR(233,237)
c   Converted node N257_AND(-19,65) to N239_AND(-19,238)
c   Converted node N259_AND(-43,18,253) to N240_AND(-43,18,236)
c   Converted node N260_AND(43,-18,67) to N241_AND(43,-18,226)
c   Converted node N258_OR(259,260) to N242_OR(240,241)
c   Converted node N261_AND(19,258) to N243_AND(19,242)
c   Converted node N64_OR(257,261) to N244_OR(239,243)
c   Converted node N262_AND(-44,64) to N245_AND(-44,244)
c   Converted node N264_AND(-43,17,16,243) to N246_AND(-43,17,16,224)
c   Converted node N265_AND(43,17,16,243) to N247_AND(43,17,16,224)
c   Converted node N263_OR(264,265) to N248_OR(246,247)
c   Converted node N266_AND(44,19,18,263) to N249_AND(44,19,18,248)
c   Converted node N63_OR(262,266) to N250_OR(245,249)
c   Converted node N267_AND(-20,63) to N251_AND(-20,250)
c   Converted node N269_AND(-44,19,18,263) to N252_AND(-44,19,18,248)
c   Converted node N270_AND(44,-19,65) to N253_AND(44,-19,238)
c   Converted node N268_OR(269,270) to N254_OR(252,253)
c   Converted node N271_AND(20,268) to N255_AND(20,254)
c   Converted node N62_OR(267,271) to N256_OR(251,255)
c   Converted node N272_AND(-45,62) to N257_AND(-45,256)
c   Converted node N274_AND(-44,19,18,263) to N258_AND(-44,19,18,248)
c   Converted node N275_AND(44,19,18,263) to N259_AND(44,19,18,248)
c   Converted node N273_OR(274,275) to N260_OR(258,259)
c   Converted node N276_AND(45,20,273) to N261_AND(45,20,260)
c   Converted node N61_OR(272,276) to N262_OR(257,261)
c   Converted node N277_AND(-21,61) to N263_AND(-21,262)
c   Converted node N279_AND(-45,20,273) to N264_AND(-45,20,260)
c   Converted node N280_AND(45,-20,63) to N265_AND(45,-20,250)
c   Converted node N278_OR(279,280) to N266_OR(264,265)
c   Converted node N281_AND(21,278) to N267_AND(21,266)
c   Converted node N60_OR(277,281) to N268_OR(263,267)
c   Converted node N282_AND(-46,60) to N269_AND(-46,268)
c   Converted node N284_AND(-45,19,18,263) to N270_AND(-45,19,18,248)
c   Converted node N285_AND(45,19,18,263) to N271_AND(45,19,18,248)
c   Converted node N283_OR(284,285) to N272_OR(270,271)
c   Converted node N286_AND(46,21,20,283) to N273_AND(46,21,20,272)
c   Converted node N59_OR(282,286) to N274_OR(269,273)
c   Converted node N287_AND(-22,59) to N275_AND(-22,274)
c   Converted node N289_AND(-46,21,20,283) to N276_AND(-46,21,20,272)
c   Converted node N290_AND(46,-21,61) to N277_AND(46,-21,262)
c   Converted node N288_OR(289,290) to N278_OR(276,277)
c   Converted node N291_AND(22,288) to N279_AND(22,278)
c   Converted node N58_OR(287,291) to N280_OR(275,279)
c   Converted node N292_AND(-47,58) to N281_AND(-47,280)
c   Converted node N294_AND(-46,21,20,283) to N282_AND(-46,21,20,272)
c   Converted node N295_AND(46,21,20,283) to N283_AND(46,21,20,272)
c   Converted node N293_OR(294,295) to N284_OR(282,283)
c   Converted node N296_AND(47,22,293) to N285_AND(47,22,284)
c   Converted node N57_OR(292,296) to N286_OR(281,285)
c   Converted node N297_AND(-23,57) to N287_AND(-23,286)
c   Converted node N299_AND(-47,22,293) to N288_AND(-47,22,284)
c   Converted node N300_AND(47,-22,59) to N289_AND(47,-22,274)
c   Converted node N298_OR(299,300) to N290_OR(288,289)
c   Converted node N301_AND(23,298) to N291_AND(23,290)
c   Converted node N56_OR(297,301) to N292_OR(287,291)
c   Converted node N302_AND(-48,56) to N293_AND(-48,292)
c   Converted node N304_AND(-47,21,20,283) to N294_AND(-47,21,20,272)
c   Converted node N305_AND(47,21,20,283) to N295_AND(47,21,20,272)
c   Converted node N303_OR(304,305) to N296_OR(294,295)
c   Converted node N306_AND(48,23,22,303) to N297_AND(48,23,22,296)
c   Converted node N55_OR(302,306) to N298_OR(293,297)
c   Converted node N307_AND(-24,55) to N299_AND(-24,298)
c   Converted node N309_AND(-48,23,22,303) to N300_AND(-48,23,22,296)
c   Converted node N310_AND(48,-23,57) to N301_AND(48,-23,286)
c   Converted node N308_OR(309,310) to N302_OR(300,301)
c   Converted node N311_AND(24,308) to N303_AND(24,302)
c   Converted node N54_OR(307,311) to N304_OR(299,303)
c   Converted node N312_AND(-49,2,1,54) to N305_AND(-49,2,1,304)
c   Converted node N336_AND(-2,50) to FALSE
c   Converted node N337_AND(2,1,51) to N306_AND(2,1)
c   Node N335_OR(336,337)  maps to 306
c   Converted node N338_AND(-27,335) to N307_AND(-27,306)
c   Converted node N339_AND(27,2,1,51) to N308_AND(27,2,1)
c   Converted node N334_OR(338,339) to N309_OR(307,308)
c   Converted node N340_AND(-28,3,334) to N310_AND(-28,3,309)
c   Converted node N341_AND(28,2,1,3,103) to N311_AND(28,2,1,3,56)
c   Converted node N333_OR(340,341) to N312_OR(310,311)
c   Converted node N342_AND(-29,4,333) to N313_AND(-29,4,312)
c   Converted node N343_AND(29,2,1,4,113) to N314_AND(29,2,1,4,68)
c   Converted node N332_OR(342,343) to N315_OR(313,314)
c   Converted node N344_AND(-30,5,332) to N316_AND(-30,5,315)
c   Converted node N345_AND(30,2,1,5,4,123) to N317_AND(30,2,1,5,4,80)
c   Converted node N331_OR(344,345) to N318_OR(316,317)
c   Converted node N346_AND(-31,6,331) to N319_AND(-31,6,318)
c   Converted node N347_AND(31,2,1,6,133) to N320_AND(31,2,1,6,92)
c   Converted node N330_OR(346,347) to N321_OR(319,320)
c   Converted node N348_AND(-32,7,330) to N322_AND(-32,7,321)
c   Converted node N349_AND(32,2,1,7,6,143) to N323_AND(32,2,1,7,6,104)
c   Converted node N329_OR(348,349) to N324_OR(322,323)
c   Converted node N350_AND(-33,8,329) to N325_AND(-33,8,324)
c   Converted node N351_AND(33,2,1,8,153) to N326_AND(33,2,1,8,116)
c   Converted node N328_OR(350,351) to N327_OR(325,326)
c   Converted node N352_AND(-34,9,328) to N328_AND(-34,9,327)
c   Converted node N353_AND(34,2,1,9,8,163) to N329_AND(34,2,1,9,8,128)
c   Converted node N327_OR(352,353) to N330_OR(328,329)
c   Converted node N354_AND(-35,10,327) to N331_AND(-35,10,330)
c   Converted node N355_AND(35,2,1,10,173) to N332_AND(35,2,1,10,140)
c   Converted node N326_OR(354,355) to N333_OR(331,332)
c   Converted node N356_AND(-36,11,326) to N334_AND(-36,11,333)
c   Converted node N357_AND(36,2,1,11,10,183) to N335_AND(36,2,1,11,10,152)
c   Converted node N325_OR(356,357) to N336_OR(334,335)
c   Converted node N358_AND(-37,12,325) to N337_AND(-37,12,336)
c   Converted node N359_AND(37,2,1,12,193) to N338_AND(37,2,1,12,164)
c   Converted node N324_OR(358,359) to N339_OR(337,338)
c   Converted node N360_AND(-38,13,324) to N340_AND(-38,13,339)
c   Converted node N361_AND(38,2,1,13,12,203) to N341_AND(38,2,1,13,12,176)
c   Converted node N323_OR(360,361) to N342_OR(340,341)
c   Converted node N362_AND(-39,14,323) to N343_AND(-39,14,342)
c   Converted node N363_AND(39,2,1,14,213) to N344_AND(39,2,1,14,188)
c   Converted node N322_OR(362,363) to N345_OR(343,344)
c   Converted node N364_AND(-40,15,322) to N346_AND(-40,15,345)
c   Converted node N365_AND(40,2,1,15,14,223) to N347_AND(40,2,1,15,14,200)
c   Converted node N321_OR(364,365) to N348_OR(346,347)
c   Converted node N366_AND(-41,16,321) to N349_AND(-41,16,348)
c   Converted node N367_AND(41,2,1,16,233) to N350_AND(41,2,1,16,212)
c   Converted node N320_OR(366,367) to N351_OR(349,350)
c   Converted node N368_AND(-42,17,320) to N352_AND(-42,17,351)
c   Converted node N369_AND(42,2,1,17,16,243) to N353_AND(42,2,1,17,16,224)
c   Converted node N319_OR(368,369) to N354_OR(352,353)
c   Converted node N370_AND(-43,18,319) to N355_AND(-43,18,354)
c   Converted node N371_AND(43,2,1,18,253) to N356_AND(43,2,1,18,236)
c   Converted node N318_OR(370,371) to N357_OR(355,356)
c   Converted node N372_AND(-44,19,318) to N358_AND(-44,19,357)
c   Converted node N373_AND(44,2,1,19,18,263) to N359_AND(44,2,1,19,18,248)
c   Converted node N317_OR(372,373) to N360_OR(358,359)
c   Converted node N374_AND(-45,20,317) to N361_AND(-45,20,360)
c   Converted node N375_AND(45,2,1,20,273) to N362_AND(45,2,1,20,260)
c   Converted node N316_OR(374,375) to N363_OR(361,362)
c   Converted node N376_AND(-46,21,316) to N364_AND(-46,21,363)
c   Converted node N377_AND(46,2,1,21,20,283) to N365_AND(46,2,1,21,20,272)
c   Converted node N315_OR(376,377) to N366_OR(364,365)
c   Converted node N378_AND(-47,22,315) to N367_AND(-47,22,366)
c   Converted node N379_AND(47,2,1,22,293) to N368_AND(47,2,1,22,284)
c   Converted node N314_OR(378,379) to N369_OR(367,368)
c   Converted node N380_AND(-48,23,314) to N370_AND(-48,23,369)
c   Converted node N381_AND(48,2,1,23,22,303) to N371_AND(48,2,1,23,22,296)
c   Converted node N313_OR(380,381) to N372_OR(370,371)
c   Converted node N382_AND(49,24,313) to N373_AND(49,24,372)
c   Converted node N53_OR(312,382) to N374_OR(305,373)
c   Converted node N383_AND(-25,53) to N375_AND(-25,374)
c Compressed POG has 326 nodes, root literal 375, and 1235 defining clauses
c Before concretizing:
N50_AND(-27,-26)
N51_OR(50,27)
N52_AND(-3,51)
N53_AND(3,-27)
N54_OR(52,53)
N55_AND(-28,54)
N56_OR(-27,27)
N57_AND(28,3,56)
N58_OR(55,57)
N59_AND(-4,58)
N60_AND(-28,3,56)
N61_AND(28,-3,51)
N62_OR(60,61)
N63_AND(4,62)
N64_OR(59,63)
N65_AND(-29,64)
N66_AND(-28,3,56)
N67_AND(28,3,56)
N68_OR(66,67)
N69_AND(29,4,68)
N70_OR(65,69)
N71_AND(-5,70)
N72_AND(-29,4,68)
N73_AND(29,-4,58)
N74_OR(72,73)
N75_AND(5,74)
N76_OR(71,75)
N77_AND(-30,76)
N78_AND(-29,3,56)
N79_AND(29,3,56)
N80_OR(78,79)
N81_AND(30,5,4,80)
N82_OR(77,81)
N83_AND(-6,82)
N84_AND(-30,5,4,80)
N85_AND(30,-5,70)
N86_OR(84,85)
N87_AND(6,86)
N88_OR(83,87)
N89_AND(-31,88)
N90_AND(-30,5,4,80)
N91_AND(30,5,4,80)
N92_OR(90,91)
N93_AND(31,6,92)
N94_OR(89,93)
N95_AND(-7,94)
N96_AND(-31,6,92)
N97_AND(31,-6,82)
N98_OR(96,97)
N99_AND(7,98)
N100_OR(95,99)
N101_AND(-32,100)
N102_AND(-31,5,4,80)
N103_AND(31,5,4,80)
N104_OR(102,103)
N105_AND(32,7,6,104)
N106_OR(101,105)
N107_AND(-8,106)
N108_AND(-32,7,6,104)
N109_AND(32,-7,94)
N110_OR(108,109)
N111_AND(8,110)
N112_OR(107,111)
N113_AND(-33,112)
N114_AND(-32,7,6,104)
N115_AND(32,7,6,104)
N116_OR(114,115)
N117_AND(33,8,116)
N118_OR(113,117)
N119_AND(-9,118)
N120_AND(-33,8,116)
N121_AND(33,-8,106)
N122_OR(120,121)
N123_AND(9,122)
N124_OR(119,123)
N125_AND(-34,124)
N126_AND(-33,7,6,104)
N127_AND(33,7,6,104)
N128_OR(126,127)
N129_AND(34,9,8,128)
N130_OR(125,129)
N131_AND(-10,130)
N132_AND(-34,9,8,128)
N133_AND(34,-9,118)
N134_OR(132,133)
N135_AND(10,134)
N136_OR(131,135)
N137_AND(-35,136)
N138_AND(-34,9,8,128)
N139_AND(34,9,8,128)
N140_OR(138,139)
N141_AND(35,10,140)
N142_OR(137,141)
N143_AND(-11,142)
N144_AND(-35,10,140)
N145_AND(35,-10,130)
N146_OR(144,145)
N147_AND(11,146)
N148_OR(143,147)
N149_AND(-36,148)
N150_AND(-35,9,8,128)
N151_AND(35,9,8,128)
N152_OR(150,151)
N153_AND(36,11,10,152)
N154_OR(149,153)
N155_AND(-12,154)
N156_AND(-36,11,10,152)
N157_AND(36,-11,142)
N158_OR(156,157)
N159_AND(12,158)
N160_OR(155,159)
N161_AND(-37,160)
N162_AND(-36,11,10,152)
N163_AND(36,11,10,152)
N164_OR(162,163)
N165_AND(37,12,164)
N166_OR(161,165)
N167_AND(-13,166)
N168_AND(-37,12,164)
N169_AND(37,-12,154)
N170_OR(168,169)
N171_AND(13,170)
N172_OR(167,171)
N173_AND(-38,172)
N174_AND(-37,11,10,152)
N175_AND(37,11,10,152)
N176_OR(174,175)
N177_AND(38,13,12,176)
N178_OR(173,177)
N179_AND(-14,178)
N180_AND(-38,13,12,176)
N181_AND(38,-13,166)
N182_OR(180,181)
N183_AND(14,182)
N184_OR(179,183)
N185_AND(-39,184)
N186_AND(-38,13,12,176)
N187_AND(38,13,12,176)
N188_OR(186,187)
N189_AND(39,14,188)
N190_OR(185,189)
N191_AND(-15,190)
N192_AND(-39,14,188)
N193_AND(39,-14,178)
N194_OR(192,193)
N195_AND(15,194)
N196_OR(191,195)
N197_AND(-40,196)
N198_AND(-39,13,12,176)
N199_AND(39,13,12,176)
N200_OR(198,199)
N201_AND(40,15,14,200)
N202_OR(197,201)
N203_AND(-16,202)
N204_AND(-40,15,14,200)
N205_AND(40,-15,190)
N206_OR(204,205)
N207_AND(16,206)
N208_OR(203,207)
N209_AND(-41,208)
N210_AND(-40,15,14,200)
N211_AND(40,15,14,200)
N212_OR(210,211)
N213_AND(41,16,212)
N214_OR(209,213)
N215_AND(-17,214)
N216_AND(-41,16,212)
N217_AND(41,-16,202)
N218_OR(216,217)
N219_AND(17,218)
N220_OR(215,219)
N221_AND(-42,220)
N222_AND(-41,15,14,200)
N223_AND(41,15,14,200)
N224_OR(222,223)
N225_AND(42,17,16,224)
N226_OR(221,225)
N227_AND(-18,226)
N228_AND(-42,17,16,224)
N229_AND(42,-17,214)
N230_OR(228,229)
N231_AND(18,230)
N232_OR(227,231)
N233_AND(-43,232)
N234_AND(-42,17,16,224)
N235_AND(42,17,16,224)
N236_OR(234,235)
N237_AND(43,18,236)
N238_OR(233,237)
N239_AND(-19,238)
N240_AND(-43,18,236)
N241_AND(43,-18,226)
N242_OR(240,241)
N243_AND(19,242)
N244_OR(239,243)
N245_AND(-44,244)
N246_AND(-43,17,16,224)
N247_AND(43,17,16,224)
N248_OR(246,247)
N249_AND(44,19,18,248)
N250_OR(245,249)
N251_AND(-20,250)
N252_AND(-44,19,18,248)
N253_AND(44,-19,238)
N254_OR(252,253)
N255_AND(20,254)
N256_OR(251,255)
N257_AND(-45,256)
N258_AND(-44,19,18,248)
N259_AND(44,19,18,248)
N260_OR(258,259)
N261_AND(45,20,260)
N262_OR(257,261)
N263_AND(-21,262)
N264_AND(-45,20,260)
N265_AND(45,-20,250)
N266_OR(264,265)
N267_AND(21,266)
N268_OR(263,267)
N269_AND(-46,268)
N270_AND(-45,19,18,248)
N271_AND(45,19,18,248)
N272_OR(270,271)
N273_AND(46,21,20,272)
N274_OR(269,273)
N275_AND(-22,274)
N276_AND(-46,21,20,272)
N277_AND(46,-21,262)
N278_OR(276,277)
N279_AND(22,278)
N280_OR(275,279)
N281_AND(-47,280)
N282_AND(-46,21,20,272)
N283_AND(46,21,20,272)
N284_OR(282,283)
N285_AND(47,22,284)
N286_OR(281,285)
N287_AND(-23,286)
N288_AND(-47,22,284)
N289_AND(47,-22,274)
N290_OR(288,289)
N291_AND(23,290)
N292_OR(287,291)
N293_AND(-48,292)
N294_AND(-47,21,20,272)
N295_AND(47,21,20,272)
N296_OR(294,295)
N297_AND(48,23,22,296)
N298_OR(293,297)
N299_AND(-24,298)
N300_AND(-48,23,22,296)
N301_AND(48,-23,286)
N302_OR(300,301)
N303_AND(24,302)
N304_OR(299,303)
N305_AND(-49,2,1,304)
N306_AND(2,1)
N307_AND(-27,306)
N308_AND(27,2,1)
N309_OR(307,308)
N310_AND(-28,3,309)
N311_AND(28,2,1,3,56)
N312_OR(310,311)
N313_AND(-29,4,312)
N314_AND(29,2,1,4,68)
N315_OR(313,314)
N316_AND(-30,5,315)
N317_AND(30,2,1,5,4,80)
N318_OR(316,317)
N319_AND(-31,6,318)
N320_AND(31,2,1,6,92)
N321_OR(319,320)
N322_AND(-32,7,321)
N323_AND(32,2,1,7,6,104)
N324_OR(322,323)
N325_AND(-33,8,324)
N326_AND(33,2,1,8,116)
N327_OR(325,326)
N328_AND(-34,9,327)
N329_AND(34,2,1,9,8,128)
N330_OR(328,329)
N331_AND(-35,10,330)
N332_AND(35,2,1,10,140)
N333_OR(331,332)
N334_AND(-36,11,333)
N335_AND(36,2,1,11,10,152)
N336_OR(334,335)
N337_AND(-37,12,336)
N338_AND(37,2,1,12,164)
N339_OR(337,338)
N340_AND(-38,13,339)
N341_AND(38,2,1,13,12,176)
N342_OR(340,341)
N343_AND(-39,14,342)
N344_AND(39,2,1,14,188)
N345_OR(343,344)
N346_AND(-40,15,345)
N347_AND(40,2,1,15,14,200)
N348_OR(346,347)
N349_AND(-41,16,348)
N350_AND(41,2,1,16,212)
N351_OR(349,350)
N352_AND(-42,17,351)
N353_AND(42,2,1,17,16,224)
N354_OR(352,353)
N355_AND(-43,18,354)
N356_AND(43,2,1,18,236)
N357_OR(355,356)
N358_AND(-44,19,357)
N359_AND(44,2,1,19,18,248)
N360_OR(358,359)
N361_AND(-45,20,360)
N362_AND(45,2,1,20,260)
N363_OR(361,362)
N364_AND(-46,21,363)
N365_AND(46,2,1,21,20,272)
N366_OR(364,365)
N367_AND(-47,22,366)
N368_AND(47,2,1,22,284)
N369_OR(367,368)
N370_AND(-48,23,369)
N371_AND(48,2,1,23,22,296)
N372_OR(370,371)
N373_AND(49,24,372)
N374_OR(305,373)
N375_AND(-25,374)
ROOT 375
c GEN: Time = 0.00.  Generated POG representation
c Justifying root literal 375
c GEN: Time = 0.00.  Deleted asserted clauses
c GEN: Time = 0.00.  Deleted input clauses
c 1011 lines written
c GEN: Formula
c GEN:    input variables: 49
c GEN:    input clauses  : 27
c GEN: POG nodes
c GEN:    product   : 216
c GEN:    sum       : 109
c GEN:    node TOTAL: 325
c GEN: Other nodes
c GEN:    aux product: 0
c GEN: Node visits
c GEN:    product/BCP: 0
c GEN:    product/SAT: 0
c GEN:    sum        : 0
c GEN:    visit TOTAL: 0
c GEN: Lemmas
c GEN:    definitions : 0
c GEN:    applications: 0
c GEN:    duplicates  : 0
c GEN:    merged args : 0
c GEN: SAT Problem Clause Counts (0 instances)
c GEN: Clauses
c GEN:    POG definition       : 1235
c GEN:    AUX definition       : 0
c GEN:    product justification: 0
c GEN:    sum justification    : 0
c GEN:    literal justification: 1
c GEN:    lemma application    : 0
c GEN:    monolithic proof     : 0
c GEN:    clause TOTAL         : 1236
c GEN: Time
c GEN:   SAT execution  : 0.00
c GEN:   other execution: 0.00
c GEN:   time TOTAL     : 0.00
GEN LOG: Elapsed time = 0.006 seconds
GEN OUTCOME: normal
GEN: LOG: size ./tree-exa2-25_low.cpog 355 lines 25728 bytes
FCHECK LOG: Running ../../src/cpog-check -v 5 -1 -S ./tree-exa2-25.sdimacs ./tree-exa2-25_low.cpog
FCHECK LOG: Time limit 2500 seconds
File ./tree-exa2-25.sdimacs. Line 1:Read token.  Token = 'p'.  Type = string
File ./tree-exa2-25.sdimacs. Line 1:Read token.  Token = 'cnf'.  Type = string
File ./tree-exa2-25.sdimacs. Line 1:Read token.  Token = '50'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 1:Read token.  Token = '27'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 2:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-25.sdimacs. Line 2:Read token.  Token = '-25'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 2:Starting clause 1
File ./tree-exa2-25.sdimacs. Line 2:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 2:Finished clause.  Full length 2.  Chunk ID 0.  Offset 0 1: -25
File ./tree-exa2-25.sdimacs. Line 3:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-25.sdimacs. Line 3:Read token.  Token = '25'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 3:Starting clause 2
File ./tree-exa2-25.sdimacs. Line 3:Read token.  Token = '49'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 3:Read token.  Token = '-24'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 3:Read token.  Token = '-48'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 3:Read token.  Token = '-23'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 3:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 3:Finished clause.  Full length 6.  Chunk ID 0.  Offset 2 2: 25 49 -24 -48 -23
File ./tree-exa2-25.sdimacs. Line 4:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-25.sdimacs. Line 4:Read token.  Token = '24'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 4:Starting clause 3
File ./tree-exa2-25.sdimacs. Line 4:Read token.  Token = '48'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 4:Read token.  Token = '-23'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 4:Read token.  Token = '-47'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 4:Read token.  Token = '-22'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 4:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 4:Finished clause.  Full length 6.  Chunk ID 0.  Offset 8 3: 24 48 -23 -47 -22
File ./tree-exa2-25.sdimacs. Line 5:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-25.sdimacs. Line 5:Read token.  Token = '23'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 5:Starting clause 4
File ./tree-exa2-25.sdimacs. Line 5:Read token.  Token = '47'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 5:Read token.  Token = '-22'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 5:Read token.  Token = '-46'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 5:Read token.  Token = '-21'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 5:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 5:Finished clause.  Full length 6.  Chunk ID 0.  Offset 14 4: 23 47 -22 -46 -21
File ./tree-exa2-25.sdimacs. Line 6:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-25.sdimacs. Line 6:Read token.  Token = '22'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 6:Starting clause 5
File ./tree-exa2-25.sdimacs. Line 6:Read token.  Token = '46'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 6:Read token.  Token = '-21'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 6:Read token.  Token = '-45'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 6:Read token.  Token = '-20'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 6:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 6:Finished clause.  Full length 6.  Chunk ID 0.  Offset 20 5: 22 46 -21 -45 -20
File ./tree-exa2-25.sdimacs. Line 7:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-25.sdimacs. Line 7:Read token.  Token = '21'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 7:Starting clause 6
File ./tree-exa2-25.sdimacs. Line 7:Read token.  Token = '45'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 7:Read token.  Token = '-20'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 7:Read token.  Token = '-44'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 7:Read token.  Token = '-19'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 7:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 7:Finished clause.  Full length 6.  Chunk ID 0.  Offset 26 6: 21 45 -20 -44 -19
File ./tree-exa2-25.sdimacs. Line 8:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-25.sdimacs. Line 8:Read token.  Token = '20'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 8:Starting clause 7
File ./tree-exa2-25.sdimacs. Line 8:Read token.  Token = '44'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 8:Read token.  Token = '-19'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 8:Read token.  Token = '-43'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 8:Read token.  Token = '-18'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 8:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 8:Finished clause.  Full length 6.  Chunk ID 0.  Offset 32 7: 20 44 -19 -43 -18
File ./tree-exa2-25.sdimacs. Line 9:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-25.sdimacs. Line 9:Read token.  Token = '19'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 9:Starting clause 8
File ./tree-exa2-25.sdimacs. Line 9:Read token.  Token = '43'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 9:Read token.  Token = '-18'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 9:Read token.  Token = '-42'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 9:Read token.  Token = '-17'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 9:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 9:Finished clause.  Full length 6.  Chunk ID 0.  Offset 38 8: 19 43 -18 -42 -17
File ./tree-exa2-25.sdimacs. Line 10:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-25.sdimacs. Line 10:Read token.  Token = '18'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 10:Starting clause 9
File ./tree-exa2-25.sdimacs. Line 10:Read token.  Token = '42'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 10:Read token.  Token = '-17'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 10:Read token.  Token = '-41'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 10:Read token.  Token = '-16'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 10:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 10:Finished clause.  Full length 6.  Chunk ID 0.  Offset 44 9: 18 42 -17 -41 -16
File ./tree-exa2-25.sdimacs. Line 11:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-25.sdimacs. Line 11:Read token.  Token = '17'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 11:Starting clause 10
File ./tree-exa2-25.sdimacs. Line 11:Read token.  Token = '41'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 11:Read token.  Token = '-16'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 11:Read token.  Token = '-40'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 11:Read token.  Token = '-15'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 11:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 11:Finished clause.  Full length 6.  Chunk ID 0.  Offset 50 10: 17 41 -16 -40 -15
File ./tree-exa2-25.sdimacs. Line 12:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-25.sdimacs. Line 12:Read token.  Token = '16'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 12:Starting clause 11
File ./tree-exa2-25.sdimacs. Line 12:Read token.  Token = '40'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 12:Read token.  Token = '-15'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 12:Read token.  Token = '-39'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 12:Read token.  Token = '-14'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 12:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 12:Finished clause.  Full length 6.  Chunk ID 0.  Offset 56 11: 16 40 -15 -39 -14
File ./tree-exa2-25.sdimacs. Line 13:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-25.sdimacs. Line 13:Read token.  Token = '15'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 13:Starting clause 12
File ./tree-exa2-25.sdimacs. Line 13:Read token.  Token = '39'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 13:Read token.  Token = '-14'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 13:Read token.  Token = '-38'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 13:Read token.  Token = '-13'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 13:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 13:Finished clause.  Full length 6.  Chunk ID 0.  Offset 62 12: 15 39 -14 -38 -13
File ./tree-exa2-25.sdimacs. Line 14:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-25.sdimacs. Line 14:Read token.  Token = '14'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 14:Starting clause 13
File ./tree-exa2-25.sdimacs. Line 14:Read token.  Token = '38'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 14:Read token.  Token = '-13'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 14:Read token.  Token = '-37'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 14:Read token.  Token = '-12'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 14:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 14:Finished clause.  Full length 6.  Chunk ID 0.  Offset 68 13: 14 38 -13 -37 -12
File ./tree-exa2-25.sdimacs. Line 15:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-25.sdimacs. Line 15:Read token.  Token = '13'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 15:Starting clause 14
File ./tree-exa2-25.sdimacs. Line 15:Read token.  Token = '37'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 15:Read token.  Token = '-12'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 15:Read token.  Token = '-36'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 15:Read token.  Token = '-11'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 15:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 15:Finished clause.  Full length 6.  Chunk ID 0.  Offset 74 14: 13 37 -12 -36 -11
File ./tree-exa2-25.sdimacs. Line 16:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-25.sdimacs. Line 16:Read token.  Token = '12'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 16:Starting clause 15
File ./tree-exa2-25.sdimacs. Line 16:Read token.  Token = '36'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 16:Read token.  Token = '-11'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 16:Read token.  Token = '-35'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 16:Read token.  Token = '-10'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 16:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 16:Finished clause.  Full length 6.  Chunk ID 0.  Offset 80 15: 12 36 -11 -35 -10
File ./tree-exa2-25.sdimacs. Line 17:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-25.sdimacs. Line 17:Read token.  Token = '11'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 17:Starting clause 16
File ./tree-exa2-25.sdimacs. Line 17:Read token.  Token = '35'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 17:Read token.  Token = '-10'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 17:Read token.  Token = '-34'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 17:Read token.  Token = '-9'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 17:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 17:Finished clause.  Full length 6.  Chunk ID 0.  Offset 86 16: 11 35 -10 -34 -9
File ./tree-exa2-25.sdimacs. Line 18:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-25.sdimacs. Line 18:Read token.  Token = '10'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 18:Starting clause 17
File ./tree-exa2-25.sdimacs. Line 18:Read token.  Token = '34'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 18:Read token.  Token = '-9'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 18:Read token.  Token = '-33'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 18:Read token.  Token = '-8'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 18:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 18:Finished clause.  Full length 6.  Chunk ID 0.  Offset 92 17: 10 34 -9 -33 -8
File ./tree-exa2-25.sdimacs. Line 19:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-25.sdimacs. Line 19:Read token.  Token = '9'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 19:Starting clause 18
File ./tree-exa2-25.sdimacs. Line 19:Read token.  Token = '33'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 19:Read token.  Token = '-8'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 19:Read token.  Token = '-32'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 19:Read token.  Token = '-7'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 19:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 19:Finished clause.  Full length 6.  Chunk ID 0.  Offset 98 18: 9 33 -8 -32 -7
File ./tree-exa2-25.sdimacs. Line 20:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-25.sdimacs. Line 20:Read token.  Token = '8'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 20:Starting clause 19
File ./tree-exa2-25.sdimacs. Line 20:Read token.  Token = '32'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 20:Read token.  Token = '-7'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 20:Read token.  Token = '-31'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 20:Read token.  Token = '-6'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 20:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 20:Finished clause.  Full length 6.  Chunk ID 0.  Offset 104 19: 8 32 -7 -31 -6
File ./tree-exa2-25.sdimacs. Line 21:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-25.sdimacs. Line 21:Read token.  Token = '7'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 21:Starting clause 20
File ./tree-exa2-25.sdimacs. Line 21:Read token.  Token = '31'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 21:Read token.  Token = '-6'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 21:Read token.  Token = '-30'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 21:Read token.  Token = '-5'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 21:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 21:Finished clause.  Full length 6.  Chunk ID 0.  Offset 110 20: 7 31 -6 -30 -5
File ./tree-exa2-25.sdimacs. Line 22:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-25.sdimacs. Line 22:Read token.  Token = '6'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 22:Starting clause 21
File ./tree-exa2-25.sdimacs. Line 22:Read token.  Token = '30'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 22:Read token.  Token = '-5'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 22:Read token.  Token = '-29'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 22:Read token.  Token = '-4'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 22:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 22:Finished clause.  Full length 6.  Chunk ID 0.  Offset 116 21: 6 30 -5 -29 -4
File ./tree-exa2-25.sdimacs. Line 23:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-25.sdimacs. Line 23:Read token.  Token = '5'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 23:Starting clause 22
File ./tree-exa2-25.sdimacs. Line 23:Read token.  Token = '29'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 23:Read token.  Token = '-4'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 23:Read token.  Token = '-28'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 23:Read token.  Token = '-3'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 23:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 23:Finished clause.  Full length 6.  Chunk ID 0.  Offset 122 22: 5 29 -4 -28 -3
File ./tree-exa2-25.sdimacs. Line 24:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-25.sdimacs. Line 24:Read token.  Token = '4'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 24:Starting clause 23
File ./tree-exa2-25.sdimacs. Line 24:Read token.  Token = '28'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 24:Read token.  Token = '-3'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 24:Read token.  Token = '-27'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 24:Read token.  Token = '-2'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 24:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 24:Finished clause.  Full length 6.  Chunk ID 0.  Offset 128 23: 4 28 -3 -27 -2
File ./tree-exa2-25.sdimacs. Line 25:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-25.sdimacs. Line 25:Read token.  Token = '3'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 25:Starting clause 24
File ./tree-exa2-25.sdimacs. Line 25:Read token.  Token = '27'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 25:Read token.  Token = '-2'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 25:Read token.  Token = '-26'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 25:Read token.  Token = '-1'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 25:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 25:Finished clause.  Full length 6.  Chunk ID 0.  Offset 134 24: 3 27 -2 -26 -1
File ./tree-exa2-25.sdimacs. Line 26:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-25.sdimacs. Line 26:Read token.  Token = '2'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 26:Starting clause 25
File ./tree-exa2-25.sdimacs. Line 26:Read token.  Token = '1'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 26:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 26:Finished clause.  Full length 3.  Chunk ID 0.  Offset 140 25: 2 1
File ./tree-exa2-25.sdimacs. Line 27:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-25.sdimacs. Line 27:Read token.  Token = '2'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 27:Starting clause 26
File ./tree-exa2-25.sdimacs. Line 27:Read token.  Token = '-1'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 27:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 27:Finished clause.  Full length 3.  Chunk ID 0.  Offset 143 26: 2 -1
File ./tree-exa2-25.sdimacs. Line 28:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-25.sdimacs. Line 28:Read token.  Token = '-2'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 28:Starting clause 27
File ./tree-exa2-25.sdimacs. Line 28:Read token.  Token = '1'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 28:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-25.sdimacs. Line 28:Finished clause.  Full length 3.  Chunk ID 0.  Offset 146 27: -2 1
File ./tree-exa2-25.sdimacs. Line 29:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-25.sdimacs. Line 29:Read token.  Token = ''.  Type = EOF
CHECK: Read CNF file with 50 variables and 27 clauses
CNF File.  27 clauses
1: -25
2: 25 49 -24 -48 -23
3: 24 48 -23 -47 -22
4: 23 47 -22 -46 -21
5: 22 46 -21 -45 -20
6: 21 45 -20 -44 -19
7: 20 44 -19 -43 -18
8: 19 43 -18 -42 -17
9: 18 42 -17 -41 -16
10: 17 41 -16 -40 -15
11: 16 40 -15 -39 -14
12: 15 39 -14 -38 -13
13: 14 38 -13 -37 -12
14: 13 37 -12 -36 -11
15: 12 36 -11 -35 -10
16: 11 35 -10 -34 -9
17: 10 34 -9 -33 -8
18: 9 33 -8 -32 -7
19: 8 32 -7 -31 -6
20: 7 31 -6 -30 -5
21: 6 30 -5 -29 -4
22: 5 29 -4 -28 -3
23: 4 28 -3 -27 -2
24: 3 27 -2 -26 -1
25: 2 1
26: 2 -1
27: -2 1
File ./tree-exa2-25_low.cpog. Line 1:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-25_low.cpog. Line 2:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-25_low.cpog. Line 3:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-25_low.cpog. Line 4:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-25_low.cpog. Line 5:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-25_low.cpog. Line 6:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-25_low.cpog. Line 7:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-25_low.cpog. Line 8:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-25_low.cpog. Line 9:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-25_low.cpog. Line 10:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-25_low.cpog. Line 11:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-25_low.cpog. Line 12:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-25_low.cpog. Line 13:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-25_low.cpog. Line 14:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-25_low.cpog. Line 15:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-25_low.cpog. Line 16:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-25_low.cpog. Line 17:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-25_low.cpog. Line 18:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-25_low.cpog. Line 19:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-25_low.cpog. Line 20:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-25_low.cpog. Line 21:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-25_low.cpog. Line 22:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-25_low.cpog. Line 23:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-25_low.cpog. Line 24:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-25_low.cpog. Line 25:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-25_low.cpog. Line 26:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-25_low.cpog. Line 27:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-25_low.cpog. Line 28:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-25_low.cpog. Line 29:Read token.  Token = 'r'.  Type = string
File ./tree-exa2-25_low.cpog. Line 29:Read token.  Token = '375'.  Type = integer
File ./tree-exa2-25_low.cpog. Line 29:Root literal declared as 375
File ./tree-exa2-25_low.cpog. Line 30:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-25_low.cpog. Line 30:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-25_low.cpog. Line 31:Read token.  Token = '28'.  Type = integer
File ./tree-exa2-25_low.cpog. Line 31:Read token.  Token = 'p'.  Type = string
File ./tree-exa2-25_low.cpog. Line 31:Read token.  Token = '50'.  Type = integer
ERROR. File ./tree-exa2-25_low.cpog. Line 31. Function node_new. Invalid operation id 50
FCHECK ERROR: Return code = 1
FCHECK LOG: Elapsed time = 0.000 seconds
FCHECK OUTCOME: failed
OVERALL LOG: Elapsed time = 0.011 seconds
OVERALL OUTCOME: failed
