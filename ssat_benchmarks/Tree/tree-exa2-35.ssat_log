SSAT LOG: Running ../../tools/SharpSSAT -l -p -s ./tree-exa2-35.sdimacs
SSAT LOG: Time limit 1000 seconds
Solving ./tree-exa2-35.sdimacs
variables (all/used/free): 	70/70/0
clauses (all/long/binary/unit): 37/33/3/1

Preprocessing .. DONE
variables (all/used/free): 	70/70/0
clauses (all/long/binary/unit): 36/33/3/0
Maximum cache size:	100381 MB

End of Solving
Start Generating Certificate...


variables (total / active / free)	70/70/0
clauses (removed) 			37 (0)
decisions 				156
conflicts 				1
conflict clauses (all/bin/unit) 	0/0/1

cache size 7MB	
cache (stores / hits) 			157/145
cache miss rate 0%
avg. variable count (stores / hits) 	33.0573/29.1034

number of nodes in trace 	162
number of edges in trace 	313

# satisfying probability = 1

# END

time: 0.002099s

upper trace written to ./tree-exa2-35_up.nnf
lower trace written to ./tree-exa2-35_low.nnf
maximum satisfying probability written to ./tree-exa2-35.prob
SSAT LOG: Elapsed time = 0.003 seconds
SSAT OUTCOME: normal
EVAL LOG: Running ../../src/evalSSAT ./tree-exa2-35.sdimacs ./tree-exa2-35_up.nnf ./tree-exa2-35_low.nnf ./tree-exa2-35.prob
EVAL LOG: Time limit 1000 seconds
c Read D4 NNF file with 472 nodes (159 explicit) and 313 edges
c Read D4 NNF file with 472 nodes (159 explicit) and 313 edges
EVAL LOG: Elapsed time = 0.001 seconds
EVAL OUTCOME: normal
GEN LOG: Running ../../src/cpog-gen -v 5 -1 -S -C 2147483647 -L d2p.log ./tree-exa2-35.sdimacs ./tree-exa2-35_low.nnf ./tree-exa2-35_low.cpog
GEN LOG: Time limit 2500 seconds
c GEN: Program options
c GEN:   Multi-literal:   yes
c GEN:   Use lemmas:      yes
c GEN:   Delete files:    yes
c GEN:   One-sided:       yes
c GEN:   Monolithic mode: no
c GEN:   DRAT threshold:  1000
c GEN:   Clause limit:    2147483647
c GEN:   BCP limit:       1
c GEN: Time = 0.00.  Read input file with 69 variables and 37 clauses
c Unit literal -35 justified by input clause #1
c BCP Pass 1.  Active clauses:c  2c  3c  4c  5c  6c  7c  8c  9c  10c  11c  12c  13c  14c  15c  16c  17c  18c  19c  20c  21c  22c  23c  24c  25c  26c  27c  28c  29c  30c  31c  32c  33c  34c  35c  36c  37c 
c   Checking clause #2: -33 -34 35 -68 69 0
c   Unit literals:c  -35c 
c     Potential unit -33
c     Additional unassigned literal -34
c     Still active
c   Checking clause #3: -32 -33 34 -67 68 0
c   Unit literals:c  -35c 
c     Potential unit -32
c     Additional unassigned literal -33
c     Still active
c   Checking clause #4: -31 -32 33 -66 67 0
c   Unit literals:c  -35c 
c     Potential unit -31
c     Additional unassigned literal -32
c     Still active
c   Checking clause #5: -30 -31 32 -65 66 0
c   Unit literals:c  -35c 
c     Potential unit -30
c     Additional unassigned literal -31
c     Still active
c   Checking clause #6: -29 -30 31 -64 65 0
c   Unit literals:c  -35c 
c     Potential unit -29
c     Additional unassigned literal -30
c     Still active
c   Checking clause #7: -28 -29 30 -63 64 0
c   Unit literals:c  -35c 
c     Potential unit -28
c     Additional unassigned literal -29
c     Still active
c   Checking clause #8: -27 -28 29 -62 63 0
c   Unit literals:c  -35c 
c     Potential unit -27
c     Additional unassigned literal -28
c     Still active
c   Checking clause #9: -26 -27 28 -61 62 0
c   Unit literals:c  -35c 
c     Potential unit -26
c     Additional unassigned literal -27
c     Still active
c   Checking clause #10: -25 -26 27 -60 61 0
c   Unit literals:c  -35c 
c     Potential unit -25
c     Additional unassigned literal -26
c     Still active
c   Checking clause #11: -24 -25 26 -59 60 0
c   Unit literals:c  -35c 
c     Potential unit -24
c     Additional unassigned literal -25
c     Still active
c   Checking clause #12: -23 -24 25 -58 59 0
c   Unit literals:c  -35c 
c     Potential unit -23
c     Additional unassigned literal -24
c     Still active
c   Checking clause #13: -22 -23 24 -57 58 0
c   Unit literals:c  -35c 
c     Potential unit -22
c     Additional unassigned literal -23
c     Still active
c   Checking clause #14: -21 -22 23 -56 57 0
c   Unit literals:c  -35c 
c     Potential unit -21
c     Additional unassigned literal -22
c     Still active
c   Checking clause #15: -20 -21 22 -55 56 0
c   Unit literals:c  -35c 
c     Potential unit -20
c     Additional unassigned literal -21
c     Still active
c   Checking clause #16: -19 -20 21 -54 55 0
c   Unit literals:c  -35c 
c     Potential unit -19
c     Additional unassigned literal -20
c     Still active
c   Checking clause #17: -18 -19 20 -53 54 0
c   Unit literals:c  -35c 
c     Potential unit -18
c     Additional unassigned literal -19
c     Still active
c   Checking clause #18: -17 -18 19 -52 53 0
c   Unit literals:c  -35c 
c     Potential unit -17
c     Additional unassigned literal -18
c     Still active
c   Checking clause #19: -16 -17 18 -51 52 0
c   Unit literals:c  -35c 
c     Potential unit -16
c     Additional unassigned literal -17
c     Still active
c   Checking clause #20: -15 -16 17 -50 51 0
c   Unit literals:c  -35c 
c     Potential unit -15
c     Additional unassigned literal -16
c     Still active
c   Checking clause #21: -14 -15 16 -49 50 0
c   Unit literals:c  -35c 
c     Potential unit -14
c     Additional unassigned literal -15
c     Still active
c   Checking clause #22: -13 -14 15 -48 49 0
c   Unit literals:c  -35c 
c     Potential unit -13
c     Additional unassigned literal -14
c     Still active
c   Checking clause #23: -12 -13 14 -47 48 0
c   Unit literals:c  -35c 
c     Potential unit -12
c     Additional unassigned literal -13
c     Still active
c   Checking clause #24: -11 -12 13 -46 47 0
c   Unit literals:c  -35c 
c     Potential unit -11
c     Additional unassigned literal -12
c     Still active
c   Checking clause #25: -10 -11 12 -45 46 0
c   Unit literals:c  -35c 
c     Potential unit -10
c     Additional unassigned literal -11
c     Still active
c   Checking clause #26: -9 -10 11 -44 45 0
c   Unit literals:c  -35c 
c     Potential unit -9
c     Additional unassigned literal -10
c     Still active
c   Checking clause #27: -8 -9 10 -43 44 0
c   Unit literals:c  -35c 
c     Potential unit -8
c     Additional unassigned literal -9
c     Still active
c   Checking clause #28: -7 -8 9 -42 43 0
c   Unit literals:c  -35c 
c     Potential unit -7
c     Additional unassigned literal -8
c     Still active
c   Checking clause #29: -6 -7 8 -41 42 0
c   Unit literals:c  -35c 
c     Potential unit -6
c     Additional unassigned literal -7
c     Still active
c   Checking clause #30: -5 -6 7 -40 41 0
c   Unit literals:c  -35c 
c     Potential unit -5
c     Additional unassigned literal -6
c     Still active
c   Checking clause #31: -4 -5 6 -39 40 0
c   Unit literals:c  -35c 
c     Potential unit -4
c     Additional unassigned literal -5
c     Still active
c   Checking clause #32: -3 -4 5 -38 39 0
c   Unit literals:c  -35c 
c     Potential unit -3
c     Additional unassigned literal -4
c     Still active
c   Checking clause #33: -2 -3 4 -37 38 0
c   Unit literals:c  -35c 
c     Potential unit -2
c     Additional unassigned literal -3
c     Still active
c   Checking clause #34: -1 -2 3 -36 37 0
c   Unit literals:c  -35c 
c     Potential unit -1
c     Additional unassigned literal -2
c     Still active
c   Checking clause #35: 1 2 0
c   Unit literals:c  -35c 
c     Potential unit 1
c     Additional unassigned literal 2
c     Still active
c   Checking clause #36: -1 2 0
c   Unit literals:c  -35c 
c     Potential unit -1
c     Additional unassigned literal 2
c     Still active
c   Checking clause #37: 1 -2 0
c   Unit literals:c  -35c 
c     Potential unit 1
c     Additional unassigned literal -2
c     Still active
c Line #1.  Created POG node FALSE number 70 from NNF node 1
c Line #2.  Created POG node TRUE number 71 from NNF node 2
c Line #3.  Created POG node OR number 72 from NNF node 3
c Line #4.  Created POG node OR number 73 from NNF node 4
c Line #5.  Created POG node OR number 74 from NNF node 5
c Line #6.  Created POG node OR number 75 from NNF node 6
c Line #7.  Created POG node OR number 76 from NNF node 7
c Line #8.  Created POG node OR number 77 from NNF node 8
c Line #9.  Created POG node OR number 78 from NNF node 9
c Line #10.  Created POG node OR number 79 from NNF node 10
c Line #11.  Created POG node OR number 80 from NNF node 11
c Line #12.  Created POG node OR number 81 from NNF node 12
c Line #13.  Created POG node OR number 82 from NNF node 13
c Line #14.  Created POG node OR number 83 from NNF node 14
c Line #15.  Created POG node OR number 84 from NNF node 15
c Line #16.  Created POG node OR number 85 from NNF node 16
c Line #17.  Created POG node OR number 86 from NNF node 17
c Line #18.  Created POG node OR number 87 from NNF node 18
c Line #19.  Created POG node OR number 88 from NNF node 19
c Line #20.  Created POG node OR number 89 from NNF node 20
c Line #21.  Created POG node OR number 90 from NNF node 21
c Line #22.  Created POG node OR number 91 from NNF node 22
c Line #23.  Created POG node OR number 92 from NNF node 23
c Line #24.  Created POG node OR number 93 from NNF node 24
c Line #25.  Created POG node OR number 94 from NNF node 25
c Line #26.  Created POG node OR number 95 from NNF node 26
c Line #27.  Created POG node OR number 96 from NNF node 27
c Line #28.  Created POG node OR number 97 from NNF node 28
c Line #29.  Created POG node OR number 98 from NNF node 29
c Line #30.  Created POG node OR number 99 from NNF node 30
c Line #31.  Created POG node OR number 100 from NNF node 31
c Line #32.  Created POG node OR number 101 from NNF node 32
c Line #33.  Created POG node OR number 102 from NNF node 33
c Line #34.  Created POG node OR number 103 from NNF node 34
c Line #35.  Created POG node OR number 104 from NNF node 35
c Line #36.  Created POG node OR number 105 from NNF node 36
c Line #37.  Created POG node OR number 106 from NNF node 37
c Line #38.  Created POG node OR number 107 from NNF node 38
c Line #39.  Created POG node OR number 108 from NNF node 39
c Line #40.  Created POG node OR number 109 from NNF node 40
c Line #41.  Created POG node OR number 110 from NNF node 41
c Line #42.  Created POG node OR number 111 from NNF node 42
c Line #43.  Created POG node OR number 112 from NNF node 43
c Line #44.  Created POG node OR number 113 from NNF node 44
c Line #45.  Created POG node OR number 114 from NNF node 45
c Line #46.  Created POG node OR number 115 from NNF node 46
c Line #47.  Created POG node OR number 116 from NNF node 47
c Line #48.  Created POG node OR number 117 from NNF node 48
c Line #49.  Created POG node OR number 118 from NNF node 49
c Line #50.  Created POG node OR number 119 from NNF node 50
c Line #51.  Created POG node OR number 120 from NNF node 51
c Line #52.  Created POG node OR number 121 from NNF node 52
c Line #53.  Created POG node OR number 122 from NNF node 53
c Line #54.  Created POG node OR number 123 from NNF node 54
c Line #55.  Created POG node OR number 124 from NNF node 55
c Line #56.  Created POG node OR number 125 from NNF node 56
c Line #57.  Created POG node OR number 126 from NNF node 57
c Line #58.  Created POG node OR number 127 from NNF node 58
c Line #59.  Created POG node OR number 128 from NNF node 59
c Line #60.  Created POG node OR number 129 from NNF node 60
c Line #61.  Created POG node OR number 130 from NNF node 61
c Line #62.  Created POG node OR number 131 from NNF node 62
c Line #63.  Created POG node OR number 132 from NNF node 63
c Line #64.  Created POG node OR number 133 from NNF node 64
c Line #65.  Created POG node OR number 134 from NNF node 65
c Line #66.  Created POG node OR number 135 from NNF node 66
c Line #67.  Created POG node OR number 136 from NNF node 67
c Line #68.  Created POG node OR number 137 from NNF node 68
c Line #69. Created POG AND Node 138 to hold literals between NNF nodes 68 and 2
c Line #69.  Adding edge between POG nodes 137 and 138
c Line #70. Created POG AND Node 139 to hold literals between NNF nodes 68 and 2
c Line #70.  Adding edge between POG nodes 137 and 139
c Line #71. Created POG AND Node 140 to hold literals between NNF nodes 67 and 68
c Line #71.  Adding edge between POG nodes 136 and 140
c Line #72. Created POG AND Node 141 to hold literals between NNF nodes 67 and 2
c Line #72.  Adding edge between POG nodes 136 and 141
c Line #73. Created POG AND Node 142 to hold literals between NNF nodes 66 and 67
c Line #73.  Adding edge between POG nodes 135 and 142
c Line #74.  Created POG node OR number 143 from NNF node 69
c Line #75. Created POG AND Node 144 to hold literals between NNF nodes 69 and 2
c Line #75.  Adding edge between POG nodes 143 and 144
c Line #76. Created POG AND Node 145 to hold literals between NNF nodes 69 and 2
c Line #76.  Adding edge between POG nodes 143 and 145
c Line #77. Created POG AND Node 146 to hold literals between NNF nodes 66 and 69
c Line #77.  Adding edge between POG nodes 135 and 146
c Line #78. Created POG AND Node 147 to hold literals between NNF nodes 65 and 66
c Line #78.  Adding edge between POG nodes 134 and 147
c Line #79.  Created POG node OR number 148 from NNF node 70
c Line #80. Created POG AND Node 149 to hold literals between NNF nodes 70 and 69
c Line #80.  Adding edge between POG nodes 148 and 149
c Line #81. Created POG AND Node 150 to hold literals between NNF nodes 70 and 68
c Line #81.  Adding edge between POG nodes 148 and 150
c Line #82. Created POG AND Node 151 to hold literals between NNF nodes 65 and 70
c Line #82.  Adding edge between POG nodes 134 and 151
c Line #83. Created POG AND Node 152 to hold literals between NNF nodes 64 and 65
c Line #83.  Adding edge between POG nodes 133 and 152
c Line #84.  Created POG node OR number 153 from NNF node 71
c Line #85. Created POG AND Node 154 to hold literals between NNF nodes 71 and 69
c Line #85.  Adding edge between POG nodes 153 and 154
c Line #86. Created POG AND Node 155 to hold literals between NNF nodes 71 and 69
c Line #86.  Adding edge between POG nodes 153 and 155
c Line #87. Created POG AND Node 156 to hold literals between NNF nodes 64 and 71
c Line #87.  Adding edge between POG nodes 133 and 156
c Line #88. Created POG AND Node 157 to hold literals between NNF nodes 63 and 64
c Line #88.  Adding edge between POG nodes 132 and 157
c Line #89.  Created POG node OR number 158 from NNF node 72
c Line #90. Created POG AND Node 159 to hold literals between NNF nodes 72 and 71
c Line #90.  Adding edge between POG nodes 158 and 159
c Line #91. Created POG AND Node 160 to hold literals between NNF nodes 72 and 66
c Line #91.  Adding edge between POG nodes 158 and 160
c Line #92. Created POG AND Node 161 to hold literals between NNF nodes 63 and 72
c Line #92.  Adding edge between POG nodes 132 and 161
c Line #93. Created POG AND Node 162 to hold literals between NNF nodes 62 and 63
c Line #93.  Adding edge between POG nodes 131 and 162
c Line #94.  Created POG node OR number 163 from NNF node 73
c Line #95. Created POG AND Node 164 to hold literals between NNF nodes 73 and 69
c Line #95.  Adding edge between POG nodes 163 and 164
c Line #96. Created POG AND Node 165 to hold literals between NNF nodes 73 and 69
c Line #96.  Adding edge between POG nodes 163 and 165
c Line #97. Created POG AND Node 166 to hold literals between NNF nodes 62 and 73
c Line #97.  Adding edge between POG nodes 131 and 166
c Line #98. Created POG AND Node 167 to hold literals between NNF nodes 61 and 62
c Line #98.  Adding edge between POG nodes 130 and 167
c Line #99.  Created POG node OR number 168 from NNF node 74
c Line #100. Created POG AND Node 169 to hold literals between NNF nodes 74 and 73
c Line #100.  Adding edge between POG nodes 168 and 169
c Line #101. Created POG AND Node 170 to hold literals between NNF nodes 74 and 64
c Line #101.  Adding edge between POG nodes 168 and 170
c Line #102. Created POG AND Node 171 to hold literals between NNF nodes 61 and 74
c Line #102.  Adding edge between POG nodes 130 and 171
c Line #103. Created POG AND Node 172 to hold literals between NNF nodes 60 and 61
c Line #103.  Adding edge between POG nodes 129 and 172
c Line #104.  Created POG node OR number 173 from NNF node 75
c Line #105. Created POG AND Node 174 to hold literals between NNF nodes 75 and 73
c Line #105.  Adding edge between POG nodes 173 and 174
c Line #106. Created POG AND Node 175 to hold literals between NNF nodes 75 and 73
c Line #106.  Adding edge between POG nodes 173 and 175
c Line #107. Created POG AND Node 176 to hold literals between NNF nodes 60 and 75
c Line #107.  Adding edge between POG nodes 129 and 176
c Line #108. Created POG AND Node 177 to hold literals between NNF nodes 59 and 60
c Line #108.  Adding edge between POG nodes 128 and 177
c Line #109.  Created POG node OR number 178 from NNF node 76
c Line #110. Created POG AND Node 179 to hold literals between NNF nodes 76 and 75
c Line #110.  Adding edge between POG nodes 178 and 179
c Line #111. Created POG AND Node 180 to hold literals between NNF nodes 76 and 62
c Line #111.  Adding edge between POG nodes 178 and 180
c Line #112. Created POG AND Node 181 to hold literals between NNF nodes 59 and 76
c Line #112.  Adding edge between POG nodes 128 and 181
c Line #113. Created POG AND Node 182 to hold literals between NNF nodes 58 and 59
c Line #113.  Adding edge between POG nodes 127 and 182
c Line #114.  Created POG node OR number 183 from NNF node 77
c Line #115. Created POG AND Node 184 to hold literals between NNF nodes 77 and 73
c Line #115.  Adding edge between POG nodes 183 and 184
c Line #116. Created POG AND Node 185 to hold literals between NNF nodes 77 and 73
c Line #116.  Adding edge between POG nodes 183 and 185
c Line #117. Created POG AND Node 186 to hold literals between NNF nodes 58 and 77
c Line #117.  Adding edge between POG nodes 127 and 186
c Line #118. Created POG AND Node 187 to hold literals between NNF nodes 57 and 58
c Line #118.  Adding edge between POG nodes 126 and 187
c Line #119.  Created POG node OR number 188 from NNF node 78
c Line #120. Created POG AND Node 189 to hold literals between NNF nodes 78 and 77
c Line #120.  Adding edge between POG nodes 188 and 189
c Line #121. Created POG AND Node 190 to hold literals between NNF nodes 78 and 60
c Line #121.  Adding edge between POG nodes 188 and 190
c Line #122. Created POG AND Node 191 to hold literals between NNF nodes 57 and 78
c Line #122.  Adding edge between POG nodes 126 and 191
c Line #123. Created POG AND Node 192 to hold literals between NNF nodes 56 and 57
c Line #123.  Adding edge between POG nodes 125 and 192
c Line #124.  Created POG node OR number 193 from NNF node 79
c Line #125. Created POG AND Node 194 to hold literals between NNF nodes 79 and 77
c Line #125.  Adding edge between POG nodes 193 and 194
c Line #126. Created POG AND Node 195 to hold literals between NNF nodes 79 and 77
c Line #126.  Adding edge between POG nodes 193 and 195
c Line #127. Created POG AND Node 196 to hold literals between NNF nodes 56 and 79
c Line #127.  Adding edge between POG nodes 125 and 196
c Line #128. Created POG AND Node 197 to hold literals between NNF nodes 55 and 56
c Line #128.  Adding edge between POG nodes 124 and 197
c Line #129.  Created POG node OR number 198 from NNF node 80
c Line #130. Created POG AND Node 199 to hold literals between NNF nodes 80 and 79
c Line #130.  Adding edge between POG nodes 198 and 199
c Line #131. Created POG AND Node 200 to hold literals between NNF nodes 80 and 58
c Line #131.  Adding edge between POG nodes 198 and 200
c Line #132. Created POG AND Node 201 to hold literals between NNF nodes 55 and 80
c Line #132.  Adding edge between POG nodes 124 and 201
c Line #133. Created POG AND Node 202 to hold literals between NNF nodes 54 and 55
c Line #133.  Adding edge between POG nodes 123 and 202
c Line #134.  Created POG node OR number 203 from NNF node 81
c Line #135. Created POG AND Node 204 to hold literals between NNF nodes 81 and 77
c Line #135.  Adding edge between POG nodes 203 and 204
c Line #136. Created POG AND Node 205 to hold literals between NNF nodes 81 and 77
c Line #136.  Adding edge between POG nodes 203 and 205
c Line #137. Created POG AND Node 206 to hold literals between NNF nodes 54 and 81
c Line #137.  Adding edge between POG nodes 123 and 206
c Line #138. Created POG AND Node 207 to hold literals between NNF nodes 53 and 54
c Line #138.  Adding edge between POG nodes 122 and 207
c Line #139.  Created POG node OR number 208 from NNF node 82
c Line #140. Created POG AND Node 209 to hold literals between NNF nodes 82 and 81
c Line #140.  Adding edge between POG nodes 208 and 209
c Line #141. Created POG AND Node 210 to hold literals between NNF nodes 82 and 56
c Line #141.  Adding edge between POG nodes 208 and 210
c Line #142. Created POG AND Node 211 to hold literals between NNF nodes 53 and 82
c Line #142.  Adding edge between POG nodes 122 and 211
c Line #143. Created POG AND Node 212 to hold literals between NNF nodes 52 and 53
c Line #143.  Adding edge between POG nodes 121 and 212
c Line #144.  Created POG node OR number 213 from NNF node 83
c Line #145. Created POG AND Node 214 to hold literals between NNF nodes 83 and 81
c Line #145.  Adding edge between POG nodes 213 and 214
c Line #146. Created POG AND Node 215 to hold literals between NNF nodes 83 and 81
c Line #146.  Adding edge between POG nodes 213 and 215
c Line #147. Created POG AND Node 216 to hold literals between NNF nodes 52 and 83
c Line #147.  Adding edge between POG nodes 121 and 216
c Line #148. Created POG AND Node 217 to hold literals between NNF nodes 51 and 52
c Line #148.  Adding edge between POG nodes 120 and 217
c Line #149.  Created POG node OR number 218 from NNF node 84
c Line #150. Created POG AND Node 219 to hold literals between NNF nodes 84 and 83
c Line #150.  Adding edge between POG nodes 218 and 219
c Line #151. Created POG AND Node 220 to hold literals between NNF nodes 84 and 54
c Line #151.  Adding edge between POG nodes 218 and 220
c Line #152. Created POG AND Node 221 to hold literals between NNF nodes 51 and 84
c Line #152.  Adding edge between POG nodes 120 and 221
c Line #153. Created POG AND Node 222 to hold literals between NNF nodes 50 and 51
c Line #153.  Adding edge between POG nodes 119 and 222
c Line #154.  Created POG node OR number 223 from NNF node 85
c Line #155. Created POG AND Node 224 to hold literals between NNF nodes 85 and 81
c Line #155.  Adding edge between POG nodes 223 and 224
c Line #156. Created POG AND Node 225 to hold literals between NNF nodes 85 and 81
c Line #156.  Adding edge between POG nodes 223 and 225
c Line #157. Created POG AND Node 226 to hold literals between NNF nodes 50 and 85
c Line #157.  Adding edge between POG nodes 119 and 226
c Line #158. Created POG AND Node 227 to hold literals between NNF nodes 49 and 50
c Line #158.  Adding edge between POG nodes 118 and 227
c Line #159.  Created POG node OR number 228 from NNF node 86
c Line #160. Created POG AND Node 229 to hold literals between NNF nodes 86 and 85
c Line #160.  Adding edge between POG nodes 228 and 229
c Line #161. Created POG AND Node 230 to hold literals between NNF nodes 86 and 52
c Line #161.  Adding edge between POG nodes 228 and 230
c Line #162. Created POG AND Node 231 to hold literals between NNF nodes 49 and 86
c Line #162.  Adding edge between POG nodes 118 and 231
c Line #163. Created POG AND Node 232 to hold literals between NNF nodes 48 and 49
c Line #163.  Adding edge between POG nodes 117 and 232
c Line #164.  Created POG node OR number 233 from NNF node 87
c Line #165. Created POG AND Node 234 to hold literals between NNF nodes 87 and 85
c Line #165.  Adding edge between POG nodes 233 and 234
c Line #166. Created POG AND Node 235 to hold literals between NNF nodes 87 and 85
c Line #166.  Adding edge between POG nodes 233 and 235
c Line #167. Created POG AND Node 236 to hold literals between NNF nodes 48 and 87
c Line #167.  Adding edge between POG nodes 117 and 236
c Line #168. Created POG AND Node 237 to hold literals between NNF nodes 47 and 48
c Line #168.  Adding edge between POG nodes 116 and 237
c Line #169.  Created POG node OR number 238 from NNF node 88
c Line #170. Created POG AND Node 239 to hold literals between NNF nodes 88 and 87
c Line #170.  Adding edge between POG nodes 238 and 239
c Line #171. Created POG AND Node 240 to hold literals between NNF nodes 88 and 50
c Line #171.  Adding edge between POG nodes 238 and 240
c Line #172. Created POG AND Node 241 to hold literals between NNF nodes 47 and 88
c Line #172.  Adding edge between POG nodes 116 and 241
c Line #173. Created POG AND Node 242 to hold literals between NNF nodes 46 and 47
c Line #173.  Adding edge between POG nodes 115 and 242
c Line #174.  Created POG node OR number 243 from NNF node 89
c Line #175. Created POG AND Node 244 to hold literals between NNF nodes 89 and 85
c Line #175.  Adding edge between POG nodes 243 and 244
c Line #176. Created POG AND Node 245 to hold literals between NNF nodes 89 and 85
c Line #176.  Adding edge between POG nodes 243 and 245
c Line #177. Created POG AND Node 246 to hold literals between NNF nodes 46 and 89
c Line #177.  Adding edge between POG nodes 115 and 246
c Line #178. Created POG AND Node 247 to hold literals between NNF nodes 45 and 46
c Line #178.  Adding edge between POG nodes 114 and 247
c Line #179.  Created POG node OR number 248 from NNF node 90
c Line #180. Created POG AND Node 249 to hold literals between NNF nodes 90 and 89
c Line #180.  Adding edge between POG nodes 248 and 249
c Line #181. Created POG AND Node 250 to hold literals between NNF nodes 90 and 48
c Line #181.  Adding edge between POG nodes 248 and 250
c Line #182. Created POG AND Node 251 to hold literals between NNF nodes 45 and 90
c Line #182.  Adding edge between POG nodes 114 and 251
c Line #183. Created POG AND Node 252 to hold literals between NNF nodes 44 and 45
c Line #183.  Adding edge between POG nodes 113 and 252
c Line #184.  Created POG node OR number 253 from NNF node 91
c Line #185. Created POG AND Node 254 to hold literals between NNF nodes 91 and 89
c Line #185.  Adding edge between POG nodes 253 and 254
c Line #186. Created POG AND Node 255 to hold literals between NNF nodes 91 and 89
c Line #186.  Adding edge between POG nodes 253 and 255
c Line #187. Created POG AND Node 256 to hold literals between NNF nodes 44 and 91
c Line #187.  Adding edge between POG nodes 113 and 256
c Line #188. Created POG AND Node 257 to hold literals between NNF nodes 43 and 44
c Line #188.  Adding edge between POG nodes 112 and 257
c Line #189.  Created POG node OR number 258 from NNF node 92
c Line #190. Created POG AND Node 259 to hold literals between NNF nodes 92 and 91
c Line #190.  Adding edge between POG nodes 258 and 259
c Line #191. Created POG AND Node 260 to hold literals between NNF nodes 92 and 46
c Line #191.  Adding edge between POG nodes 258 and 260
c Line #192. Created POG AND Node 261 to hold literals between NNF nodes 43 and 92
c Line #192.  Adding edge between POG nodes 112 and 261
c Line #193. Created POG AND Node 262 to hold literals between NNF nodes 42 and 43
c Line #193.  Adding edge between POG nodes 111 and 262
c Line #194.  Created POG node OR number 263 from NNF node 93
c Line #195. Created POG AND Node 264 to hold literals between NNF nodes 93 and 89
c Line #195.  Adding edge between POG nodes 263 and 264
c Line #196. Created POG AND Node 265 to hold literals between NNF nodes 93 and 89
c Line #196.  Adding edge between POG nodes 263 and 265
c Line #197. Created POG AND Node 266 to hold literals between NNF nodes 42 and 93
c Line #197.  Adding edge between POG nodes 111 and 266
c Line #198. Created POG AND Node 267 to hold literals between NNF nodes 41 and 42
c Line #198.  Adding edge between POG nodes 110 and 267
c Line #199.  Created POG node OR number 268 from NNF node 94
c Line #200. Created POG AND Node 269 to hold literals between NNF nodes 94 and 93
c Line #200.  Adding edge between POG nodes 268 and 269
c Line #201. Created POG AND Node 270 to hold literals between NNF nodes 94 and 44
c Line #201.  Adding edge between POG nodes 268 and 270
c Line #202. Created POG AND Node 271 to hold literals between NNF nodes 41 and 94
c Line #202.  Adding edge between POG nodes 110 and 271
c Line #203. Created POG AND Node 272 to hold literals between NNF nodes 40 and 41
c Line #203.  Adding edge between POG nodes 109 and 272
c Line #204.  Created POG node OR number 273 from NNF node 95
c Line #205. Created POG AND Node 274 to hold literals between NNF nodes 95 and 93
c Line #205.  Adding edge between POG nodes 273 and 274
c Line #206. Created POG AND Node 275 to hold literals between NNF nodes 95 and 93
c Line #206.  Adding edge between POG nodes 273 and 275
c Line #207. Created POG AND Node 276 to hold literals between NNF nodes 40 and 95
c Line #207.  Adding edge between POG nodes 109 and 276
c Line #208. Created POG AND Node 277 to hold literals between NNF nodes 39 and 40
c Line #208.  Adding edge between POG nodes 108 and 277
c Line #209.  Created POG node OR number 278 from NNF node 96
c Line #210. Created POG AND Node 279 to hold literals between NNF nodes 96 and 95
c Line #210.  Adding edge between POG nodes 278 and 279
c Line #211. Created POG AND Node 280 to hold literals between NNF nodes 96 and 42
c Line #211.  Adding edge between POG nodes 278 and 280
c Line #212. Created POG AND Node 281 to hold literals between NNF nodes 39 and 96
c Line #212.  Adding edge between POG nodes 108 and 281
c Line #213. Created POG AND Node 282 to hold literals between NNF nodes 38 and 39
c Line #213.  Adding edge between POG nodes 107 and 282
c Line #214.  Created POG node OR number 283 from NNF node 97
c Line #215. Created POG AND Node 284 to hold literals between NNF nodes 97 and 93
c Line #215.  Adding edge between POG nodes 283 and 284
c Line #216. Created POG AND Node 285 to hold literals between NNF nodes 97 and 93
c Line #216.  Adding edge between POG nodes 283 and 285
c Line #217. Created POG AND Node 286 to hold literals between NNF nodes 38 and 97
c Line #217.  Adding edge between POG nodes 107 and 286
c Line #218. Created POG AND Node 287 to hold literals between NNF nodes 37 and 38
c Line #218.  Adding edge between POG nodes 106 and 287
c Line #219.  Created POG node OR number 288 from NNF node 98
c Line #220. Created POG AND Node 289 to hold literals between NNF nodes 98 and 97
c Line #220.  Adding edge between POG nodes 288 and 289
c Line #221. Created POG AND Node 290 to hold literals between NNF nodes 98 and 40
c Line #221.  Adding edge between POG nodes 288 and 290
c Line #222. Created POG AND Node 291 to hold literals between NNF nodes 37 and 98
c Line #222.  Adding edge between POG nodes 106 and 291
c Line #223. Created POG AND Node 292 to hold literals between NNF nodes 36 and 37
c Line #223.  Adding edge between POG nodes 105 and 292
c Line #224.  Created POG node OR number 293 from NNF node 99
c Line #225. Created POG AND Node 294 to hold literals between NNF nodes 99 and 97
c Line #225.  Adding edge between POG nodes 293 and 294
c Line #226. Created POG AND Node 295 to hold literals between NNF nodes 99 and 97
c Line #226.  Adding edge between POG nodes 293 and 295
c Line #227. Created POG AND Node 296 to hold literals between NNF nodes 36 and 99
c Line #227.  Adding edge between POG nodes 105 and 296
c Line #228. Created POG AND Node 297 to hold literals between NNF nodes 35 and 36
c Line #228.  Adding edge between POG nodes 104 and 297
c Line #229.  Created POG node OR number 298 from NNF node 100
c Line #230. Created POG AND Node 299 to hold literals between NNF nodes 100 and 99
c Line #230.  Adding edge between POG nodes 298 and 299
c Line #231. Created POG AND Node 300 to hold literals between NNF nodes 100 and 38
c Line #231.  Adding edge between POG nodes 298 and 300
c Line #232. Created POG AND Node 301 to hold literals between NNF nodes 35 and 100
c Line #232.  Adding edge between POG nodes 104 and 301
c Line #233. Created POG AND Node 302 to hold literals between NNF nodes 34 and 35
c Line #233.  Adding edge between POG nodes 103 and 302
c Line #234.  Created POG node OR number 303 from NNF node 101
c Line #235. Created POG AND Node 304 to hold literals between NNF nodes 101 and 97
c Line #235.  Adding edge between POG nodes 303 and 304
c Line #236. Created POG AND Node 305 to hold literals between NNF nodes 101 and 97
c Line #236.  Adding edge between POG nodes 303 and 305
c Line #237. Created POG AND Node 306 to hold literals between NNF nodes 34 and 101
c Line #237.  Adding edge between POG nodes 103 and 306
c Line #238. Created POG AND Node 307 to hold literals between NNF nodes 33 and 34
c Line #238.  Adding edge between POG nodes 102 and 307
c Line #239.  Created POG node OR number 308 from NNF node 102
c Line #240. Created POG AND Node 309 to hold literals between NNF nodes 102 and 101
c Line #240.  Adding edge between POG nodes 308 and 309
c Line #241. Created POG AND Node 310 to hold literals between NNF nodes 102 and 36
c Line #241.  Adding edge between POG nodes 308 and 310
c Line #242. Created POG AND Node 311 to hold literals between NNF nodes 33 and 102
c Line #242.  Adding edge between POG nodes 102 and 311
c Line #243. Created POG AND Node 312 to hold literals between NNF nodes 32 and 33
c Line #243.  Adding edge between POG nodes 101 and 312
c Line #244.  Created POG node OR number 313 from NNF node 103
c Line #245. Created POG AND Node 314 to hold literals between NNF nodes 103 and 101
c Line #245.  Adding edge between POG nodes 313 and 314
c Line #246. Created POG AND Node 315 to hold literals between NNF nodes 103 and 101
c Line #246.  Adding edge between POG nodes 313 and 315
c Line #247. Created POG AND Node 316 to hold literals between NNF nodes 32 and 103
c Line #247.  Adding edge between POG nodes 101 and 316
c Line #248. Created POG AND Node 317 to hold literals between NNF nodes 31 and 32
c Line #248.  Adding edge between POG nodes 100 and 317
c Line #249.  Created POG node OR number 318 from NNF node 104
c Line #250. Created POG AND Node 319 to hold literals between NNF nodes 104 and 103
c Line #250.  Adding edge between POG nodes 318 and 319
c Line #251. Created POG AND Node 320 to hold literals between NNF nodes 104 and 34
c Line #251.  Adding edge between POG nodes 318 and 320
c Line #252. Created POG AND Node 321 to hold literals between NNF nodes 31 and 104
c Line #252.  Adding edge between POG nodes 100 and 321
c Line #253. Created POG AND Node 322 to hold literals between NNF nodes 30 and 31
c Line #253.  Adding edge between POG nodes 99 and 322
c Line #254.  Created POG node OR number 323 from NNF node 105
c Line #255. Created POG AND Node 324 to hold literals between NNF nodes 105 and 101
c Line #255.  Adding edge between POG nodes 323 and 324
c Line #256. Created POG AND Node 325 to hold literals between NNF nodes 105 and 101
c Line #256.  Adding edge between POG nodes 323 and 325
c Line #257. Created POG AND Node 326 to hold literals between NNF nodes 30 and 105
c Line #257.  Adding edge between POG nodes 99 and 326
c Line #258. Created POG AND Node 327 to hold literals between NNF nodes 29 and 30
c Line #258.  Adding edge between POG nodes 98 and 327
c Line #259.  Created POG node OR number 328 from NNF node 106
c Line #260. Created POG AND Node 329 to hold literals between NNF nodes 106 and 105
c Line #260.  Adding edge between POG nodes 328 and 329
c Line #261. Created POG AND Node 330 to hold literals between NNF nodes 106 and 32
c Line #261.  Adding edge between POG nodes 328 and 330
c Line #262. Created POG AND Node 331 to hold literals between NNF nodes 29 and 106
c Line #262.  Adding edge between POG nodes 98 and 331
c Line #263. Created POG AND Node 332 to hold literals between NNF nodes 28 and 29
c Line #263.  Adding edge between POG nodes 97 and 332
c Line #264.  Created POG node OR number 333 from NNF node 107
c Line #265. Created POG AND Node 334 to hold literals between NNF nodes 107 and 105
c Line #265.  Adding edge between POG nodes 333 and 334
c Line #266. Created POG AND Node 335 to hold literals between NNF nodes 107 and 105
c Line #266.  Adding edge between POG nodes 333 and 335
c Line #267. Created POG AND Node 336 to hold literals between NNF nodes 28 and 107
c Line #267.  Adding edge between POG nodes 97 and 336
c Line #268. Created POG AND Node 337 to hold literals between NNF nodes 27 and 28
c Line #268.  Adding edge between POG nodes 96 and 337
c Line #269.  Created POG node OR number 338 from NNF node 108
c Line #270. Created POG AND Node 339 to hold literals between NNF nodes 108 and 107
c Line #270.  Adding edge between POG nodes 338 and 339
c Line #271. Created POG AND Node 340 to hold literals between NNF nodes 108 and 30
c Line #271.  Adding edge between POG nodes 338 and 340
c Line #272. Created POG AND Node 341 to hold literals between NNF nodes 27 and 108
c Line #272.  Adding edge between POG nodes 96 and 341
c Line #273. Created POG AND Node 342 to hold literals between NNF nodes 26 and 27
c Line #273.  Adding edge between POG nodes 95 and 342
c Line #274.  Created POG node OR number 343 from NNF node 109
c Line #275. Created POG AND Node 344 to hold literals between NNF nodes 109 and 105
c Line #275.  Adding edge between POG nodes 343 and 344
c Line #276. Created POG AND Node 345 to hold literals between NNF nodes 109 and 105
c Line #276.  Adding edge between POG nodes 343 and 345
c Line #277. Created POG AND Node 346 to hold literals between NNF nodes 26 and 109
c Line #277.  Adding edge between POG nodes 95 and 346
c Line #278. Created POG AND Node 347 to hold literals between NNF nodes 25 and 26
c Line #278.  Adding edge between POG nodes 94 and 347
c Line #279.  Created POG node OR number 348 from NNF node 110
c Line #280. Created POG AND Node 349 to hold literals between NNF nodes 110 and 109
c Line #280.  Adding edge between POG nodes 348 and 349
c Line #281. Created POG AND Node 350 to hold literals between NNF nodes 110 and 28
c Line #281.  Adding edge between POG nodes 348 and 350
c Line #282. Created POG AND Node 351 to hold literals between NNF nodes 25 and 110
c Line #282.  Adding edge between POG nodes 94 and 351
c Line #283. Created POG AND Node 352 to hold literals between NNF nodes 24 and 25
c Line #283.  Adding edge between POG nodes 93 and 352
c Line #284.  Created POG node OR number 353 from NNF node 111
c Line #285. Created POG AND Node 354 to hold literals between NNF nodes 111 and 109
c Line #285.  Adding edge between POG nodes 353 and 354
c Line #286. Created POG AND Node 355 to hold literals between NNF nodes 111 and 109
c Line #286.  Adding edge between POG nodes 353 and 355
c Line #287. Created POG AND Node 356 to hold literals between NNF nodes 24 and 111
c Line #287.  Adding edge between POG nodes 93 and 356
c Line #288. Created POG AND Node 357 to hold literals between NNF nodes 23 and 24
c Line #288.  Adding edge between POG nodes 92 and 357
c Line #289.  Created POG node OR number 358 from NNF node 112
c Line #290. Created POG AND Node 359 to hold literals between NNF nodes 112 and 111
c Line #290.  Adding edge between POG nodes 358 and 359
c Line #291. Created POG AND Node 360 to hold literals between NNF nodes 112 and 26
c Line #291.  Adding edge between POG nodes 358 and 360
c Line #292. Created POG AND Node 361 to hold literals between NNF nodes 23 and 112
c Line #292.  Adding edge between POG nodes 92 and 361
c Line #293. Created POG AND Node 362 to hold literals between NNF nodes 22 and 23
c Line #293.  Adding edge between POG nodes 91 and 362
c Line #294.  Created POG node OR number 363 from NNF node 113
c Line #295. Created POG AND Node 364 to hold literals between NNF nodes 113 and 109
c Line #295.  Adding edge between POG nodes 363 and 364
c Line #296. Created POG AND Node 365 to hold literals between NNF nodes 113 and 109
c Line #296.  Adding edge between POG nodes 363 and 365
c Line #297. Created POG AND Node 366 to hold literals between NNF nodes 22 and 113
c Line #297.  Adding edge between POG nodes 91 and 366
c Line #298. Created POG AND Node 367 to hold literals between NNF nodes 21 and 22
c Line #298.  Adding edge between POG nodes 90 and 367
c Line #299.  Created POG node OR number 368 from NNF node 114
c Line #300. Created POG AND Node 369 to hold literals between NNF nodes 114 and 113
c Line #300.  Adding edge between POG nodes 368 and 369
c Line #301. Created POG AND Node 370 to hold literals between NNF nodes 114 and 24
c Line #301.  Adding edge between POG nodes 368 and 370
c Line #302. Created POG AND Node 371 to hold literals between NNF nodes 21 and 114
c Line #302.  Adding edge between POG nodes 90 and 371
c Line #303. Created POG AND Node 372 to hold literals between NNF nodes 20 and 21
c Line #303.  Adding edge between POG nodes 89 and 372
c Line #304.  Created POG node OR number 373 from NNF node 115
c Line #305. Created POG AND Node 374 to hold literals between NNF nodes 115 and 113
c Line #305.  Adding edge between POG nodes 373 and 374
c Line #306. Created POG AND Node 375 to hold literals between NNF nodes 115 and 113
c Line #306.  Adding edge between POG nodes 373 and 375
c Line #307. Created POG AND Node 376 to hold literals between NNF nodes 20 and 115
c Line #307.  Adding edge between POG nodes 89 and 376
c Line #308. Created POG AND Node 377 to hold literals between NNF nodes 19 and 20
c Line #308.  Adding edge between POG nodes 88 and 377
c Line #309.  Created POG node OR number 378 from NNF node 116
c Line #310. Created POG AND Node 379 to hold literals between NNF nodes 116 and 115
c Line #310.  Adding edge between POG nodes 378 and 379
c Line #311. Created POG AND Node 380 to hold literals between NNF nodes 116 and 22
c Line #311.  Adding edge between POG nodes 378 and 380
c Line #312. Created POG AND Node 381 to hold literals between NNF nodes 19 and 116
c Line #312.  Adding edge between POG nodes 88 and 381
c Line #313. Created POG AND Node 382 to hold literals between NNF nodes 18 and 19
c Line #313.  Adding edge between POG nodes 87 and 382
c Line #314.  Created POG node OR number 383 from NNF node 117
c Line #315. Created POG AND Node 384 to hold literals between NNF nodes 117 and 113
c Line #315.  Adding edge between POG nodes 383 and 384
c Line #316. Created POG AND Node 385 to hold literals between NNF nodes 117 and 113
c Line #316.  Adding edge between POG nodes 383 and 385
c Line #317. Created POG AND Node 386 to hold literals between NNF nodes 18 and 117
c Line #317.  Adding edge between POG nodes 87 and 386
c Line #318. Created POG AND Node 387 to hold literals between NNF nodes 17 and 18
c Line #318.  Adding edge between POG nodes 86 and 387
c Line #319.  Created POG node OR number 388 from NNF node 118
c Line #320. Created POG AND Node 389 to hold literals between NNF nodes 118 and 117
c Line #320.  Adding edge between POG nodes 388 and 389
c Line #321. Created POG AND Node 390 to hold literals between NNF nodes 118 and 20
c Line #321.  Adding edge between POG nodes 388 and 390
c Line #322. Created POG AND Node 391 to hold literals between NNF nodes 17 and 118
c Line #322.  Adding edge between POG nodes 86 and 391
c Line #323. Created POG AND Node 392 to hold literals between NNF nodes 16 and 17
c Line #323.  Adding edge between POG nodes 85 and 392
c Line #324.  Created POG node OR number 393 from NNF node 119
c Line #325. Created POG AND Node 394 to hold literals between NNF nodes 119 and 117
c Line #325.  Adding edge between POG nodes 393 and 394
c Line #326. Created POG AND Node 395 to hold literals between NNF nodes 119 and 117
c Line #326.  Adding edge between POG nodes 393 and 395
c Line #327. Created POG AND Node 396 to hold literals between NNF nodes 16 and 119
c Line #327.  Adding edge between POG nodes 85 and 396
c Line #328. Created POG AND Node 397 to hold literals between NNF nodes 15 and 16
c Line #328.  Adding edge between POG nodes 84 and 397
c Line #329.  Created POG node OR number 398 from NNF node 120
c Line #330. Created POG AND Node 399 to hold literals between NNF nodes 120 and 119
c Line #330.  Adding edge between POG nodes 398 and 399
c Line #331. Created POG AND Node 400 to hold literals between NNF nodes 120 and 18
c Line #331.  Adding edge between POG nodes 398 and 400
c Line #332. Created POG AND Node 401 to hold literals between NNF nodes 15 and 120
c Line #332.  Adding edge between POG nodes 84 and 401
c Line #333. Created POG AND Node 402 to hold literals between NNF nodes 14 and 15
c Line #333.  Adding edge between POG nodes 83 and 402
c Line #334.  Created POG node OR number 403 from NNF node 121
c Line #335. Created POG AND Node 404 to hold literals between NNF nodes 121 and 117
c Line #335.  Adding edge between POG nodes 403 and 404
c Line #336. Created POG AND Node 405 to hold literals between NNF nodes 121 and 117
c Line #336.  Adding edge between POG nodes 403 and 405
c Line #337. Created POG AND Node 406 to hold literals between NNF nodes 14 and 121
c Line #337.  Adding edge between POG nodes 83 and 406
c Line #338. Created POG AND Node 407 to hold literals between NNF nodes 13 and 14
c Line #338.  Adding edge between POG nodes 82 and 407
c Line #339.  Created POG node OR number 408 from NNF node 122
c Line #340. Created POG AND Node 409 to hold literals between NNF nodes 122 and 121
c Line #340.  Adding edge between POG nodes 408 and 409
c Line #341. Created POG AND Node 410 to hold literals between NNF nodes 122 and 16
c Line #341.  Adding edge between POG nodes 408 and 410
c Line #342. Created POG AND Node 411 to hold literals between NNF nodes 13 and 122
c Line #342.  Adding edge between POG nodes 82 and 411
c Line #343. Created POG AND Node 412 to hold literals between NNF nodes 12 and 13
c Line #343.  Adding edge between POG nodes 81 and 412
c Line #344.  Created POG node OR number 413 from NNF node 123
c Line #345. Created POG AND Node 414 to hold literals between NNF nodes 123 and 121
c Line #345.  Adding edge between POG nodes 413 and 414
c Line #346. Created POG AND Node 415 to hold literals between NNF nodes 123 and 121
c Line #346.  Adding edge between POG nodes 413 and 415
c Line #347. Created POG AND Node 416 to hold literals between NNF nodes 12 and 123
c Line #347.  Adding edge between POG nodes 81 and 416
c Line #348. Created POG AND Node 417 to hold literals between NNF nodes 11 and 12
c Line #348.  Adding edge between POG nodes 80 and 417
c Line #349. Created POG AND Node 418 to hold literals between NNF nodes 11 and 1
c Line #349.  Adding edge between POG nodes 80 and 418
c Line #350. Created POG AND Node 419 to hold literals between NNF nodes 10 and 11
c Line #350.  Adding edge between POG nodes 79 and 419
c Line #351.  Created POG node OR number 420 from NNF node 124
c Line #352. Created POG AND Node 421 to hold literals between NNF nodes 124 and 121
c Line #352.  Adding edge between POG nodes 420 and 421
c Line #353. Created POG AND Node 422 to hold literals between NNF nodes 124 and 121
c Line #353.  Adding edge between POG nodes 420 and 422
c Line #354. Created POG AND Node 423 to hold literals between NNF nodes 10 and 124
c Line #354.  Adding edge between POG nodes 79 and 423
c Line #355. Created POG AND Node 424 to hold literals between NNF nodes 9 and 10
c Line #355.  Adding edge between POG nodes 78 and 424
c Line #356. Created POG AND Node 425 to hold literals between NNF nodes 9 and 1
c Line #356.  Adding edge between POG nodes 78 and 425
c Line #357. Created POG AND Node 426 to hold literals between NNF nodes 8 and 9
c Line #357.  Adding edge between POG nodes 77 and 426
c Line #358.  Created POG node OR number 427 from NNF node 125
c Line #359. Created POG AND Node 428 to hold literals between NNF nodes 125 and 124
c Line #359.  Adding edge between POG nodes 427 and 428
c Line #360. Created POG AND Node 429 to hold literals between NNF nodes 125 and 124
c Line #360.  Adding edge between POG nodes 427 and 429
c Line #361. Created POG AND Node 430 to hold literals between NNF nodes 8 and 125
c Line #361.  Adding edge between POG nodes 77 and 430
c Line #362. Created POG AND Node 431 to hold literals between NNF nodes 7 and 8
c Line #362.  Adding edge between POG nodes 76 and 431
c Line #363. Created POG AND Node 432 to hold literals between NNF nodes 7 and 1
c Line #363.  Adding edge between POG nodes 76 and 432
c Line #364. Created POG AND Node 433 to hold literals between NNF nodes 6 and 7
c Line #364.  Adding edge between POG nodes 75 and 433
c Line #365.  Created POG node OR number 434 from NNF node 126
c Line #366. Created POG AND Node 435 to hold literals between NNF nodes 126 and 124
c Line #366.  Adding edge between POG nodes 434 and 435
c Line #367. Created POG AND Node 436 to hold literals between NNF nodes 126 and 124
c Line #367.  Adding edge between POG nodes 434 and 436
c Line #368. Created POG AND Node 437 to hold literals between NNF nodes 6 and 126
c Line #368.  Adding edge between POG nodes 75 and 437
c Line #369. Created POG AND Node 438 to hold literals between NNF nodes 5 and 6
c Line #369.  Adding edge between POG nodes 74 and 438
c Line #370. Created POG AND Node 439 to hold literals between NNF nodes 5 and 1
c Line #370.  Adding edge between POG nodes 74 and 439
c Line #371. Created POG AND Node 440 to hold literals between NNF nodes 4 and 5
c Line #371.  Adding edge between POG nodes 73 and 440
c Line #372.  Created POG node OR number 441 from NNF node 127
c Line #373.  Created POG node OR number 442 from NNF node 128
c Line #374.  Created POG node OR number 443 from NNF node 129
c Line #375.  Created POG node OR number 444 from NNF node 130
c Line #376.  Created POG node OR number 445 from NNF node 131
c Line #377.  Created POG node OR number 446 from NNF node 132
c Line #378.  Created POG node OR number 447 from NNF node 133
c Line #379.  Created POG node OR number 448 from NNF node 134
c Line #380.  Created POG node OR number 449 from NNF node 135
c Line #381.  Created POG node OR number 450 from NNF node 136
c Line #382.  Created POG node OR number 451 from NNF node 137
c Line #383.  Created POG node OR number 452 from NNF node 138
c Line #384.  Created POG node OR number 453 from NNF node 139
c Line #385.  Created POG node OR number 454 from NNF node 140
c Line #386.  Created POG node OR number 455 from NNF node 141
c Line #387.  Created POG node OR number 456 from NNF node 142
c Line #388.  Created POG node OR number 457 from NNF node 143
c Line #389.  Created POG node OR number 458 from NNF node 144
c Line #390.  Created POG node OR number 459 from NNF node 145
c Line #391.  Created POG node OR number 460 from NNF node 146
c Line #392.  Created POG node OR number 461 from NNF node 147
c Line #393.  Created POG node OR number 462 from NNF node 148
c Line #394.  Created POG node OR number 463 from NNF node 149
c Line #395.  Created POG node OR number 464 from NNF node 150
c Line #396.  Created POG node OR number 465 from NNF node 151
c Line #397.  Created POG node OR number 466 from NNF node 152
c Line #398.  Created POG node OR number 467 from NNF node 153
c Line #399.  Created POG node OR number 468 from NNF node 154
c Line #400.  Created POG node OR number 469 from NNF node 155
c Line #401.  Created POG node OR number 470 from NNF node 156
c Line #402.  Created POG node OR number 471 from NNF node 157
c Line #403.  Created POG node OR number 472 from NNF node 158
c Line #404.  Created POG node OR number 473 from NNF node 159
c Line #405. Created POG AND Node 474 to hold literals between NNF nodes 159 and 1
c Line #405.  Adding edge between POG nodes 473 and 474
c Line #406. Created POG AND Node 475 to hold literals between NNF nodes 159 and 2
c Line #406.  Adding edge between POG nodes 473 and 475
c Line #407. Created POG AND Node 476 to hold literals between NNF nodes 158 and 159
c Line #407.  Adding edge between POG nodes 472 and 476
c Line #408. Created POG AND Node 477 to hold literals between NNF nodes 158 and 2
c Line #408.  Adding edge between POG nodes 472 and 477
c Line #409. Created POG AND Node 478 to hold literals between NNF nodes 157 and 158
c Line #409.  Adding edge between POG nodes 471 and 478
c Line #410. Created POG AND Node 479 to hold literals between NNF nodes 157 and 69
c Line #410.  Adding edge between POG nodes 471 and 479
c Line #411. Created POG AND Node 480 to hold literals between NNF nodes 156 and 157
c Line #411.  Adding edge between POG nodes 470 and 480
c Line #412. Created POG AND Node 481 to hold literals between NNF nodes 156 and 71
c Line #412.  Adding edge between POG nodes 470 and 481
c Line #413. Created POG AND Node 482 to hold literals between NNF nodes 155 and 156
c Line #413.  Adding edge between POG nodes 469 and 482
c Line #414. Created POG AND Node 483 to hold literals between NNF nodes 155 and 73
c Line #414.  Adding edge between POG nodes 469 and 483
c Line #415. Created POG AND Node 484 to hold literals between NNF nodes 154 and 155
c Line #415.  Adding edge between POG nodes 468 and 484
c Line #416. Created POG AND Node 485 to hold literals between NNF nodes 154 and 75
c Line #416.  Adding edge between POG nodes 468 and 485
c Line #417. Created POG AND Node 486 to hold literals between NNF nodes 153 and 154
c Line #417.  Adding edge between POG nodes 467 and 486
c Line #418. Created POG AND Node 487 to hold literals between NNF nodes 153 and 77
c Line #418.  Adding edge between POG nodes 467 and 487
c Line #419. Created POG AND Node 488 to hold literals between NNF nodes 152 and 153
c Line #419.  Adding edge between POG nodes 466 and 488
c Line #420. Created POG AND Node 489 to hold literals between NNF nodes 152 and 79
c Line #420.  Adding edge between POG nodes 466 and 489
c Line #421. Created POG AND Node 490 to hold literals between NNF nodes 151 and 152
c Line #421.  Adding edge between POG nodes 465 and 490
c Line #422. Created POG AND Node 491 to hold literals between NNF nodes 151 and 81
c Line #422.  Adding edge between POG nodes 465 and 491
c Line #423. Created POG AND Node 492 to hold literals between NNF nodes 150 and 151
c Line #423.  Adding edge between POG nodes 464 and 492
c Line #424. Created POG AND Node 493 to hold literals between NNF nodes 150 and 83
c Line #424.  Adding edge between POG nodes 464 and 493
c Line #425. Created POG AND Node 494 to hold literals between NNF nodes 149 and 150
c Line #425.  Adding edge between POG nodes 463 and 494
c Line #426. Created POG AND Node 495 to hold literals between NNF nodes 149 and 85
c Line #426.  Adding edge between POG nodes 463 and 495
c Line #427. Created POG AND Node 496 to hold literals between NNF nodes 148 and 149
c Line #427.  Adding edge between POG nodes 462 and 496
c Line #428. Created POG AND Node 497 to hold literals between NNF nodes 148 and 87
c Line #428.  Adding edge between POG nodes 462 and 497
c Line #429. Created POG AND Node 498 to hold literals between NNF nodes 147 and 148
c Line #429.  Adding edge between POG nodes 461 and 498
c Line #430. Created POG AND Node 499 to hold literals between NNF nodes 147 and 89
c Line #430.  Adding edge between POG nodes 461 and 499
c Line #431. Created POG AND Node 500 to hold literals between NNF nodes 146 and 147
c Line #431.  Adding edge between POG nodes 460 and 500
c Line #432. Created POG AND Node 501 to hold literals between NNF nodes 146 and 91
c Line #432.  Adding edge between POG nodes 460 and 501
c Line #433. Created POG AND Node 502 to hold literals between NNF nodes 145 and 146
c Line #433.  Adding edge between POG nodes 459 and 502
c Line #434. Created POG AND Node 503 to hold literals between NNF nodes 145 and 93
c Line #434.  Adding edge between POG nodes 459 and 503
c Line #435. Created POG AND Node 504 to hold literals between NNF nodes 144 and 145
c Line #435.  Adding edge between POG nodes 458 and 504
c Line #436. Created POG AND Node 505 to hold literals between NNF nodes 144 and 95
c Line #436.  Adding edge between POG nodes 458 and 505
c Line #437. Created POG AND Node 506 to hold literals between NNF nodes 143 and 144
c Line #437.  Adding edge between POG nodes 457 and 506
c Line #438. Created POG AND Node 507 to hold literals between NNF nodes 143 and 97
c Line #438.  Adding edge between POG nodes 457 and 507
c Line #439. Created POG AND Node 508 to hold literals between NNF nodes 142 and 143
c Line #439.  Adding edge between POG nodes 456 and 508
c Line #440. Created POG AND Node 509 to hold literals between NNF nodes 142 and 99
c Line #440.  Adding edge between POG nodes 456 and 509
c Line #441. Created POG AND Node 510 to hold literals between NNF nodes 141 and 142
c Line #441.  Adding edge between POG nodes 455 and 510
c Line #442. Created POG AND Node 511 to hold literals between NNF nodes 141 and 101
c Line #442.  Adding edge between POG nodes 455 and 511
c Line #443. Created POG AND Node 512 to hold literals between NNF nodes 140 and 141
c Line #443.  Adding edge between POG nodes 454 and 512
c Line #444. Created POG AND Node 513 to hold literals between NNF nodes 140 and 103
c Line #444.  Adding edge between POG nodes 454 and 513
c Line #445. Created POG AND Node 514 to hold literals between NNF nodes 139 and 140
c Line #445.  Adding edge between POG nodes 453 and 514
c Line #446. Created POG AND Node 515 to hold literals between NNF nodes 139 and 105
c Line #446.  Adding edge between POG nodes 453 and 515
c Line #447. Created POG AND Node 516 to hold literals between NNF nodes 138 and 139
c Line #447.  Adding edge between POG nodes 452 and 516
c Line #448. Created POG AND Node 517 to hold literals between NNF nodes 138 and 107
c Line #448.  Adding edge between POG nodes 452 and 517
c Line #449. Created POG AND Node 518 to hold literals between NNF nodes 137 and 138
c Line #449.  Adding edge between POG nodes 451 and 518
c Line #450. Created POG AND Node 519 to hold literals between NNF nodes 137 and 109
c Line #450.  Adding edge between POG nodes 451 and 519
c Line #451. Created POG AND Node 520 to hold literals between NNF nodes 136 and 137
c Line #451.  Adding edge between POG nodes 450 and 520
c Line #452. Created POG AND Node 521 to hold literals between NNF nodes 136 and 111
c Line #452.  Adding edge between POG nodes 450 and 521
c Line #453. Created POG AND Node 522 to hold literals between NNF nodes 135 and 136
c Line #453.  Adding edge between POG nodes 449 and 522
c Line #454. Created POG AND Node 523 to hold literals between NNF nodes 135 and 113
c Line #454.  Adding edge between POG nodes 449 and 523
c Line #455. Created POG AND Node 524 to hold literals between NNF nodes 134 and 135
c Line #455.  Adding edge between POG nodes 448 and 524
c Line #456. Created POG AND Node 525 to hold literals between NNF nodes 134 and 115
c Line #456.  Adding edge between POG nodes 448 and 525
c Line #457. Created POG AND Node 526 to hold literals between NNF nodes 133 and 134
c Line #457.  Adding edge between POG nodes 447 and 526
c Line #458. Created POG AND Node 527 to hold literals between NNF nodes 133 and 117
c Line #458.  Adding edge between POG nodes 447 and 527
c Line #459. Created POG AND Node 528 to hold literals between NNF nodes 132 and 133
c Line #459.  Adding edge between POG nodes 446 and 528
c Line #460. Created POG AND Node 529 to hold literals between NNF nodes 132 and 119
c Line #460.  Adding edge between POG nodes 446 and 529
c Line #461. Created POG AND Node 530 to hold literals between NNF nodes 131 and 132
c Line #461.  Adding edge between POG nodes 445 and 530
c Line #462. Created POG AND Node 531 to hold literals between NNF nodes 131 and 121
c Line #462.  Adding edge between POG nodes 445 and 531
c Line #463. Created POG AND Node 532 to hold literals between NNF nodes 130 and 131
c Line #463.  Adding edge between POG nodes 444 and 532
c Line #464. Created POG AND Node 533 to hold literals between NNF nodes 130 and 123
c Line #464.  Adding edge between POG nodes 444 and 533
c Line #465. Created POG AND Node 534 to hold literals between NNF nodes 129 and 130
c Line #465.  Adding edge between POG nodes 443 and 534
c Line #466. Created POG AND Node 535 to hold literals between NNF nodes 129 and 124
c Line #466.  Adding edge between POG nodes 443 and 535
c Line #467. Created POG AND Node 536 to hold literals between NNF nodes 128 and 129
c Line #467.  Adding edge between POG nodes 442 and 536
c Line #468. Created POG AND Node 537 to hold literals between NNF nodes 128 and 125
c Line #468.  Adding edge between POG nodes 442 and 537
c Line #469. Created POG AND Node 538 to hold literals between NNF nodes 127 and 128
c Line #469.  Adding edge between POG nodes 441 and 538
c Line #470. Created POG AND Node 539 to hold literals between NNF nodes 127 and 126
c Line #470.  Adding edge between POG nodes 441 and 539
c Line #471. Created POG AND Node 540 to hold literals between NNF nodes 4 and 127
c Line #471.  Adding edge between POG nodes 73 and 540
c Line #472. Created POG AND Node 541 to hold literals between NNF nodes 3 and 4
c Line #472.  Adding edge between POG nodes 72 and 541
c Setting root literal to 72
c Read D4 NNF file with 472 nodes (159 explicit) and 313 edges
c Before optimization:
N70_FALSE()
N71_TRUE()
N72_OR(541)
N73_OR(440,540)
N74_OR(438,439)
N75_OR(433,437)
N76_OR(431,432)
N77_OR(426,430)
N78_OR(424,425)
N79_OR(419,423)
N80_OR(417,418)
N81_OR(412,416)
N82_OR(407,411)
N83_OR(402,406)
N84_OR(397,401)
N85_OR(392,396)
N86_OR(387,391)
N87_OR(382,386)
N88_OR(377,381)
N89_OR(372,376)
N90_OR(367,371)
N91_OR(362,366)
N92_OR(357,361)
N93_OR(352,356)
N94_OR(347,351)
N95_OR(342,346)
N96_OR(337,341)
N97_OR(332,336)
N98_OR(327,331)
N99_OR(322,326)
N100_OR(317,321)
N101_OR(312,316)
N102_OR(307,311)
N103_OR(302,306)
N104_OR(297,301)
N105_OR(292,296)
N106_OR(287,291)
N107_OR(282,286)
N108_OR(277,281)
N109_OR(272,276)
N110_OR(267,271)
N111_OR(262,266)
N112_OR(257,261)
N113_OR(252,256)
N114_OR(247,251)
N115_OR(242,246)
N116_OR(237,241)
N117_OR(232,236)
N118_OR(227,231)
N119_OR(222,226)
N120_OR(217,221)
N121_OR(212,216)
N122_OR(207,211)
N123_OR(202,206)
N124_OR(197,201)
N125_OR(192,196)
N126_OR(187,191)
N127_OR(182,186)
N128_OR(177,181)
N129_OR(172,176)
N130_OR(167,171)
N131_OR(162,166)
N132_OR(157,161)
N133_OR(152,156)
N134_OR(147,151)
N135_OR(142,146)
N136_OR(140,141)
N137_OR(138,139)
N138_AND(-37,-36,71)
N139_AND(37,71)
N140_AND(-3,137)
N141_AND(3,-37,71)
N142_AND(-38,136)
N143_OR(144,145)
N144_AND(-37,71)
N145_AND(37,71)
N146_AND(38,3,143)
N147_AND(-4,135)
N148_OR(149,150)
N149_AND(-38,3,143)
N150_AND(38,-3,137)
N151_AND(4,148)
N152_AND(-39,134)
N153_OR(154,155)
N154_AND(-38,3,143)
N155_AND(38,3,143)
N156_AND(39,4,153)
N157_AND(-5,133)
N158_OR(159,160)
N159_AND(-39,4,153)
N160_AND(39,-4,135)
N161_AND(5,158)
N162_AND(-40,132)
N163_OR(164,165)
N164_AND(-39,3,143)
N165_AND(39,3,143)
N166_AND(40,5,4,163)
N167_AND(-6,131)
N168_OR(169,170)
N169_AND(-40,5,4,163)
N170_AND(40,-5,133)
N171_AND(6,168)
N172_AND(-41,130)
N173_OR(174,175)
N174_AND(-40,5,4,163)
N175_AND(40,5,4,163)
N176_AND(41,6,173)
N177_AND(-7,129)
N178_OR(179,180)
N179_AND(-41,6,173)
N180_AND(41,-6,131)
N181_AND(7,178)
N182_AND(-42,128)
N183_OR(184,185)
N184_AND(-41,5,4,163)
N185_AND(41,5,4,163)
N186_AND(42,7,6,183)
N187_AND(-8,127)
N188_OR(189,190)
N189_AND(-42,7,6,183)
N190_AND(42,-7,129)
N191_AND(8,188)
N192_AND(-43,126)
N193_OR(194,195)
N194_AND(-42,7,6,183)
N195_AND(42,7,6,183)
N196_AND(43,8,193)
N197_AND(-9,125)
N198_OR(199,200)
N199_AND(-43,8,193)
N200_AND(43,-8,127)
N201_AND(9,198)
N202_AND(-44,124)
N203_OR(204,205)
N204_AND(-43,7,6,183)
N205_AND(43,7,6,183)
N206_AND(44,9,8,203)
N207_AND(-10,123)
N208_OR(209,210)
N209_AND(-44,9,8,203)
N210_AND(44,-9,125)
N211_AND(10,208)
N212_AND(-45,122)
N213_OR(214,215)
N214_AND(-44,9,8,203)
N215_AND(44,9,8,203)
N216_AND(45,10,213)
N217_AND(-11,121)
N218_OR(219,220)
N219_AND(-45,10,213)
N220_AND(45,-10,123)
N221_AND(11,218)
N222_AND(-46,120)
N223_OR(224,225)
N224_AND(-45,9,8,203)
N225_AND(45,9,8,203)
N226_AND(46,11,10,223)
N227_AND(-12,119)
N228_OR(229,230)
N229_AND(-46,11,10,223)
N230_AND(46,-11,121)
N231_AND(12,228)
N232_AND(-47,118)
N233_OR(234,235)
N234_AND(-46,11,10,223)
N235_AND(46,11,10,223)
N236_AND(47,12,233)
N237_AND(-13,117)
N238_OR(239,240)
N239_AND(-47,12,233)
N240_AND(47,-12,119)
N241_AND(13,238)
N242_AND(-48,116)
N243_OR(244,245)
N244_AND(-47,11,10,223)
N245_AND(47,11,10,223)
N246_AND(48,13,12,243)
N247_AND(-14,115)
N248_OR(249,250)
N249_AND(-48,13,12,243)
N250_AND(48,-13,117)
N251_AND(14,248)
N252_AND(-49,114)
N253_OR(254,255)
N254_AND(-48,13,12,243)
N255_AND(48,13,12,243)
N256_AND(49,14,253)
N257_AND(-15,113)
N258_OR(259,260)
N259_AND(-49,14,253)
N260_AND(49,-14,115)
N261_AND(15,258)
N262_AND(-50,112)
N263_OR(264,265)
N264_AND(-49,13,12,243)
N265_AND(49,13,12,243)
N266_AND(50,15,14,263)
N267_AND(-16,111)
N268_OR(269,270)
N269_AND(-50,15,14,263)
N270_AND(50,-15,113)
N271_AND(16,268)
N272_AND(-51,110)
N273_OR(274,275)
N274_AND(-50,15,14,263)
N275_AND(50,15,14,263)
N276_AND(51,16,273)
N277_AND(-17,109)
N278_OR(279,280)
N279_AND(-51,16,273)
N280_AND(51,-16,111)
N281_AND(17,278)
N282_AND(-52,108)
N283_OR(284,285)
N284_AND(-51,15,14,263)
N285_AND(51,15,14,263)
N286_AND(52,17,16,283)
N287_AND(-18,107)
N288_OR(289,290)
N289_AND(-52,17,16,283)
N290_AND(52,-17,109)
N291_AND(18,288)
N292_AND(-53,106)
N293_OR(294,295)
N294_AND(-52,17,16,283)
N295_AND(52,17,16,283)
N296_AND(53,18,293)
N297_AND(-19,105)
N298_OR(299,300)
N299_AND(-53,18,293)
N300_AND(53,-18,107)
N301_AND(19,298)
N302_AND(-54,104)
N303_OR(304,305)
N304_AND(-53,17,16,283)
N305_AND(53,17,16,283)
N306_AND(54,19,18,303)
N307_AND(-20,103)
N308_OR(309,310)
N309_AND(-54,19,18,303)
N310_AND(54,-19,105)
N311_AND(20,308)
N312_AND(-55,102)
N313_OR(314,315)
N314_AND(-54,19,18,303)
N315_AND(54,19,18,303)
N316_AND(55,20,313)
N317_AND(-21,101)
N318_OR(319,320)
N319_AND(-55,20,313)
N320_AND(55,-20,103)
N321_AND(21,318)
N322_AND(-56,100)
N323_OR(324,325)
N324_AND(-55,19,18,303)
N325_AND(55,19,18,303)
N326_AND(56,21,20,323)
N327_AND(-22,99)
N328_OR(329,330)
N329_AND(-56,21,20,323)
N330_AND(56,-21,101)
N331_AND(22,328)
N332_AND(-57,98)
N333_OR(334,335)
N334_AND(-56,21,20,323)
N335_AND(56,21,20,323)
N336_AND(57,22,333)
N337_AND(-23,97)
N338_OR(339,340)
N339_AND(-57,22,333)
N340_AND(57,-22,99)
N341_AND(23,338)
N342_AND(-58,96)
N343_OR(344,345)
N344_AND(-57,21,20,323)
N345_AND(57,21,20,323)
N346_AND(58,23,22,343)
N347_AND(-24,95)
N348_OR(349,350)
N349_AND(-58,23,22,343)
N350_AND(58,-23,97)
N351_AND(24,348)
N352_AND(-59,94)
N353_OR(354,355)
N354_AND(-58,23,22,343)
N355_AND(58,23,22,343)
N356_AND(59,24,353)
N357_AND(-25,93)
N358_OR(359,360)
N359_AND(-59,24,353)
N360_AND(59,-24,95)
N361_AND(25,358)
N362_AND(-60,92)
N363_OR(364,365)
N364_AND(-59,23,22,343)
N365_AND(59,23,22,343)
N366_AND(60,25,24,363)
N367_AND(-26,91)
N368_OR(369,370)
N369_AND(-60,25,24,363)
N370_AND(60,-25,93)
N371_AND(26,368)
N372_AND(-61,90)
N373_OR(374,375)
N374_AND(-60,25,24,363)
N375_AND(60,25,24,363)
N376_AND(61,26,373)
N377_AND(-27,89)
N378_OR(379,380)
N379_AND(-61,26,373)
N380_AND(61,-26,91)
N381_AND(27,378)
N382_AND(-62,88)
N383_OR(384,385)
N384_AND(-61,25,24,363)
N385_AND(61,25,24,363)
N386_AND(62,27,26,383)
N387_AND(-28,87)
N388_OR(389,390)
N389_AND(-62,27,26,383)
N390_AND(62,-27,89)
N391_AND(28,388)
N392_AND(-63,86)
N393_OR(394,395)
N394_AND(-62,27,26,383)
N395_AND(62,27,26,383)
N396_AND(63,28,393)
N397_AND(-29,85)
N398_OR(399,400)
N399_AND(-63,28,393)
N400_AND(63,-28,87)
N401_AND(29,398)
N402_AND(-64,84)
N403_OR(404,405)
N404_AND(-63,27,26,383)
N405_AND(63,27,26,383)
N406_AND(64,29,28,403)
N407_AND(-30,83)
N408_OR(409,410)
N409_AND(-64,29,28,403)
N410_AND(64,-29,85)
N411_AND(30,408)
N412_AND(-65,82)
N413_OR(414,415)
N414_AND(-64,29,28,403)
N415_AND(64,29,28,403)
N416_AND(65,30,413)
N417_AND(-31,81)
N418_AND(31,70)
N419_AND(-66,80)
N420_OR(421,422)
N421_AND(-65,29,28,403)
N422_AND(65,29,28,403)
N423_AND(66,31,30,420)
N424_AND(-32,79)
N425_AND(32,70)
N426_AND(-67,78)
N427_OR(428,429)
N428_AND(-66,31,30,420)
N429_AND(66,31,30,420)
N430_AND(67,32,427)
N431_AND(-33,77)
N432_AND(33,70)
N433_AND(-68,76)
N434_OR(435,436)
N435_AND(-67,31,30,420)
N436_AND(67,31,30,420)
N437_AND(68,33,32,434)
N438_AND(-34,75)
N439_AND(34,70)
N440_AND(-69,2,1,74)
N441_OR(538,539)
N442_OR(536,537)
N443_OR(534,535)
N444_OR(532,533)
N445_OR(530,531)
N446_OR(528,529)
N447_OR(526,527)
N448_OR(524,525)
N449_OR(522,523)
N450_OR(520,521)
N451_OR(518,519)
N452_OR(516,517)
N453_OR(514,515)
N454_OR(512,513)
N455_OR(510,511)
N456_OR(508,509)
N457_OR(506,507)
N458_OR(504,505)
N459_OR(502,503)
N460_OR(500,501)
N461_OR(498,499)
N462_OR(496,497)
N463_OR(494,495)
N464_OR(492,493)
N465_OR(490,491)
N466_OR(488,489)
N467_OR(486,487)
N468_OR(484,485)
N469_OR(482,483)
N470_OR(480,481)
N471_OR(478,479)
N472_OR(476,477)
N473_OR(474,475)
N474_AND(-2,70)
N475_AND(2,1,71)
N476_AND(-37,473)
N477_AND(37,2,1,71)
N478_AND(-38,3,472)
N479_AND(38,2,1,3,143)
N480_AND(-39,4,471)
N481_AND(39,2,1,4,153)
N482_AND(-40,5,470)
N483_AND(40,2,1,5,4,163)
N484_AND(-41,6,469)
N485_AND(41,2,1,6,173)
N486_AND(-42,7,468)
N487_AND(42,2,1,7,6,183)
N488_AND(-43,8,467)
N489_AND(43,2,1,8,193)
N490_AND(-44,9,466)
N491_AND(44,2,1,9,8,203)
N492_AND(-45,10,465)
N493_AND(45,2,1,10,213)
N494_AND(-46,11,464)
N495_AND(46,2,1,11,10,223)
N496_AND(-47,12,463)
N497_AND(47,2,1,12,233)
N498_AND(-48,13,462)
N499_AND(48,2,1,13,12,243)
N500_AND(-49,14,461)
N501_AND(49,2,1,14,253)
N502_AND(-50,15,460)
N503_AND(50,2,1,15,14,263)
N504_AND(-51,16,459)
N505_AND(51,2,1,16,273)
N506_AND(-52,17,458)
N507_AND(52,2,1,17,16,283)
N508_AND(-53,18,457)
N509_AND(53,2,1,18,293)
N510_AND(-54,19,456)
N511_AND(54,2,1,19,18,303)
N512_AND(-55,20,455)
N513_AND(55,2,1,20,313)
N514_AND(-56,21,454)
N515_AND(56,2,1,21,20,323)
N516_AND(-57,22,453)
N517_AND(57,2,1,22,333)
N518_AND(-58,23,452)
N519_AND(58,2,1,23,22,343)
N520_AND(-59,24,451)
N521_AND(59,2,1,24,353)
N522_AND(-60,25,450)
N523_AND(60,2,1,25,24,363)
N524_AND(-61,26,449)
N525_AND(61,2,1,26,373)
N526_AND(-62,27,448)
N527_AND(62,2,1,27,26,383)
N528_AND(-63,28,447)
N529_AND(63,2,1,28,393)
N530_AND(-64,29,446)
N531_AND(64,2,1,29,28,403)
N532_AND(-65,30,445)
N533_AND(65,2,1,30,413)
N534_AND(-66,31,444)
N535_AND(66,2,1,31,30,420)
N536_AND(-67,32,443)
N537_AND(67,2,1,32,427)
N538_AND(-68,33,442)
N539_AND(68,2,1,33,32,434)
N540_AND(69,34,441)
N541_AND(-35,73)
ROOT 72
c Compressing POG with 472 nodes (472 accessible from root) and root literal 72
c   Converted node N138_AND(-37,-36,71) to N70_AND(-37,-36)
c   Converted node N137_OR(138,139) to N71_OR(70,37)
c   Converted node N140_AND(-3,137) to N72_AND(-3,71)
c   Converted node N141_AND(3,-37,71) to N73_AND(3,-37)
c   Converted node N136_OR(140,141) to N74_OR(72,73)
c   Converted node N142_AND(-38,136) to N75_AND(-38,74)
c   Converted node N143_OR(144,145) to N76_OR(-37,37)
c   Converted node N146_AND(38,3,143) to N77_AND(38,3,76)
c   Converted node N135_OR(142,146) to N78_OR(75,77)
c   Converted node N147_AND(-4,135) to N79_AND(-4,78)
c   Converted node N149_AND(-38,3,143) to N80_AND(-38,3,76)
c   Converted node N150_AND(38,-3,137) to N81_AND(38,-3,71)
c   Converted node N148_OR(149,150) to N82_OR(80,81)
c   Converted node N151_AND(4,148) to N83_AND(4,82)
c   Converted node N134_OR(147,151) to N84_OR(79,83)
c   Converted node N152_AND(-39,134) to N85_AND(-39,84)
c   Converted node N154_AND(-38,3,143) to N86_AND(-38,3,76)
c   Converted node N155_AND(38,3,143) to N87_AND(38,3,76)
c   Converted node N153_OR(154,155) to N88_OR(86,87)
c   Converted node N156_AND(39,4,153) to N89_AND(39,4,88)
c   Converted node N133_OR(152,156) to N90_OR(85,89)
c   Converted node N157_AND(-5,133) to N91_AND(-5,90)
c   Converted node N159_AND(-39,4,153) to N92_AND(-39,4,88)
c   Converted node N160_AND(39,-4,135) to N93_AND(39,-4,78)
c   Converted node N158_OR(159,160) to N94_OR(92,93)
c   Converted node N161_AND(5,158) to N95_AND(5,94)
c   Converted node N132_OR(157,161) to N96_OR(91,95)
c   Converted node N162_AND(-40,132) to N97_AND(-40,96)
c   Converted node N164_AND(-39,3,143) to N98_AND(-39,3,76)
c   Converted node N165_AND(39,3,143) to N99_AND(39,3,76)
c   Converted node N163_OR(164,165) to N100_OR(98,99)
c   Converted node N166_AND(40,5,4,163) to N101_AND(40,5,4,100)
c   Converted node N131_OR(162,166) to N102_OR(97,101)
c   Converted node N167_AND(-6,131) to N103_AND(-6,102)
c   Converted node N169_AND(-40,5,4,163) to N104_AND(-40,5,4,100)
c   Converted node N170_AND(40,-5,133) to N105_AND(40,-5,90)
c   Converted node N168_OR(169,170) to N106_OR(104,105)
c   Converted node N171_AND(6,168) to N107_AND(6,106)
c   Converted node N130_OR(167,171) to N108_OR(103,107)
c   Converted node N172_AND(-41,130) to N109_AND(-41,108)
c   Converted node N174_AND(-40,5,4,163) to N110_AND(-40,5,4,100)
c   Converted node N175_AND(40,5,4,163) to N111_AND(40,5,4,100)
c   Converted node N173_OR(174,175) to N112_OR(110,111)
c   Converted node N176_AND(41,6,173) to N113_AND(41,6,112)
c   Converted node N129_OR(172,176) to N114_OR(109,113)
c   Converted node N177_AND(-7,129) to N115_AND(-7,114)
c   Converted node N179_AND(-41,6,173) to N116_AND(-41,6,112)
c   Converted node N180_AND(41,-6,131) to N117_AND(41,-6,102)
c   Converted node N178_OR(179,180) to N118_OR(116,117)
c   Converted node N181_AND(7,178) to N119_AND(7,118)
c   Converted node N128_OR(177,181) to N120_OR(115,119)
c   Converted node N182_AND(-42,128) to N121_AND(-42,120)
c   Converted node N184_AND(-41,5,4,163) to N122_AND(-41,5,4,100)
c   Converted node N185_AND(41,5,4,163) to N123_AND(41,5,4,100)
c   Converted node N183_OR(184,185) to N124_OR(122,123)
c   Converted node N186_AND(42,7,6,183) to N125_AND(42,7,6,124)
c   Converted node N127_OR(182,186) to N126_OR(121,125)
c   Converted node N187_AND(-8,127) to N127_AND(-8,126)
c   Converted node N189_AND(-42,7,6,183) to N128_AND(-42,7,6,124)
c   Converted node N190_AND(42,-7,129) to N129_AND(42,-7,114)
c   Converted node N188_OR(189,190) to N130_OR(128,129)
c   Converted node N191_AND(8,188) to N131_AND(8,130)
c   Converted node N126_OR(187,191) to N132_OR(127,131)
c   Converted node N192_AND(-43,126) to N133_AND(-43,132)
c   Converted node N194_AND(-42,7,6,183) to N134_AND(-42,7,6,124)
c   Converted node N195_AND(42,7,6,183) to N135_AND(42,7,6,124)
c   Converted node N193_OR(194,195) to N136_OR(134,135)
c   Converted node N196_AND(43,8,193) to N137_AND(43,8,136)
c   Converted node N125_OR(192,196) to N138_OR(133,137)
c   Converted node N197_AND(-9,125) to N139_AND(-9,138)
c   Converted node N199_AND(-43,8,193) to N140_AND(-43,8,136)
c   Converted node N200_AND(43,-8,127) to N141_AND(43,-8,126)
c   Converted node N198_OR(199,200) to N142_OR(140,141)
c   Converted node N201_AND(9,198) to N143_AND(9,142)
c   Converted node N124_OR(197,201) to N144_OR(139,143)
c   Converted node N202_AND(-44,124) to N145_AND(-44,144)
c   Converted node N204_AND(-43,7,6,183) to N146_AND(-43,7,6,124)
c   Converted node N205_AND(43,7,6,183) to N147_AND(43,7,6,124)
c   Converted node N203_OR(204,205) to N148_OR(146,147)
c   Converted node N206_AND(44,9,8,203) to N149_AND(44,9,8,148)
c   Converted node N123_OR(202,206) to N150_OR(145,149)
c   Converted node N207_AND(-10,123) to N151_AND(-10,150)
c   Converted node N209_AND(-44,9,8,203) to N152_AND(-44,9,8,148)
c   Converted node N210_AND(44,-9,125) to N153_AND(44,-9,138)
c   Converted node N208_OR(209,210) to N154_OR(152,153)
c   Converted node N211_AND(10,208) to N155_AND(10,154)
c   Converted node N122_OR(207,211) to N156_OR(151,155)
c   Converted node N212_AND(-45,122) to N157_AND(-45,156)
c   Converted node N214_AND(-44,9,8,203) to N158_AND(-44,9,8,148)
c   Converted node N215_AND(44,9,8,203) to N159_AND(44,9,8,148)
c   Converted node N213_OR(214,215) to N160_OR(158,159)
c   Converted node N216_AND(45,10,213) to N161_AND(45,10,160)
c   Converted node N121_OR(212,216) to N162_OR(157,161)
c   Converted node N217_AND(-11,121) to N163_AND(-11,162)
c   Converted node N219_AND(-45,10,213) to N164_AND(-45,10,160)
c   Converted node N220_AND(45,-10,123) to N165_AND(45,-10,150)
c   Converted node N218_OR(219,220) to N166_OR(164,165)
c   Converted node N221_AND(11,218) to N167_AND(11,166)
c   Converted node N120_OR(217,221) to N168_OR(163,167)
c   Converted node N222_AND(-46,120) to N169_AND(-46,168)
c   Converted node N224_AND(-45,9,8,203) to N170_AND(-45,9,8,148)
c   Converted node N225_AND(45,9,8,203) to N171_AND(45,9,8,148)
c   Converted node N223_OR(224,225) to N172_OR(170,171)
c   Converted node N226_AND(46,11,10,223) to N173_AND(46,11,10,172)
c   Converted node N119_OR(222,226) to N174_OR(169,173)
c   Converted node N227_AND(-12,119) to N175_AND(-12,174)
c   Converted node N229_AND(-46,11,10,223) to N176_AND(-46,11,10,172)
c   Converted node N230_AND(46,-11,121) to N177_AND(46,-11,162)
c   Converted node N228_OR(229,230) to N178_OR(176,177)
c   Converted node N231_AND(12,228) to N179_AND(12,178)
c   Converted node N118_OR(227,231) to N180_OR(175,179)
c   Converted node N232_AND(-47,118) to N181_AND(-47,180)
c   Converted node N234_AND(-46,11,10,223) to N182_AND(-46,11,10,172)
c   Converted node N235_AND(46,11,10,223) to N183_AND(46,11,10,172)
c   Converted node N233_OR(234,235) to N184_OR(182,183)
c   Converted node N236_AND(47,12,233) to N185_AND(47,12,184)
c   Converted node N117_OR(232,236) to N186_OR(181,185)
c   Converted node N237_AND(-13,117) to N187_AND(-13,186)
c   Converted node N239_AND(-47,12,233) to N188_AND(-47,12,184)
c   Converted node N240_AND(47,-12,119) to N189_AND(47,-12,174)
c   Converted node N238_OR(239,240) to N190_OR(188,189)
c   Converted node N241_AND(13,238) to N191_AND(13,190)
c   Converted node N116_OR(237,241) to N192_OR(187,191)
c   Converted node N242_AND(-48,116) to N193_AND(-48,192)
c   Converted node N244_AND(-47,11,10,223) to N194_AND(-47,11,10,172)
c   Converted node N245_AND(47,11,10,223) to N195_AND(47,11,10,172)
c   Converted node N243_OR(244,245) to N196_OR(194,195)
c   Converted node N246_AND(48,13,12,243) to N197_AND(48,13,12,196)
c   Converted node N115_OR(242,246) to N198_OR(193,197)
c   Converted node N247_AND(-14,115) to N199_AND(-14,198)
c   Converted node N249_AND(-48,13,12,243) to N200_AND(-48,13,12,196)
c   Converted node N250_AND(48,-13,117) to N201_AND(48,-13,186)
c   Converted node N248_OR(249,250) to N202_OR(200,201)
c   Converted node N251_AND(14,248) to N203_AND(14,202)
c   Converted node N114_OR(247,251) to N204_OR(199,203)
c   Converted node N252_AND(-49,114) to N205_AND(-49,204)
c   Converted node N254_AND(-48,13,12,243) to N206_AND(-48,13,12,196)
c   Converted node N255_AND(48,13,12,243) to N207_AND(48,13,12,196)
c   Converted node N253_OR(254,255) to N208_OR(206,207)
c   Converted node N256_AND(49,14,253) to N209_AND(49,14,208)
c   Converted node N113_OR(252,256) to N210_OR(205,209)
c   Converted node N257_AND(-15,113) to N211_AND(-15,210)
c   Converted node N259_AND(-49,14,253) to N212_AND(-49,14,208)
c   Converted node N260_AND(49,-14,115) to N213_AND(49,-14,198)
c   Converted node N258_OR(259,260) to N214_OR(212,213)
c   Converted node N261_AND(15,258) to N215_AND(15,214)
c   Converted node N112_OR(257,261) to N216_OR(211,215)
c   Converted node N262_AND(-50,112) to N217_AND(-50,216)
c   Converted node N264_AND(-49,13,12,243) to N218_AND(-49,13,12,196)
c   Converted node N265_AND(49,13,12,243) to N219_AND(49,13,12,196)
c   Converted node N263_OR(264,265) to N220_OR(218,219)
c   Converted node N266_AND(50,15,14,263) to N221_AND(50,15,14,220)
c   Converted node N111_OR(262,266) to N222_OR(217,221)
c   Converted node N267_AND(-16,111) to N223_AND(-16,222)
c   Converted node N269_AND(-50,15,14,263) to N224_AND(-50,15,14,220)
c   Converted node N270_AND(50,-15,113) to N225_AND(50,-15,210)
c   Converted node N268_OR(269,270) to N226_OR(224,225)
c   Converted node N271_AND(16,268) to N227_AND(16,226)
c   Converted node N110_OR(267,271) to N228_OR(223,227)
c   Converted node N272_AND(-51,110) to N229_AND(-51,228)
c   Converted node N274_AND(-50,15,14,263) to N230_AND(-50,15,14,220)
c   Converted node N275_AND(50,15,14,263) to N231_AND(50,15,14,220)
c   Converted node N273_OR(274,275) to N232_OR(230,231)
c   Converted node N276_AND(51,16,273) to N233_AND(51,16,232)
c   Converted node N109_OR(272,276) to N234_OR(229,233)
c   Converted node N277_AND(-17,109) to N235_AND(-17,234)
c   Converted node N279_AND(-51,16,273) to N236_AND(-51,16,232)
c   Converted node N280_AND(51,-16,111) to N237_AND(51,-16,222)
c   Converted node N278_OR(279,280) to N238_OR(236,237)
c   Converted node N281_AND(17,278) to N239_AND(17,238)
c   Converted node N108_OR(277,281) to N240_OR(235,239)
c   Converted node N282_AND(-52,108) to N241_AND(-52,240)
c   Converted node N284_AND(-51,15,14,263) to N242_AND(-51,15,14,220)
c   Converted node N285_AND(51,15,14,263) to N243_AND(51,15,14,220)
c   Converted node N283_OR(284,285) to N244_OR(242,243)
c   Converted node N286_AND(52,17,16,283) to N245_AND(52,17,16,244)
c   Converted node N107_OR(282,286) to N246_OR(241,245)
c   Converted node N287_AND(-18,107) to N247_AND(-18,246)
c   Converted node N289_AND(-52,17,16,283) to N248_AND(-52,17,16,244)
c   Converted node N290_AND(52,-17,109) to N249_AND(52,-17,234)
c   Converted node N288_OR(289,290) to N250_OR(248,249)
c   Converted node N291_AND(18,288) to N251_AND(18,250)
c   Converted node N106_OR(287,291) to N252_OR(247,251)
c   Converted node N292_AND(-53,106) to N253_AND(-53,252)
c   Converted node N294_AND(-52,17,16,283) to N254_AND(-52,17,16,244)
c   Converted node N295_AND(52,17,16,283) to N255_AND(52,17,16,244)
c   Converted node N293_OR(294,295) to N256_OR(254,255)
c   Converted node N296_AND(53,18,293) to N257_AND(53,18,256)
c   Converted node N105_OR(292,296) to N258_OR(253,257)
c   Converted node N297_AND(-19,105) to N259_AND(-19,258)
c   Converted node N299_AND(-53,18,293) to N260_AND(-53,18,256)
c   Converted node N300_AND(53,-18,107) to N261_AND(53,-18,246)
c   Converted node N298_OR(299,300) to N262_OR(260,261)
c   Converted node N301_AND(19,298) to N263_AND(19,262)
c   Converted node N104_OR(297,301) to N264_OR(259,263)
c   Converted node N302_AND(-54,104) to N265_AND(-54,264)
c   Converted node N304_AND(-53,17,16,283) to N266_AND(-53,17,16,244)
c   Converted node N305_AND(53,17,16,283) to N267_AND(53,17,16,244)
c   Converted node N303_OR(304,305) to N268_OR(266,267)
c   Converted node N306_AND(54,19,18,303) to N269_AND(54,19,18,268)
c   Converted node N103_OR(302,306) to N270_OR(265,269)
c   Converted node N307_AND(-20,103) to N271_AND(-20,270)
c   Converted node N309_AND(-54,19,18,303) to N272_AND(-54,19,18,268)
c   Converted node N310_AND(54,-19,105) to N273_AND(54,-19,258)
c   Converted node N308_OR(309,310) to N274_OR(272,273)
c   Converted node N311_AND(20,308) to N275_AND(20,274)
c   Converted node N102_OR(307,311) to N276_OR(271,275)
c   Converted node N312_AND(-55,102) to N277_AND(-55,276)
c   Converted node N314_AND(-54,19,18,303) to N278_AND(-54,19,18,268)
c   Converted node N315_AND(54,19,18,303) to N279_AND(54,19,18,268)
c   Converted node N313_OR(314,315) to N280_OR(278,279)
c   Converted node N316_AND(55,20,313) to N281_AND(55,20,280)
c   Converted node N101_OR(312,316) to N282_OR(277,281)
c   Converted node N317_AND(-21,101) to N283_AND(-21,282)
c   Converted node N319_AND(-55,20,313) to N284_AND(-55,20,280)
c   Converted node N320_AND(55,-20,103) to N285_AND(55,-20,270)
c   Converted node N318_OR(319,320) to N286_OR(284,285)
c   Converted node N321_AND(21,318) to N287_AND(21,286)
c   Converted node N100_OR(317,321) to N288_OR(283,287)
c   Converted node N322_AND(-56,100) to N289_AND(-56,288)
c   Converted node N324_AND(-55,19,18,303) to N290_AND(-55,19,18,268)
c   Converted node N325_AND(55,19,18,303) to N291_AND(55,19,18,268)
c   Converted node N323_OR(324,325) to N292_OR(290,291)
c   Converted node N326_AND(56,21,20,323) to N293_AND(56,21,20,292)
c   Converted node N99_OR(322,326) to N294_OR(289,293)
c   Converted node N327_AND(-22,99) to N295_AND(-22,294)
c   Converted node N329_AND(-56,21,20,323) to N296_AND(-56,21,20,292)
c   Converted node N330_AND(56,-21,101) to N297_AND(56,-21,282)
c   Converted node N328_OR(329,330) to N298_OR(296,297)
c   Converted node N331_AND(22,328) to N299_AND(22,298)
c   Converted node N98_OR(327,331) to N300_OR(295,299)
c   Converted node N332_AND(-57,98) to N301_AND(-57,300)
c   Converted node N334_AND(-56,21,20,323) to N302_AND(-56,21,20,292)
c   Converted node N335_AND(56,21,20,323) to N303_AND(56,21,20,292)
c   Converted node N333_OR(334,335) to N304_OR(302,303)
c   Converted node N336_AND(57,22,333) to N305_AND(57,22,304)
c   Converted node N97_OR(332,336) to N306_OR(301,305)
c   Converted node N337_AND(-23,97) to N307_AND(-23,306)
c   Converted node N339_AND(-57,22,333) to N308_AND(-57,22,304)
c   Converted node N340_AND(57,-22,99) to N309_AND(57,-22,294)
c   Converted node N338_OR(339,340) to N310_OR(308,309)
c   Converted node N341_AND(23,338) to N311_AND(23,310)
c   Converted node N96_OR(337,341) to N312_OR(307,311)
c   Converted node N342_AND(-58,96) to N313_AND(-58,312)
c   Converted node N344_AND(-57,21,20,323) to N314_AND(-57,21,20,292)
c   Converted node N345_AND(57,21,20,323) to N315_AND(57,21,20,292)
c   Converted node N343_OR(344,345) to N316_OR(314,315)
c   Converted node N346_AND(58,23,22,343) to N317_AND(58,23,22,316)
c   Converted node N95_OR(342,346) to N318_OR(313,317)
c   Converted node N347_AND(-24,95) to N319_AND(-24,318)
c   Converted node N349_AND(-58,23,22,343) to N320_AND(-58,23,22,316)
c   Converted node N350_AND(58,-23,97) to N321_AND(58,-23,306)
c   Converted node N348_OR(349,350) to N322_OR(320,321)
c   Converted node N351_AND(24,348) to N323_AND(24,322)
c   Converted node N94_OR(347,351) to N324_OR(319,323)
c   Converted node N352_AND(-59,94) to N325_AND(-59,324)
c   Converted node N354_AND(-58,23,22,343) to N326_AND(-58,23,22,316)
c   Converted node N355_AND(58,23,22,343) to N327_AND(58,23,22,316)
c   Converted node N353_OR(354,355) to N328_OR(326,327)
c   Converted node N356_AND(59,24,353) to N329_AND(59,24,328)
c   Converted node N93_OR(352,356) to N330_OR(325,329)
c   Converted node N357_AND(-25,93) to N331_AND(-25,330)
c   Converted node N359_AND(-59,24,353) to N332_AND(-59,24,328)
c   Converted node N360_AND(59,-24,95) to N333_AND(59,-24,318)
c   Converted node N358_OR(359,360) to N334_OR(332,333)
c   Converted node N361_AND(25,358) to N335_AND(25,334)
c   Converted node N92_OR(357,361) to N336_OR(331,335)
c   Converted node N362_AND(-60,92) to N337_AND(-60,336)
c   Converted node N364_AND(-59,23,22,343) to N338_AND(-59,23,22,316)
c   Converted node N365_AND(59,23,22,343) to N339_AND(59,23,22,316)
c   Converted node N363_OR(364,365) to N340_OR(338,339)
c   Converted node N366_AND(60,25,24,363) to N341_AND(60,25,24,340)
c   Converted node N91_OR(362,366) to N342_OR(337,341)
c   Converted node N367_AND(-26,91) to N343_AND(-26,342)
c   Converted node N369_AND(-60,25,24,363) to N344_AND(-60,25,24,340)
c   Converted node N370_AND(60,-25,93) to N345_AND(60,-25,330)
c   Converted node N368_OR(369,370) to N346_OR(344,345)
c   Converted node N371_AND(26,368) to N347_AND(26,346)
c   Converted node N90_OR(367,371) to N348_OR(343,347)
c   Converted node N372_AND(-61,90) to N349_AND(-61,348)
c   Converted node N374_AND(-60,25,24,363) to N350_AND(-60,25,24,340)
c   Converted node N375_AND(60,25,24,363) to N351_AND(60,25,24,340)
c   Converted node N373_OR(374,375) to N352_OR(350,351)
c   Converted node N376_AND(61,26,373) to N353_AND(61,26,352)
c   Converted node N89_OR(372,376) to N354_OR(349,353)
c   Converted node N377_AND(-27,89) to N355_AND(-27,354)
c   Converted node N379_AND(-61,26,373) to N356_AND(-61,26,352)
c   Converted node N380_AND(61,-26,91) to N357_AND(61,-26,342)
c   Converted node N378_OR(379,380) to N358_OR(356,357)
c   Converted node N381_AND(27,378) to N359_AND(27,358)
c   Converted node N88_OR(377,381) to N360_OR(355,359)
c   Converted node N382_AND(-62,88) to N361_AND(-62,360)
c   Converted node N384_AND(-61,25,24,363) to N362_AND(-61,25,24,340)
c   Converted node N385_AND(61,25,24,363) to N363_AND(61,25,24,340)
c   Converted node N383_OR(384,385) to N364_OR(362,363)
c   Converted node N386_AND(62,27,26,383) to N365_AND(62,27,26,364)
c   Converted node N87_OR(382,386) to N366_OR(361,365)
c   Converted node N387_AND(-28,87) to N367_AND(-28,366)
c   Converted node N389_AND(-62,27,26,383) to N368_AND(-62,27,26,364)
c   Converted node N390_AND(62,-27,89) to N369_AND(62,-27,354)
c   Converted node N388_OR(389,390) to N370_OR(368,369)
c   Converted node N391_AND(28,388) to N371_AND(28,370)
c   Converted node N86_OR(387,391) to N372_OR(367,371)
c   Converted node N392_AND(-63,86) to N373_AND(-63,372)
c   Converted node N394_AND(-62,27,26,383) to N374_AND(-62,27,26,364)
c   Converted node N395_AND(62,27,26,383) to N375_AND(62,27,26,364)
c   Converted node N393_OR(394,395) to N376_OR(374,375)
c   Converted node N396_AND(63,28,393) to N377_AND(63,28,376)
c   Converted node N85_OR(392,396) to N378_OR(373,377)
c   Converted node N397_AND(-29,85) to N379_AND(-29,378)
c   Converted node N399_AND(-63,28,393) to N380_AND(-63,28,376)
c   Converted node N400_AND(63,-28,87) to N381_AND(63,-28,366)
c   Converted node N398_OR(399,400) to N382_OR(380,381)
c   Converted node N401_AND(29,398) to N383_AND(29,382)
c   Converted node N84_OR(397,401) to N384_OR(379,383)
c   Converted node N402_AND(-64,84) to N385_AND(-64,384)
c   Converted node N404_AND(-63,27,26,383) to N386_AND(-63,27,26,364)
c   Converted node N405_AND(63,27,26,383) to N387_AND(63,27,26,364)
c   Converted node N403_OR(404,405) to N388_OR(386,387)
c   Converted node N406_AND(64,29,28,403) to N389_AND(64,29,28,388)
c   Converted node N83_OR(402,406) to N390_OR(385,389)
c   Converted node N407_AND(-30,83) to N391_AND(-30,390)
c   Converted node N409_AND(-64,29,28,403) to N392_AND(-64,29,28,388)
c   Converted node N410_AND(64,-29,85) to N393_AND(64,-29,378)
c   Converted node N408_OR(409,410) to N394_OR(392,393)
c   Converted node N411_AND(30,408) to N395_AND(30,394)
c   Converted node N82_OR(407,411) to N396_OR(391,395)
c   Converted node N412_AND(-65,82) to N397_AND(-65,396)
c   Converted node N414_AND(-64,29,28,403) to N398_AND(-64,29,28,388)
c   Converted node N415_AND(64,29,28,403) to N399_AND(64,29,28,388)
c   Converted node N413_OR(414,415) to N400_OR(398,399)
c   Converted node N416_AND(65,30,413) to N401_AND(65,30,400)
c   Converted node N81_OR(412,416) to N402_OR(397,401)
c   Converted node N417_AND(-31,81) to N403_AND(-31,402)
c   Converted node N418_AND(31,70) to FALSE
c   Node N80_OR(417,418)  maps to 403
c   Converted node N419_AND(-66,80) to N404_AND(-66,403)
c   Converted node N421_AND(-65,29,28,403) to N405_AND(-65,29,28,388)
c   Converted node N422_AND(65,29,28,403) to N406_AND(65,29,28,388)
c   Converted node N420_OR(421,422) to N407_OR(405,406)
c   Converted node N423_AND(66,31,30,420) to N408_AND(66,31,30,407)
c   Converted node N79_OR(419,423) to N409_OR(404,408)
c   Converted node N424_AND(-32,79) to N410_AND(-32,409)
c   Converted node N425_AND(32,70) to FALSE
c   Node N78_OR(424,425)  maps to 410
c   Converted node N426_AND(-67,78) to N411_AND(-67,410)
c   Converted node N428_AND(-66,31,30,420) to N412_AND(-66,31,30,407)
c   Converted node N429_AND(66,31,30,420) to N413_AND(66,31,30,407)
c   Converted node N427_OR(428,429) to N414_OR(412,413)
c   Converted node N430_AND(67,32,427) to N415_AND(67,32,414)
c   Converted node N77_OR(426,430) to N416_OR(411,415)
c   Converted node N431_AND(-33,77) to N417_AND(-33,416)
c   Converted node N432_AND(33,70) to FALSE
c   Node N76_OR(431,432)  maps to 417
c   Converted node N433_AND(-68,76) to N418_AND(-68,417)
c   Converted node N435_AND(-67,31,30,420) to N419_AND(-67,31,30,407)
c   Converted node N436_AND(67,31,30,420) to N420_AND(67,31,30,407)
c   Converted node N434_OR(435,436) to N421_OR(419,420)
c   Converted node N437_AND(68,33,32,434) to N422_AND(68,33,32,421)
c   Converted node N75_OR(433,437) to N423_OR(418,422)
c   Converted node N438_AND(-34,75) to N424_AND(-34,423)
c   Converted node N439_AND(34,70) to FALSE
c   Node N74_OR(438,439)  maps to 424
c   Converted node N440_AND(-69,2,1,74) to N425_AND(-69,2,1,424)
c   Converted node N474_AND(-2,70) to FALSE
c   Converted node N475_AND(2,1,71) to N426_AND(2,1)
c   Node N473_OR(474,475)  maps to 426
c   Converted node N476_AND(-37,473) to N427_AND(-37,426)
c   Converted node N477_AND(37,2,1,71) to N428_AND(37,2,1)
c   Converted node N472_OR(476,477) to N429_OR(427,428)
c   Converted node N478_AND(-38,3,472) to N430_AND(-38,3,429)
c   Converted node N479_AND(38,2,1,3,143) to N431_AND(38,2,1,3,76)
c   Converted node N471_OR(478,479) to N432_OR(430,431)
c   Converted node N480_AND(-39,4,471) to N433_AND(-39,4,432)
c   Converted node N481_AND(39,2,1,4,153) to N434_AND(39,2,1,4,88)
c   Converted node N470_OR(480,481) to N435_OR(433,434)
c   Converted node N482_AND(-40,5,470) to N436_AND(-40,5,435)
c   Converted node N483_AND(40,2,1,5,4,163) to N437_AND(40,2,1,5,4,100)
c   Converted node N469_OR(482,483) to N438_OR(436,437)
c   Converted node N484_AND(-41,6,469) to N439_AND(-41,6,438)
c   Converted node N485_AND(41,2,1,6,173) to N440_AND(41,2,1,6,112)
c   Converted node N468_OR(484,485) to N441_OR(439,440)
c   Converted node N486_AND(-42,7,468) to N442_AND(-42,7,441)
c   Converted node N487_AND(42,2,1,7,6,183) to N443_AND(42,2,1,7,6,124)
c   Converted node N467_OR(486,487) to N444_OR(442,443)
c   Converted node N488_AND(-43,8,467) to N445_AND(-43,8,444)
c   Converted node N489_AND(43,2,1,8,193) to N446_AND(43,2,1,8,136)
c   Converted node N466_OR(488,489) to N447_OR(445,446)
c   Converted node N490_AND(-44,9,466) to N448_AND(-44,9,447)
c   Converted node N491_AND(44,2,1,9,8,203) to N449_AND(44,2,1,9,8,148)
c   Converted node N465_OR(490,491) to N450_OR(448,449)
c   Converted node N492_AND(-45,10,465) to N451_AND(-45,10,450)
c   Converted node N493_AND(45,2,1,10,213) to N452_AND(45,2,1,10,160)
c   Converted node N464_OR(492,493) to N453_OR(451,452)
c   Converted node N494_AND(-46,11,464) to N454_AND(-46,11,453)
c   Converted node N495_AND(46,2,1,11,10,223) to N455_AND(46,2,1,11,10,172)
c   Converted node N463_OR(494,495) to N456_OR(454,455)
c   Converted node N496_AND(-47,12,463) to N457_AND(-47,12,456)
c   Converted node N497_AND(47,2,1,12,233) to N458_AND(47,2,1,12,184)
c   Converted node N462_OR(496,497) to N459_OR(457,458)
c   Converted node N498_AND(-48,13,462) to N460_AND(-48,13,459)
c   Converted node N499_AND(48,2,1,13,12,243) to N461_AND(48,2,1,13,12,196)
c   Converted node N461_OR(498,499) to N462_OR(460,461)
c   Converted node N500_AND(-49,14,461) to N463_AND(-49,14,462)
c   Converted node N501_AND(49,2,1,14,253) to N464_AND(49,2,1,14,208)
c   Converted node N460_OR(500,501) to N465_OR(463,464)
c   Converted node N502_AND(-50,15,460) to N466_AND(-50,15,465)
c   Converted node N503_AND(50,2,1,15,14,263) to N467_AND(50,2,1,15,14,220)
c   Converted node N459_OR(502,503) to N468_OR(466,467)
c   Converted node N504_AND(-51,16,459) to N469_AND(-51,16,468)
c   Converted node N505_AND(51,2,1,16,273) to N470_AND(51,2,1,16,232)
c   Converted node N458_OR(504,505) to N471_OR(469,470)
c   Converted node N506_AND(-52,17,458) to N472_AND(-52,17,471)
c   Converted node N507_AND(52,2,1,17,16,283) to N473_AND(52,2,1,17,16,244)
c   Converted node N457_OR(506,507) to N474_OR(472,473)
c   Converted node N508_AND(-53,18,457) to N475_AND(-53,18,474)
c   Converted node N509_AND(53,2,1,18,293) to N476_AND(53,2,1,18,256)
c   Converted node N456_OR(508,509) to N477_OR(475,476)
c   Converted node N510_AND(-54,19,456) to N478_AND(-54,19,477)
c   Converted node N511_AND(54,2,1,19,18,303) to N479_AND(54,2,1,19,18,268)
c   Converted node N455_OR(510,511) to N480_OR(478,479)
c   Converted node N512_AND(-55,20,455) to N481_AND(-55,20,480)
c   Converted node N513_AND(55,2,1,20,313) to N482_AND(55,2,1,20,280)
c   Converted node N454_OR(512,513) to N483_OR(481,482)
c   Converted node N514_AND(-56,21,454) to N484_AND(-56,21,483)
c   Converted node N515_AND(56,2,1,21,20,323) to N485_AND(56,2,1,21,20,292)
c   Converted node N453_OR(514,515) to N486_OR(484,485)
c   Converted node N516_AND(-57,22,453) to N487_AND(-57,22,486)
c   Converted node N517_AND(57,2,1,22,333) to N488_AND(57,2,1,22,304)
c   Converted node N452_OR(516,517) to N489_OR(487,488)
c   Converted node N518_AND(-58,23,452) to N490_AND(-58,23,489)
c   Converted node N519_AND(58,2,1,23,22,343) to N491_AND(58,2,1,23,22,316)
c   Converted node N451_OR(518,519) to N492_OR(490,491)
c   Converted node N520_AND(-59,24,451) to N493_AND(-59,24,492)
c   Converted node N521_AND(59,2,1,24,353) to N494_AND(59,2,1,24,328)
c   Converted node N450_OR(520,521) to N495_OR(493,494)
c   Converted node N522_AND(-60,25,450) to N496_AND(-60,25,495)
c   Converted node N523_AND(60,2,1,25,24,363) to N497_AND(60,2,1,25,24,340)
c   Converted node N449_OR(522,523) to N498_OR(496,497)
c   Converted node N524_AND(-61,26,449) to N499_AND(-61,26,498)
c   Converted node N525_AND(61,2,1,26,373) to N500_AND(61,2,1,26,352)
c   Converted node N448_OR(524,525) to N501_OR(499,500)
c   Converted node N526_AND(-62,27,448) to N502_AND(-62,27,501)
c   Converted node N527_AND(62,2,1,27,26,383) to N503_AND(62,2,1,27,26,364)
c   Converted node N447_OR(526,527) to N504_OR(502,503)
c   Converted node N528_AND(-63,28,447) to N505_AND(-63,28,504)
c   Converted node N529_AND(63,2,1,28,393) to N506_AND(63,2,1,28,376)
c   Converted node N446_OR(528,529) to N507_OR(505,506)
c   Converted node N530_AND(-64,29,446) to N508_AND(-64,29,507)
c   Converted node N531_AND(64,2,1,29,28,403) to N509_AND(64,2,1,29,28,388)
c   Converted node N445_OR(530,531) to N510_OR(508,509)
c   Converted node N532_AND(-65,30,445) to N511_AND(-65,30,510)
c   Converted node N533_AND(65,2,1,30,413) to N512_AND(65,2,1,30,400)
c   Converted node N444_OR(532,533) to N513_OR(511,512)
c   Converted node N534_AND(-66,31,444) to N514_AND(-66,31,513)
c   Converted node N535_AND(66,2,1,31,30,420) to N515_AND(66,2,1,31,30,407)
c   Converted node N443_OR(534,535) to N516_OR(514,515)
c   Converted node N536_AND(-67,32,443) to N517_AND(-67,32,516)
c   Converted node N537_AND(67,2,1,32,427) to N518_AND(67,2,1,32,414)
c   Converted node N442_OR(536,537) to N519_OR(517,518)
c   Converted node N538_AND(-68,33,442) to N520_AND(-68,33,519)
c   Converted node N539_AND(68,2,1,33,32,434) to N521_AND(68,2,1,33,32,421)
c   Converted node N441_OR(538,539) to N522_OR(520,521)
c   Converted node N540_AND(69,34,441) to N523_AND(69,34,522)
c   Converted node N73_OR(440,540) to N524_OR(425,523)
c   Converted node N541_AND(-35,73) to N525_AND(-35,524)
c Compressed POG has 456 nodes, root literal 525, and 1740 defining clauses
c Before concretizing:
N70_AND(-37,-36)
N71_OR(70,37)
N72_AND(-3,71)
N73_AND(3,-37)
N74_OR(72,73)
N75_AND(-38,74)
N76_OR(-37,37)
N77_AND(38,3,76)
N78_OR(75,77)
N79_AND(-4,78)
N80_AND(-38,3,76)
N81_AND(38,-3,71)
N82_OR(80,81)
N83_AND(4,82)
N84_OR(79,83)
N85_AND(-39,84)
N86_AND(-38,3,76)
N87_AND(38,3,76)
N88_OR(86,87)
N89_AND(39,4,88)
N90_OR(85,89)
N91_AND(-5,90)
N92_AND(-39,4,88)
N93_AND(39,-4,78)
N94_OR(92,93)
N95_AND(5,94)
N96_OR(91,95)
N97_AND(-40,96)
N98_AND(-39,3,76)
N99_AND(39,3,76)
N100_OR(98,99)
N101_AND(40,5,4,100)
N102_OR(97,101)
N103_AND(-6,102)
N104_AND(-40,5,4,100)
N105_AND(40,-5,90)
N106_OR(104,105)
N107_AND(6,106)
N108_OR(103,107)
N109_AND(-41,108)
N110_AND(-40,5,4,100)
N111_AND(40,5,4,100)
N112_OR(110,111)
N113_AND(41,6,112)
N114_OR(109,113)
N115_AND(-7,114)
N116_AND(-41,6,112)
N117_AND(41,-6,102)
N118_OR(116,117)
N119_AND(7,118)
N120_OR(115,119)
N121_AND(-42,120)
N122_AND(-41,5,4,100)
N123_AND(41,5,4,100)
N124_OR(122,123)
N125_AND(42,7,6,124)
N126_OR(121,125)
N127_AND(-8,126)
N128_AND(-42,7,6,124)
N129_AND(42,-7,114)
N130_OR(128,129)
N131_AND(8,130)
N132_OR(127,131)
N133_AND(-43,132)
N134_AND(-42,7,6,124)
N135_AND(42,7,6,124)
N136_OR(134,135)
N137_AND(43,8,136)
N138_OR(133,137)
N139_AND(-9,138)
N140_AND(-43,8,136)
N141_AND(43,-8,126)
N142_OR(140,141)
N143_AND(9,142)
N144_OR(139,143)
N145_AND(-44,144)
N146_AND(-43,7,6,124)
N147_AND(43,7,6,124)
N148_OR(146,147)
N149_AND(44,9,8,148)
N150_OR(145,149)
N151_AND(-10,150)
N152_AND(-44,9,8,148)
N153_AND(44,-9,138)
N154_OR(152,153)
N155_AND(10,154)
N156_OR(151,155)
N157_AND(-45,156)
N158_AND(-44,9,8,148)
N159_AND(44,9,8,148)
N160_OR(158,159)
N161_AND(45,10,160)
N162_OR(157,161)
N163_AND(-11,162)
N164_AND(-45,10,160)
N165_AND(45,-10,150)
N166_OR(164,165)
N167_AND(11,166)
N168_OR(163,167)
N169_AND(-46,168)
N170_AND(-45,9,8,148)
N171_AND(45,9,8,148)
N172_OR(170,171)
N173_AND(46,11,10,172)
N174_OR(169,173)
N175_AND(-12,174)
N176_AND(-46,11,10,172)
N177_AND(46,-11,162)
N178_OR(176,177)
N179_AND(12,178)
N180_OR(175,179)
N181_AND(-47,180)
N182_AND(-46,11,10,172)
N183_AND(46,11,10,172)
N184_OR(182,183)
N185_AND(47,12,184)
N186_OR(181,185)
N187_AND(-13,186)
N188_AND(-47,12,184)
N189_AND(47,-12,174)
N190_OR(188,189)
N191_AND(13,190)
N192_OR(187,191)
N193_AND(-48,192)
N194_AND(-47,11,10,172)
N195_AND(47,11,10,172)
N196_OR(194,195)
N197_AND(48,13,12,196)
N198_OR(193,197)
N199_AND(-14,198)
N200_AND(-48,13,12,196)
N201_AND(48,-13,186)
N202_OR(200,201)
N203_AND(14,202)
N204_OR(199,203)
N205_AND(-49,204)
N206_AND(-48,13,12,196)
N207_AND(48,13,12,196)
N208_OR(206,207)
N209_AND(49,14,208)
N210_OR(205,209)
N211_AND(-15,210)
N212_AND(-49,14,208)
N213_AND(49,-14,198)
N214_OR(212,213)
N215_AND(15,214)
N216_OR(211,215)
N217_AND(-50,216)
N218_AND(-49,13,12,196)
N219_AND(49,13,12,196)
N220_OR(218,219)
N221_AND(50,15,14,220)
N222_OR(217,221)
N223_AND(-16,222)
N224_AND(-50,15,14,220)
N225_AND(50,-15,210)
N226_OR(224,225)
N227_AND(16,226)
N228_OR(223,227)
N229_AND(-51,228)
N230_AND(-50,15,14,220)
N231_AND(50,15,14,220)
N232_OR(230,231)
N233_AND(51,16,232)
N234_OR(229,233)
N235_AND(-17,234)
N236_AND(-51,16,232)
N237_AND(51,-16,222)
N238_OR(236,237)
N239_AND(17,238)
N240_OR(235,239)
N241_AND(-52,240)
N242_AND(-51,15,14,220)
N243_AND(51,15,14,220)
N244_OR(242,243)
N245_AND(52,17,16,244)
N246_OR(241,245)
N247_AND(-18,246)
N248_AND(-52,17,16,244)
N249_AND(52,-17,234)
N250_OR(248,249)
N251_AND(18,250)
N252_OR(247,251)
N253_AND(-53,252)
N254_AND(-52,17,16,244)
N255_AND(52,17,16,244)
N256_OR(254,255)
N257_AND(53,18,256)
N258_OR(253,257)
N259_AND(-19,258)
N260_AND(-53,18,256)
N261_AND(53,-18,246)
N262_OR(260,261)
N263_AND(19,262)
N264_OR(259,263)
N265_AND(-54,264)
N266_AND(-53,17,16,244)
N267_AND(53,17,16,244)
N268_OR(266,267)
N269_AND(54,19,18,268)
N270_OR(265,269)
N271_AND(-20,270)
N272_AND(-54,19,18,268)
N273_AND(54,-19,258)
N274_OR(272,273)
N275_AND(20,274)
N276_OR(271,275)
N277_AND(-55,276)
N278_AND(-54,19,18,268)
N279_AND(54,19,18,268)
N280_OR(278,279)
N281_AND(55,20,280)
N282_OR(277,281)
N283_AND(-21,282)
N284_AND(-55,20,280)
N285_AND(55,-20,270)
N286_OR(284,285)
N287_AND(21,286)
N288_OR(283,287)
N289_AND(-56,288)
N290_AND(-55,19,18,268)
N291_AND(55,19,18,268)
N292_OR(290,291)
N293_AND(56,21,20,292)
N294_OR(289,293)
N295_AND(-22,294)
N296_AND(-56,21,20,292)
N297_AND(56,-21,282)
N298_OR(296,297)
N299_AND(22,298)
N300_OR(295,299)
N301_AND(-57,300)
N302_AND(-56,21,20,292)
N303_AND(56,21,20,292)
N304_OR(302,303)
N305_AND(57,22,304)
N306_OR(301,305)
N307_AND(-23,306)
N308_AND(-57,22,304)
N309_AND(57,-22,294)
N310_OR(308,309)
N311_AND(23,310)
N312_OR(307,311)
N313_AND(-58,312)
N314_AND(-57,21,20,292)
N315_AND(57,21,20,292)
N316_OR(314,315)
N317_AND(58,23,22,316)
N318_OR(313,317)
N319_AND(-24,318)
N320_AND(-58,23,22,316)
N321_AND(58,-23,306)
N322_OR(320,321)
N323_AND(24,322)
N324_OR(319,323)
N325_AND(-59,324)
N326_AND(-58,23,22,316)
N327_AND(58,23,22,316)
N328_OR(326,327)
N329_AND(59,24,328)
N330_OR(325,329)
N331_AND(-25,330)
N332_AND(-59,24,328)
N333_AND(59,-24,318)
N334_OR(332,333)
N335_AND(25,334)
N336_OR(331,335)
N337_AND(-60,336)
N338_AND(-59,23,22,316)
N339_AND(59,23,22,316)
N340_OR(338,339)
N341_AND(60,25,24,340)
N342_OR(337,341)
N343_AND(-26,342)
N344_AND(-60,25,24,340)
N345_AND(60,-25,330)
N346_OR(344,345)
N347_AND(26,346)
N348_OR(343,347)
N349_AND(-61,348)
N350_AND(-60,25,24,340)
N351_AND(60,25,24,340)
N352_OR(350,351)
N353_AND(61,26,352)
N354_OR(349,353)
N355_AND(-27,354)
N356_AND(-61,26,352)
N357_AND(61,-26,342)
N358_OR(356,357)
N359_AND(27,358)
N360_OR(355,359)
N361_AND(-62,360)
N362_AND(-61,25,24,340)
N363_AND(61,25,24,340)
N364_OR(362,363)
N365_AND(62,27,26,364)
N366_OR(361,365)
N367_AND(-28,366)
N368_AND(-62,27,26,364)
N369_AND(62,-27,354)
N370_OR(368,369)
N371_AND(28,370)
N372_OR(367,371)
N373_AND(-63,372)
N374_AND(-62,27,26,364)
N375_AND(62,27,26,364)
N376_OR(374,375)
N377_AND(63,28,376)
N378_OR(373,377)
N379_AND(-29,378)
N380_AND(-63,28,376)
N381_AND(63,-28,366)
N382_OR(380,381)
N383_AND(29,382)
N384_OR(379,383)
N385_AND(-64,384)
N386_AND(-63,27,26,364)
N387_AND(63,27,26,364)
N388_OR(386,387)
N389_AND(64,29,28,388)
N390_OR(385,389)
N391_AND(-30,390)
N392_AND(-64,29,28,388)
N393_AND(64,-29,378)
N394_OR(392,393)
N395_AND(30,394)
N396_OR(391,395)
N397_AND(-65,396)
N398_AND(-64,29,28,388)
N399_AND(64,29,28,388)
N400_OR(398,399)
N401_AND(65,30,400)
N402_OR(397,401)
N403_AND(-31,402)
N404_AND(-66,403)
N405_AND(-65,29,28,388)
N406_AND(65,29,28,388)
N407_OR(405,406)
N408_AND(66,31,30,407)
N409_OR(404,408)
N410_AND(-32,409)
N411_AND(-67,410)
N412_AND(-66,31,30,407)
N413_AND(66,31,30,407)
N414_OR(412,413)
N415_AND(67,32,414)
N416_OR(411,415)
N417_AND(-33,416)
N418_AND(-68,417)
N419_AND(-67,31,30,407)
N420_AND(67,31,30,407)
N421_OR(419,420)
N422_AND(68,33,32,421)
N423_OR(418,422)
N424_AND(-34,423)
N425_AND(-69,2,1,424)
N426_AND(2,1)
N427_AND(-37,426)
N428_AND(37,2,1)
N429_OR(427,428)
N430_AND(-38,3,429)
N431_AND(38,2,1,3,76)
N432_OR(430,431)
N433_AND(-39,4,432)
N434_AND(39,2,1,4,88)
N435_OR(433,434)
N436_AND(-40,5,435)
N437_AND(40,2,1,5,4,100)
N438_OR(436,437)
N439_AND(-41,6,438)
N440_AND(41,2,1,6,112)
N441_OR(439,440)
N442_AND(-42,7,441)
N443_AND(42,2,1,7,6,124)
N444_OR(442,443)
N445_AND(-43,8,444)
N446_AND(43,2,1,8,136)
N447_OR(445,446)
N448_AND(-44,9,447)
N449_AND(44,2,1,9,8,148)
N450_OR(448,449)
N451_AND(-45,10,450)
N452_AND(45,2,1,10,160)
N453_OR(451,452)
N454_AND(-46,11,453)
N455_AND(46,2,1,11,10,172)
N456_OR(454,455)
N457_AND(-47,12,456)
N458_AND(47,2,1,12,184)
N459_OR(457,458)
N460_AND(-48,13,459)
N461_AND(48,2,1,13,12,196)
N462_OR(460,461)
N463_AND(-49,14,462)
N464_AND(49,2,1,14,208)
N465_OR(463,464)
N466_AND(-50,15,465)
N467_AND(50,2,1,15,14,220)
N468_OR(466,467)
N469_AND(-51,16,468)
N470_AND(51,2,1,16,232)
N471_OR(469,470)
N472_AND(-52,17,471)
N473_AND(52,2,1,17,16,244)
N474_OR(472,473)
N475_AND(-53,18,474)
N476_AND(53,2,1,18,256)
N477_OR(475,476)
N478_AND(-54,19,477)
N479_AND(54,2,1,19,18,268)
N480_OR(478,479)
N481_AND(-55,20,480)
N482_AND(55,2,1,20,280)
N483_OR(481,482)
N484_AND(-56,21,483)
N485_AND(56,2,1,21,20,292)
N486_OR(484,485)
N487_AND(-57,22,486)
N488_AND(57,2,1,22,304)
N489_OR(487,488)
N490_AND(-58,23,489)
N491_AND(58,2,1,23,22,316)
N492_OR(490,491)
N493_AND(-59,24,492)
N494_AND(59,2,1,24,328)
N495_OR(493,494)
N496_AND(-60,25,495)
N497_AND(60,2,1,25,24,340)
N498_OR(496,497)
N499_AND(-61,26,498)
N500_AND(61,2,1,26,352)
N501_OR(499,500)
N502_AND(-62,27,501)
N503_AND(62,2,1,27,26,364)
N504_OR(502,503)
N505_AND(-63,28,504)
N506_AND(63,2,1,28,376)
N507_OR(505,506)
N508_AND(-64,29,507)
N509_AND(64,2,1,29,28,388)
N510_OR(508,509)
N511_AND(-65,30,510)
N512_AND(65,2,1,30,400)
N513_OR(511,512)
N514_AND(-66,31,513)
N515_AND(66,2,1,31,30,407)
N516_OR(514,515)
N517_AND(-67,32,516)
N518_AND(67,2,1,32,414)
N519_OR(517,518)
N520_AND(-68,33,519)
N521_AND(68,2,1,33,32,421)
N522_OR(520,521)
N523_AND(69,34,522)
N524_OR(425,523)
N525_AND(-35,524)
ROOT 525
c GEN: Time = 0.01.  Generated POG representation
c Justifying root literal 525
c GEN: Time = 0.01.  Deleted asserted clauses
c GEN: Time = 0.01.  Deleted input clauses
c 1411 lines written
c GEN: Formula
c GEN:    input variables: 69
c GEN:    input clauses  : 37
c GEN: POG nodes
c GEN:    product   : 304
c GEN:    sum       : 151
c GEN:    node TOTAL: 455
c GEN: Other nodes
c GEN:    aux product: 0
c GEN: Node visits
c GEN:    product/BCP: 0
c GEN:    product/SAT: 0
c GEN:    sum        : 0
c GEN:    visit TOTAL: 0
c GEN: Lemmas
c GEN:    definitions : 0
c GEN:    applications: 0
c GEN:    duplicates  : 0
c GEN:    merged args : 0
c GEN: SAT Problem Clause Counts (0 instances)
c GEN: Clauses
c GEN:    POG definition       : 1740
c GEN:    AUX definition       : 0
c GEN:    product justification: 0
c GEN:    sum justification    : 0
c GEN:    literal justification: 1
c GEN:    lemma application    : 0
c GEN:    monolithic proof     : 0
c GEN:    clause TOTAL         : 1741
c GEN: Time
c GEN:   SAT execution  : 0.00
c GEN:   other execution: 0.01
c GEN:   time TOTAL     : 0.01
GEN LOG: Elapsed time = 0.008 seconds
GEN OUTCOME: normal
GEN: LOG: size ./tree-exa2-35_low.cpog 495 lines 47450 bytes
FCHECK LOG: Running ../../src/cpog-check -v 5 -1 -S ./tree-exa2-35.sdimacs ./tree-exa2-35_low.cpog
FCHECK LOG: Time limit 2500 seconds
File ./tree-exa2-35.sdimacs. Line 1:Read token.  Token = 'p'.  Type = string
File ./tree-exa2-35.sdimacs. Line 1:Read token.  Token = 'cnf'.  Type = string
File ./tree-exa2-35.sdimacs. Line 1:Read token.  Token = '70'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 1:Read token.  Token = '37'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 2:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-35.sdimacs. Line 2:Read token.  Token = '-35'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 2:Starting clause 1
File ./tree-exa2-35.sdimacs. Line 2:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 2:Finished clause.  Full length 2.  Chunk ID 0.  Offset 0 1: -35
File ./tree-exa2-35.sdimacs. Line 3:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-35.sdimacs. Line 3:Read token.  Token = '35'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 3:Starting clause 2
File ./tree-exa2-35.sdimacs. Line 3:Read token.  Token = '69'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 3:Read token.  Token = '-34'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 3:Read token.  Token = '-68'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 3:Read token.  Token = '-33'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 3:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 3:Finished clause.  Full length 6.  Chunk ID 0.  Offset 2 2: 35 69 -34 -68 -33
File ./tree-exa2-35.sdimacs. Line 4:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-35.sdimacs. Line 4:Read token.  Token = '34'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 4:Starting clause 3
File ./tree-exa2-35.sdimacs. Line 4:Read token.  Token = '68'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 4:Read token.  Token = '-33'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 4:Read token.  Token = '-67'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 4:Read token.  Token = '-32'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 4:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 4:Finished clause.  Full length 6.  Chunk ID 0.  Offset 8 3: 34 68 -33 -67 -32
File ./tree-exa2-35.sdimacs. Line 5:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-35.sdimacs. Line 5:Read token.  Token = '33'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 5:Starting clause 4
File ./tree-exa2-35.sdimacs. Line 5:Read token.  Token = '67'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 5:Read token.  Token = '-32'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 5:Read token.  Token = '-66'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 5:Read token.  Token = '-31'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 5:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 5:Finished clause.  Full length 6.  Chunk ID 0.  Offset 14 4: 33 67 -32 -66 -31
File ./tree-exa2-35.sdimacs. Line 6:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-35.sdimacs. Line 6:Read token.  Token = '32'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 6:Starting clause 5
File ./tree-exa2-35.sdimacs. Line 6:Read token.  Token = '66'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 6:Read token.  Token = '-31'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 6:Read token.  Token = '-65'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 6:Read token.  Token = '-30'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 6:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 6:Finished clause.  Full length 6.  Chunk ID 0.  Offset 20 5: 32 66 -31 -65 -30
File ./tree-exa2-35.sdimacs. Line 7:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-35.sdimacs. Line 7:Read token.  Token = '31'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 7:Starting clause 6
File ./tree-exa2-35.sdimacs. Line 7:Read token.  Token = '65'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 7:Read token.  Token = '-30'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 7:Read token.  Token = '-64'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 7:Read token.  Token = '-29'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 7:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 7:Finished clause.  Full length 6.  Chunk ID 0.  Offset 26 6: 31 65 -30 -64 -29
File ./tree-exa2-35.sdimacs. Line 8:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-35.sdimacs. Line 8:Read token.  Token = '30'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 8:Starting clause 7
File ./tree-exa2-35.sdimacs. Line 8:Read token.  Token = '64'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 8:Read token.  Token = '-29'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 8:Read token.  Token = '-63'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 8:Read token.  Token = '-28'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 8:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 8:Finished clause.  Full length 6.  Chunk ID 0.  Offset 32 7: 30 64 -29 -63 -28
File ./tree-exa2-35.sdimacs. Line 9:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-35.sdimacs. Line 9:Read token.  Token = '29'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 9:Starting clause 8
File ./tree-exa2-35.sdimacs. Line 9:Read token.  Token = '63'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 9:Read token.  Token = '-28'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 9:Read token.  Token = '-62'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 9:Read token.  Token = '-27'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 9:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 9:Finished clause.  Full length 6.  Chunk ID 0.  Offset 38 8: 29 63 -28 -62 -27
File ./tree-exa2-35.sdimacs. Line 10:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-35.sdimacs. Line 10:Read token.  Token = '28'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 10:Starting clause 9
File ./tree-exa2-35.sdimacs. Line 10:Read token.  Token = '62'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 10:Read token.  Token = '-27'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 10:Read token.  Token = '-61'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 10:Read token.  Token = '-26'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 10:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 10:Finished clause.  Full length 6.  Chunk ID 0.  Offset 44 9: 28 62 -27 -61 -26
File ./tree-exa2-35.sdimacs. Line 11:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-35.sdimacs. Line 11:Read token.  Token = '27'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 11:Starting clause 10
File ./tree-exa2-35.sdimacs. Line 11:Read token.  Token = '61'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 11:Read token.  Token = '-26'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 11:Read token.  Token = '-60'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 11:Read token.  Token = '-25'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 11:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 11:Finished clause.  Full length 6.  Chunk ID 0.  Offset 50 10: 27 61 -26 -60 -25
File ./tree-exa2-35.sdimacs. Line 12:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-35.sdimacs. Line 12:Read token.  Token = '26'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 12:Starting clause 11
File ./tree-exa2-35.sdimacs. Line 12:Read token.  Token = '60'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 12:Read token.  Token = '-25'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 12:Read token.  Token = '-59'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 12:Read token.  Token = '-24'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 12:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 12:Finished clause.  Full length 6.  Chunk ID 0.  Offset 56 11: 26 60 -25 -59 -24
File ./tree-exa2-35.sdimacs. Line 13:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-35.sdimacs. Line 13:Read token.  Token = '25'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 13:Starting clause 12
File ./tree-exa2-35.sdimacs. Line 13:Read token.  Token = '59'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 13:Read token.  Token = '-24'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 13:Read token.  Token = '-58'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 13:Read token.  Token = '-23'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 13:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 13:Finished clause.  Full length 6.  Chunk ID 0.  Offset 62 12: 25 59 -24 -58 -23
File ./tree-exa2-35.sdimacs. Line 14:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-35.sdimacs. Line 14:Read token.  Token = '24'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 14:Starting clause 13
File ./tree-exa2-35.sdimacs. Line 14:Read token.  Token = '58'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 14:Read token.  Token = '-23'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 14:Read token.  Token = '-57'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 14:Read token.  Token = '-22'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 14:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 14:Finished clause.  Full length 6.  Chunk ID 0.  Offset 68 13: 24 58 -23 -57 -22
File ./tree-exa2-35.sdimacs. Line 15:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-35.sdimacs. Line 15:Read token.  Token = '23'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 15:Starting clause 14
File ./tree-exa2-35.sdimacs. Line 15:Read token.  Token = '57'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 15:Read token.  Token = '-22'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 15:Read token.  Token = '-56'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 15:Read token.  Token = '-21'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 15:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 15:Finished clause.  Full length 6.  Chunk ID 0.  Offset 74 14: 23 57 -22 -56 -21
File ./tree-exa2-35.sdimacs. Line 16:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-35.sdimacs. Line 16:Read token.  Token = '22'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 16:Starting clause 15
File ./tree-exa2-35.sdimacs. Line 16:Read token.  Token = '56'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 16:Read token.  Token = '-21'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 16:Read token.  Token = '-55'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 16:Read token.  Token = '-20'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 16:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 16:Finished clause.  Full length 6.  Chunk ID 0.  Offset 80 15: 22 56 -21 -55 -20
File ./tree-exa2-35.sdimacs. Line 17:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-35.sdimacs. Line 17:Read token.  Token = '21'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 17:Starting clause 16
File ./tree-exa2-35.sdimacs. Line 17:Read token.  Token = '55'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 17:Read token.  Token = '-20'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 17:Read token.  Token = '-54'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 17:Read token.  Token = '-19'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 17:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 17:Finished clause.  Full length 6.  Chunk ID 0.  Offset 86 16: 21 55 -20 -54 -19
File ./tree-exa2-35.sdimacs. Line 18:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-35.sdimacs. Line 18:Read token.  Token = '20'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 18:Starting clause 17
File ./tree-exa2-35.sdimacs. Line 18:Read token.  Token = '54'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 18:Read token.  Token = '-19'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 18:Read token.  Token = '-53'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 18:Read token.  Token = '-18'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 18:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 18:Finished clause.  Full length 6.  Chunk ID 0.  Offset 92 17: 20 54 -19 -53 -18
File ./tree-exa2-35.sdimacs. Line 19:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-35.sdimacs. Line 19:Read token.  Token = '19'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 19:Starting clause 18
File ./tree-exa2-35.sdimacs. Line 19:Read token.  Token = '53'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 19:Read token.  Token = '-18'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 19:Read token.  Token = '-52'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 19:Read token.  Token = '-17'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 19:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 19:Finished clause.  Full length 6.  Chunk ID 0.  Offset 98 18: 19 53 -18 -52 -17
File ./tree-exa2-35.sdimacs. Line 20:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-35.sdimacs. Line 20:Read token.  Token = '18'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 20:Starting clause 19
File ./tree-exa2-35.sdimacs. Line 20:Read token.  Token = '52'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 20:Read token.  Token = '-17'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 20:Read token.  Token = '-51'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 20:Read token.  Token = '-16'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 20:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 20:Finished clause.  Full length 6.  Chunk ID 0.  Offset 104 19: 18 52 -17 -51 -16
File ./tree-exa2-35.sdimacs. Line 21:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-35.sdimacs. Line 21:Read token.  Token = '17'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 21:Starting clause 20
File ./tree-exa2-35.sdimacs. Line 21:Read token.  Token = '51'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 21:Read token.  Token = '-16'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 21:Read token.  Token = '-50'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 21:Read token.  Token = '-15'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 21:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 21:Finished clause.  Full length 6.  Chunk ID 0.  Offset 110 20: 17 51 -16 -50 -15
File ./tree-exa2-35.sdimacs. Line 22:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-35.sdimacs. Line 22:Read token.  Token = '16'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 22:Starting clause 21
File ./tree-exa2-35.sdimacs. Line 22:Read token.  Token = '50'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 22:Read token.  Token = '-15'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 22:Read token.  Token = '-49'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 22:Read token.  Token = '-14'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 22:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 22:Finished clause.  Full length 6.  Chunk ID 0.  Offset 116 21: 16 50 -15 -49 -14
File ./tree-exa2-35.sdimacs. Line 23:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-35.sdimacs. Line 23:Read token.  Token = '15'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 23:Starting clause 22
File ./tree-exa2-35.sdimacs. Line 23:Read token.  Token = '49'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 23:Read token.  Token = '-14'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 23:Read token.  Token = '-48'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 23:Read token.  Token = '-13'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 23:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 23:Finished clause.  Full length 6.  Chunk ID 0.  Offset 122 22: 15 49 -14 -48 -13
File ./tree-exa2-35.sdimacs. Line 24:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-35.sdimacs. Line 24:Read token.  Token = '14'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 24:Starting clause 23
File ./tree-exa2-35.sdimacs. Line 24:Read token.  Token = '48'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 24:Read token.  Token = '-13'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 24:Read token.  Token = '-47'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 24:Read token.  Token = '-12'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 24:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 24:Finished clause.  Full length 6.  Chunk ID 0.  Offset 128 23: 14 48 -13 -47 -12
File ./tree-exa2-35.sdimacs. Line 25:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-35.sdimacs. Line 25:Read token.  Token = '13'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 25:Starting clause 24
File ./tree-exa2-35.sdimacs. Line 25:Read token.  Token = '47'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 25:Read token.  Token = '-12'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 25:Read token.  Token = '-46'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 25:Read token.  Token = '-11'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 25:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 25:Finished clause.  Full length 6.  Chunk ID 0.  Offset 134 24: 13 47 -12 -46 -11
File ./tree-exa2-35.sdimacs. Line 26:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-35.sdimacs. Line 26:Read token.  Token = '12'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 26:Starting clause 25
File ./tree-exa2-35.sdimacs. Line 26:Read token.  Token = '46'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 26:Read token.  Token = '-11'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 26:Read token.  Token = '-45'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 26:Read token.  Token = '-10'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 26:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 26:Finished clause.  Full length 6.  Chunk ID 0.  Offset 140 25: 12 46 -11 -45 -10
File ./tree-exa2-35.sdimacs. Line 27:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-35.sdimacs. Line 27:Read token.  Token = '11'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 27:Starting clause 26
File ./tree-exa2-35.sdimacs. Line 27:Read token.  Token = '45'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 27:Read token.  Token = '-10'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 27:Read token.  Token = '-44'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 27:Read token.  Token = '-9'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 27:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 27:Finished clause.  Full length 6.  Chunk ID 0.  Offset 146 26: 11 45 -10 -44 -9
File ./tree-exa2-35.sdimacs. Line 28:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-35.sdimacs. Line 28:Read token.  Token = '10'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 28:Starting clause 27
File ./tree-exa2-35.sdimacs. Line 28:Read token.  Token = '44'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 28:Read token.  Token = '-9'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 28:Read token.  Token = '-43'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 28:Read token.  Token = '-8'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 28:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 28:Finished clause.  Full length 6.  Chunk ID 0.  Offset 152 27: 10 44 -9 -43 -8
File ./tree-exa2-35.sdimacs. Line 29:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-35.sdimacs. Line 29:Read token.  Token = '9'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 29:Starting clause 28
File ./tree-exa2-35.sdimacs. Line 29:Read token.  Token = '43'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 29:Read token.  Token = '-8'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 29:Read token.  Token = '-42'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 29:Read token.  Token = '-7'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 29:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 29:Finished clause.  Full length 6.  Chunk ID 0.  Offset 158 28: 9 43 -8 -42 -7
File ./tree-exa2-35.sdimacs. Line 30:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-35.sdimacs. Line 30:Read token.  Token = '8'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 30:Starting clause 29
File ./tree-exa2-35.sdimacs. Line 30:Read token.  Token = '42'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 30:Read token.  Token = '-7'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 30:Read token.  Token = '-41'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 30:Read token.  Token = '-6'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 30:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 30:Finished clause.  Full length 6.  Chunk ID 0.  Offset 164 29: 8 42 -7 -41 -6
File ./tree-exa2-35.sdimacs. Line 31:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-35.sdimacs. Line 31:Read token.  Token = '7'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 31:Starting clause 30
File ./tree-exa2-35.sdimacs. Line 31:Read token.  Token = '41'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 31:Read token.  Token = '-6'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 31:Read token.  Token = '-40'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 31:Read token.  Token = '-5'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 31:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 31:Finished clause.  Full length 6.  Chunk ID 0.  Offset 170 30: 7 41 -6 -40 -5
File ./tree-exa2-35.sdimacs. Line 32:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-35.sdimacs. Line 32:Read token.  Token = '6'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 32:Starting clause 31
File ./tree-exa2-35.sdimacs. Line 32:Read token.  Token = '40'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 32:Read token.  Token = '-5'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 32:Read token.  Token = '-39'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 32:Read token.  Token = '-4'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 32:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 32:Finished clause.  Full length 6.  Chunk ID 0.  Offset 176 31: 6 40 -5 -39 -4
File ./tree-exa2-35.sdimacs. Line 33:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-35.sdimacs. Line 33:Read token.  Token = '5'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 33:Starting clause 32
File ./tree-exa2-35.sdimacs. Line 33:Read token.  Token = '39'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 33:Read token.  Token = '-4'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 33:Read token.  Token = '-38'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 33:Read token.  Token = '-3'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 33:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 33:Finished clause.  Full length 6.  Chunk ID 0.  Offset 182 32: 5 39 -4 -38 -3
File ./tree-exa2-35.sdimacs. Line 34:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-35.sdimacs. Line 34:Read token.  Token = '4'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 34:Starting clause 33
File ./tree-exa2-35.sdimacs. Line 34:Read token.  Token = '38'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 34:Read token.  Token = '-3'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 34:Read token.  Token = '-37'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 34:Read token.  Token = '-2'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 34:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 34:Finished clause.  Full length 6.  Chunk ID 0.  Offset 188 33: 4 38 -3 -37 -2
File ./tree-exa2-35.sdimacs. Line 35:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-35.sdimacs. Line 35:Read token.  Token = '3'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 35:Starting clause 34
File ./tree-exa2-35.sdimacs. Line 35:Read token.  Token = '37'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 35:Read token.  Token = '-2'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 35:Read token.  Token = '-36'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 35:Read token.  Token = '-1'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 35:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 35:Finished clause.  Full length 6.  Chunk ID 0.  Offset 194 34: 3 37 -2 -36 -1
File ./tree-exa2-35.sdimacs. Line 36:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-35.sdimacs. Line 36:Read token.  Token = '2'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 36:Starting clause 35
File ./tree-exa2-35.sdimacs. Line 36:Read token.  Token = '1'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 36:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 36:Finished clause.  Full length 3.  Chunk ID 0.  Offset 200 35: 2 1
File ./tree-exa2-35.sdimacs. Line 37:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-35.sdimacs. Line 37:Read token.  Token = '2'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 37:Starting clause 36
File ./tree-exa2-35.sdimacs. Line 37:Read token.  Token = '-1'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 37:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 37:Finished clause.  Full length 3.  Chunk ID 0.  Offset 203 36: 2 -1
File ./tree-exa2-35.sdimacs. Line 38:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-35.sdimacs. Line 38:Read token.  Token = '-2'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 38:Starting clause 37
File ./tree-exa2-35.sdimacs. Line 38:Read token.  Token = '1'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 38:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-35.sdimacs. Line 38:Finished clause.  Full length 3.  Chunk ID 0.  Offset 206 37: -2 1
File ./tree-exa2-35.sdimacs. Line 39:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-35.sdimacs. Line 39:Read token.  Token = ''.  Type = EOF
CHECK: Read CNF file with 70 variables and 37 clauses
CNF File.  37 clauses
1: -35
2: 35 69 -34 -68 -33
3: 34 68 -33 -67 -32
4: 33 67 -32 -66 -31
5: 32 66 -31 -65 -30
6: 31 65 -30 -64 -29
7: 30 64 -29 -63 -28
8: 29 63 -28 -62 -27
9: 28 62 -27 -61 -26
10: 27 61 -26 -60 -25
11: 26 60 -25 -59 -24
12: 25 59 -24 -58 -23
13: 24 58 -23 -57 -22
14: 23 57 -22 -56 -21
15: 22 56 -21 -55 -20
16: 21 55 -20 -54 -19
17: 20 54 -19 -53 -18
18: 19 53 -18 -52 -17
19: 18 52 -17 -51 -16
20: 17 51 -16 -50 -15
21: 16 50 -15 -49 -14
22: 15 49 -14 -48 -13
23: 14 48 -13 -47 -12
24: 13 47 -12 -46 -11
25: 12 46 -11 -45 -10
26: 11 45 -10 -44 -9
27: 10 44 -9 -43 -8
28: 9 43 -8 -42 -7
29: 8 42 -7 -41 -6
30: 7 41 -6 -40 -5
31: 6 40 -5 -39 -4
32: 5 39 -4 -38 -3
33: 4 38 -3 -37 -2
34: 3 37 -2 -36 -1
35: 2 1
36: 2 -1
37: -2 1
File ./tree-exa2-35_low.cpog. Line 1:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-35_low.cpog. Line 2:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-35_low.cpog. Line 3:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-35_low.cpog. Line 4:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-35_low.cpog. Line 5:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-35_low.cpog. Line 6:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-35_low.cpog. Line 7:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-35_low.cpog. Line 8:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-35_low.cpog. Line 9:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-35_low.cpog. Line 10:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-35_low.cpog. Line 11:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-35_low.cpog. Line 12:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-35_low.cpog. Line 13:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-35_low.cpog. Line 14:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-35_low.cpog. Line 15:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-35_low.cpog. Line 16:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-35_low.cpog. Line 17:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-35_low.cpog. Line 18:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-35_low.cpog. Line 19:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-35_low.cpog. Line 20:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-35_low.cpog. Line 21:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-35_low.cpog. Line 22:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-35_low.cpog. Line 23:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-35_low.cpog. Line 24:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-35_low.cpog. Line 25:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-35_low.cpog. Line 26:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-35_low.cpog. Line 27:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-35_low.cpog. Line 28:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-35_low.cpog. Line 29:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-35_low.cpog. Line 30:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-35_low.cpog. Line 31:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-35_low.cpog. Line 32:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-35_low.cpog. Line 33:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-35_low.cpog. Line 34:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-35_low.cpog. Line 35:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-35_low.cpog. Line 36:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-35_low.cpog. Line 37:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-35_low.cpog. Line 38:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-35_low.cpog. Line 39:Read token.  Token = 'r'.  Type = string
File ./tree-exa2-35_low.cpog. Line 39:Read token.  Token = '525'.  Type = integer
File ./tree-exa2-35_low.cpog. Line 39:Root literal declared as 525
File ./tree-exa2-35_low.cpog. Line 40:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-35_low.cpog. Line 40:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-35_low.cpog. Line 41:Read token.  Token = '38'.  Type = integer
File ./tree-exa2-35_low.cpog. Line 41:Read token.  Token = 'p'.  Type = string
File ./tree-exa2-35_low.cpog. Line 41:Read token.  Token = '70'.  Type = integer
ERROR. File ./tree-exa2-35_low.cpog. Line 41. Function node_new. Invalid operation id 70
FCHECK ERROR: Return code = 1
FCHECK LOG: Elapsed time = 0.000 seconds
FCHECK OUTCOME: failed
OVERALL LOG: Elapsed time = 0.013 seconds
OVERALL OUTCOME: failed
