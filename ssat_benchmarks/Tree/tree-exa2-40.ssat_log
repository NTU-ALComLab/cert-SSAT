SSAT LOG: Running ../../tools/SharpSSAT -l -p -s ./tree-exa2-40.sdimacs
SSAT LOG: Time limit 1000 seconds
Solving ./tree-exa2-40.sdimacs
variables (all/used/free): 	80/80/0
clauses (all/long/binary/unit): 42/38/3/1

Preprocessing .. DONE
variables (all/used/free): 	80/80/0
clauses (all/long/binary/unit): 41/38/3/0
Maximum cache size:	100381 MB

End of Solving
Start Generating Certificate...


variables (total / active / free)	80/80/0
clauses (removed) 			42 (0)
decisions 				171
conflicts 				1
conflict clauses (all/bin/unit) 	0/0/1

cache size 7MB	
cache (stores / hits) 			172/150
cache miss rate 0%
avg. variable count (stores / hits) 	36.936/31.3533

number of nodes in trace 	177
number of edges in trace 	343

# satisfying probability = 1

# END

time: 0.001935s

upper trace written to ./tree-exa2-40_up.nnf
lower trace written to ./tree-exa2-40_low.nnf
maximum satisfying probability written to ./tree-exa2-40.prob
SSAT LOG: Elapsed time = 0.003 seconds
SSAT OUTCOME: normal
EVAL LOG: Running ../../src/evalSSAT ./tree-exa2-40.sdimacs ./tree-exa2-40_up.nnf ./tree-exa2-40_low.nnf ./tree-exa2-40.prob
EVAL LOG: Time limit 1000 seconds
c Read D4 NNF file with 517 nodes (174 explicit) and 343 edges
c Read D4 NNF file with 517 nodes (174 explicit) and 343 edges
EVAL LOG: Elapsed time = 0.001 seconds
EVAL OUTCOME: normal
GEN LOG: Running ../../src/cpog-gen -v 5 -1 -S -C 2147483647 -L d2p.log ./tree-exa2-40.sdimacs ./tree-exa2-40_low.nnf ./tree-exa2-40_low.cpog
GEN LOG: Time limit 2500 seconds
c GEN: Program options
c GEN:   Multi-literal:   yes
c GEN:   Use lemmas:      yes
c GEN:   Delete files:    yes
c GEN:   One-sided:       yes
c GEN:   Monolithic mode: no
c GEN:   DRAT threshold:  1000
c GEN:   Clause limit:    2147483647
c GEN:   BCP limit:       1
c GEN: Time = 0.00.  Read input file with 79 variables and 42 clauses
c Unit literal -40 justified by input clause #1
c BCP Pass 1.  Active clauses:c  2c  3c  4c  5c  6c  7c  8c  9c  10c  11c  12c  13c  14c  15c  16c  17c  18c  19c  20c  21c  22c  23c  24c  25c  26c  27c  28c  29c  30c  31c  32c  33c  34c  35c  36c  37c  38c  39c  40c  41c  42c 
c   Checking clause #2: -38 -39 40 -78 79 0
c   Unit literals:c  -40c 
c     Potential unit -38
c     Additional unassigned literal -39
c     Still active
c   Checking clause #3: -37 -38 39 -77 78 0
c   Unit literals:c  -40c 
c     Potential unit -37
c     Additional unassigned literal -38
c     Still active
c   Checking clause #4: -36 -37 38 -76 77 0
c   Unit literals:c  -40c 
c     Potential unit -36
c     Additional unassigned literal -37
c     Still active
c   Checking clause #5: -35 -36 37 -75 76 0
c   Unit literals:c  -40c 
c     Potential unit -35
c     Additional unassigned literal -36
c     Still active
c   Checking clause #6: -34 -35 36 -74 75 0
c   Unit literals:c  -40c 
c     Potential unit -34
c     Additional unassigned literal -35
c     Still active
c   Checking clause #7: -33 -34 35 -73 74 0
c   Unit literals:c  -40c 
c     Potential unit -33
c     Additional unassigned literal -34
c     Still active
c   Checking clause #8: -32 -33 34 -72 73 0
c   Unit literals:c  -40c 
c     Potential unit -32
c     Additional unassigned literal -33
c     Still active
c   Checking clause #9: -31 -32 33 -71 72 0
c   Unit literals:c  -40c 
c     Potential unit -31
c     Additional unassigned literal -32
c     Still active
c   Checking clause #10: -30 -31 32 -70 71 0
c   Unit literals:c  -40c 
c     Potential unit -30
c     Additional unassigned literal -31
c     Still active
c   Checking clause #11: -29 -30 31 -69 70 0
c   Unit literals:c  -40c 
c     Potential unit -29
c     Additional unassigned literal -30
c     Still active
c   Checking clause #12: -28 -29 30 -68 69 0
c   Unit literals:c  -40c 
c     Potential unit -28
c     Additional unassigned literal -29
c     Still active
c   Checking clause #13: -27 -28 29 -67 68 0
c   Unit literals:c  -40c 
c     Potential unit -27
c     Additional unassigned literal -28
c     Still active
c   Checking clause #14: -26 -27 28 -66 67 0
c   Unit literals:c  -40c 
c     Potential unit -26
c     Additional unassigned literal -27
c     Still active
c   Checking clause #15: -25 -26 27 -65 66 0
c   Unit literals:c  -40c 
c     Potential unit -25
c     Additional unassigned literal -26
c     Still active
c   Checking clause #16: -24 -25 26 -64 65 0
c   Unit literals:c  -40c 
c     Potential unit -24
c     Additional unassigned literal -25
c     Still active
c   Checking clause #17: -23 -24 25 -63 64 0
c   Unit literals:c  -40c 
c     Potential unit -23
c     Additional unassigned literal -24
c     Still active
c   Checking clause #18: -22 -23 24 -62 63 0
c   Unit literals:c  -40c 
c     Potential unit -22
c     Additional unassigned literal -23
c     Still active
c   Checking clause #19: -21 -22 23 -61 62 0
c   Unit literals:c  -40c 
c     Potential unit -21
c     Additional unassigned literal -22
c     Still active
c   Checking clause #20: -20 -21 22 -60 61 0
c   Unit literals:c  -40c 
c     Potential unit -20
c     Additional unassigned literal -21
c     Still active
c   Checking clause #21: -19 -20 21 -59 60 0
c   Unit literals:c  -40c 
c     Potential unit -19
c     Additional unassigned literal -20
c     Still active
c   Checking clause #22: -18 -19 20 -58 59 0
c   Unit literals:c  -40c 
c     Potential unit -18
c     Additional unassigned literal -19
c     Still active
c   Checking clause #23: -17 -18 19 -57 58 0
c   Unit literals:c  -40c 
c     Potential unit -17
c     Additional unassigned literal -18
c     Still active
c   Checking clause #24: -16 -17 18 -56 57 0
c   Unit literals:c  -40c 
c     Potential unit -16
c     Additional unassigned literal -17
c     Still active
c   Checking clause #25: -15 -16 17 -55 56 0
c   Unit literals:c  -40c 
c     Potential unit -15
c     Additional unassigned literal -16
c     Still active
c   Checking clause #26: -14 -15 16 -54 55 0
c   Unit literals:c  -40c 
c     Potential unit -14
c     Additional unassigned literal -15
c     Still active
c   Checking clause #27: -13 -14 15 -53 54 0
c   Unit literals:c  -40c 
c     Potential unit -13
c     Additional unassigned literal -14
c     Still active
c   Checking clause #28: -12 -13 14 -52 53 0
c   Unit literals:c  -40c 
c     Potential unit -12
c     Additional unassigned literal -13
c     Still active
c   Checking clause #29: -11 -12 13 -51 52 0
c   Unit literals:c  -40c 
c     Potential unit -11
c     Additional unassigned literal -12
c     Still active
c   Checking clause #30: -10 -11 12 -50 51 0
c   Unit literals:c  -40c 
c     Potential unit -10
c     Additional unassigned literal -11
c     Still active
c   Checking clause #31: -9 -10 11 -49 50 0
c   Unit literals:c  -40c 
c     Potential unit -9
c     Additional unassigned literal -10
c     Still active
c   Checking clause #32: -8 -9 10 -48 49 0
c   Unit literals:c  -40c 
c     Potential unit -8
c     Additional unassigned literal -9
c     Still active
c   Checking clause #33: -7 -8 9 -47 48 0
c   Unit literals:c  -40c 
c     Potential unit -7
c     Additional unassigned literal -8
c     Still active
c   Checking clause #34: -6 -7 8 -46 47 0
c   Unit literals:c  -40c 
c     Potential unit -6
c     Additional unassigned literal -7
c     Still active
c   Checking clause #35: -5 -6 7 -45 46 0
c   Unit literals:c  -40c 
c     Potential unit -5
c     Additional unassigned literal -6
c     Still active
c   Checking clause #36: -4 -5 6 -44 45 0
c   Unit literals:c  -40c 
c     Potential unit -4
c     Additional unassigned literal -5
c     Still active
c   Checking clause #37: -3 -4 5 -43 44 0
c   Unit literals:c  -40c 
c     Potential unit -3
c     Additional unassigned literal -4
c     Still active
c   Checking clause #38: -2 -3 4 -42 43 0
c   Unit literals:c  -40c 
c     Potential unit -2
c     Additional unassigned literal -3
c     Still active
c   Checking clause #39: -1 -2 3 -41 42 0
c   Unit literals:c  -40c 
c     Potential unit -1
c     Additional unassigned literal -2
c     Still active
c   Checking clause #40: 1 2 0
c   Unit literals:c  -40c 
c     Potential unit 1
c     Additional unassigned literal 2
c     Still active
c   Checking clause #41: -1 2 0
c   Unit literals:c  -40c 
c     Potential unit -1
c     Additional unassigned literal 2
c     Still active
c   Checking clause #42: 1 -2 0
c   Unit literals:c  -40c 
c     Potential unit 1
c     Additional unassigned literal -2
c     Still active
c Line #1.  Created POG node FALSE number 80 from NNF node 1
c Line #2.  Created POG node TRUE number 81 from NNF node 2
c Line #3.  Created POG node OR number 82 from NNF node 3
c Line #4.  Created POG node OR number 83 from NNF node 4
c Line #5.  Created POG node OR number 84 from NNF node 5
c Line #6.  Created POG node OR number 85 from NNF node 6
c Line #7.  Created POG node OR number 86 from NNF node 7
c Line #8.  Created POG node OR number 87 from NNF node 8
c Line #9.  Created POG node OR number 88 from NNF node 9
c Line #10.  Created POG node OR number 89 from NNF node 10
c Line #11.  Created POG node OR number 90 from NNF node 11
c Line #12.  Created POG node OR number 91 from NNF node 12
c Line #13.  Created POG node OR number 92 from NNF node 13
c Line #14.  Created POG node OR number 93 from NNF node 14
c Line #15.  Created POG node OR number 94 from NNF node 15
c Line #16.  Created POG node OR number 95 from NNF node 16
c Line #17.  Created POG node OR number 96 from NNF node 17
c Line #18.  Created POG node OR number 97 from NNF node 18
c Line #19.  Created POG node OR number 98 from NNF node 19
c Line #20.  Created POG node OR number 99 from NNF node 20
c Line #21.  Created POG node OR number 100 from NNF node 21
c Line #22.  Created POG node OR number 101 from NNF node 22
c Line #23.  Created POG node OR number 102 from NNF node 23
c Line #24.  Created POG node OR number 103 from NNF node 24
c Line #25.  Created POG node OR number 104 from NNF node 25
c Line #26.  Created POG node OR number 105 from NNF node 26
c Line #27.  Created POG node OR number 106 from NNF node 27
c Line #28.  Created POG node OR number 107 from NNF node 28
c Line #29.  Created POG node OR number 108 from NNF node 29
c Line #30.  Created POG node OR number 109 from NNF node 30
c Line #31.  Created POG node OR number 110 from NNF node 31
c Line #32.  Created POG node OR number 111 from NNF node 32
c Line #33.  Created POG node OR number 112 from NNF node 33
c Line #34.  Created POG node OR number 113 from NNF node 34
c Line #35.  Created POG node OR number 114 from NNF node 35
c Line #36.  Created POG node OR number 115 from NNF node 36
c Line #37.  Created POG node OR number 116 from NNF node 37
c Line #38.  Created POG node OR number 117 from NNF node 38
c Line #39.  Created POG node OR number 118 from NNF node 39
c Line #40.  Created POG node OR number 119 from NNF node 40
c Line #41.  Created POG node OR number 120 from NNF node 41
c Line #42.  Created POG node OR number 121 from NNF node 42
c Line #43.  Created POG node OR number 122 from NNF node 43
c Line #44.  Created POG node OR number 123 from NNF node 44
c Line #45.  Created POG node OR number 124 from NNF node 45
c Line #46.  Created POG node OR number 125 from NNF node 46
c Line #47.  Created POG node OR number 126 from NNF node 47
c Line #48.  Created POG node OR number 127 from NNF node 48
c Line #49.  Created POG node OR number 128 from NNF node 49
c Line #50.  Created POG node OR number 129 from NNF node 50
c Line #51.  Created POG node OR number 130 from NNF node 51
c Line #52.  Created POG node OR number 131 from NNF node 52
c Line #53.  Created POG node OR number 132 from NNF node 53
c Line #54.  Created POG node OR number 133 from NNF node 54
c Line #55.  Created POG node OR number 134 from NNF node 55
c Line #56.  Created POG node OR number 135 from NNF node 56
c Line #57.  Created POG node OR number 136 from NNF node 57
c Line #58.  Created POG node OR number 137 from NNF node 58
c Line #59.  Created POG node OR number 138 from NNF node 59
c Line #60.  Created POG node OR number 139 from NNF node 60
c Line #61.  Created POG node OR number 140 from NNF node 61
c Line #62.  Created POG node OR number 141 from NNF node 62
c Line #63.  Created POG node OR number 142 from NNF node 63
c Line #64.  Created POG node OR number 143 from NNF node 64
c Line #65.  Created POG node OR number 144 from NNF node 65
c Line #66.  Created POG node OR number 145 from NNF node 66
c Line #67.  Created POG node OR number 146 from NNF node 67
c Line #68.  Created POG node OR number 147 from NNF node 68
c Line #69.  Created POG node OR number 148 from NNF node 69
c Line #70.  Created POG node OR number 149 from NNF node 70
c Line #71.  Created POG node OR number 150 from NNF node 71
c Line #72.  Created POG node OR number 151 from NNF node 72
c Line #73.  Created POG node OR number 152 from NNF node 73
c Line #74.  Created POG node OR number 153 from NNF node 74
c Line #75.  Created POG node OR number 154 from NNF node 75
c Line #76.  Created POG node OR number 155 from NNF node 76
c Line #77.  Created POG node OR number 156 from NNF node 77
c Line #78.  Created POG node OR number 157 from NNF node 78
c Line #79. Created POG AND Node 158 to hold literals between NNF nodes 78 and 2
c Line #79.  Adding edge between POG nodes 157 and 158
c Line #80. Created POG AND Node 159 to hold literals between NNF nodes 78 and 2
c Line #80.  Adding edge between POG nodes 157 and 159
c Line #81. Created POG AND Node 160 to hold literals between NNF nodes 77 and 78
c Line #81.  Adding edge between POG nodes 156 and 160
c Line #82. Created POG AND Node 161 to hold literals between NNF nodes 77 and 2
c Line #82.  Adding edge between POG nodes 156 and 161
c Line #83. Created POG AND Node 162 to hold literals between NNF nodes 76 and 77
c Line #83.  Adding edge between POG nodes 155 and 162
c Line #84.  Created POG node OR number 163 from NNF node 79
c Line #85. Created POG AND Node 164 to hold literals between NNF nodes 79 and 2
c Line #85.  Adding edge between POG nodes 163 and 164
c Line #86. Created POG AND Node 165 to hold literals between NNF nodes 79 and 2
c Line #86.  Adding edge between POG nodes 163 and 165
c Line #87. Created POG AND Node 166 to hold literals between NNF nodes 76 and 79
c Line #87.  Adding edge between POG nodes 155 and 166
c Line #88. Created POG AND Node 167 to hold literals between NNF nodes 75 and 76
c Line #88.  Adding edge between POG nodes 154 and 167
c Line #89.  Created POG node OR number 168 from NNF node 80
c Line #90. Created POG AND Node 169 to hold literals between NNF nodes 80 and 79
c Line #90.  Adding edge between POG nodes 168 and 169
c Line #91. Created POG AND Node 170 to hold literals between NNF nodes 80 and 78
c Line #91.  Adding edge between POG nodes 168 and 170
c Line #92. Created POG AND Node 171 to hold literals between NNF nodes 75 and 80
c Line #92.  Adding edge between POG nodes 154 and 171
c Line #93. Created POG AND Node 172 to hold literals between NNF nodes 74 and 75
c Line #93.  Adding edge between POG nodes 153 and 172
c Line #94.  Created POG node OR number 173 from NNF node 81
c Line #95. Created POG AND Node 174 to hold literals between NNF nodes 81 and 79
c Line #95.  Adding edge between POG nodes 173 and 174
c Line #96. Created POG AND Node 175 to hold literals between NNF nodes 81 and 79
c Line #96.  Adding edge between POG nodes 173 and 175
c Line #97. Created POG AND Node 176 to hold literals between NNF nodes 74 and 81
c Line #97.  Adding edge between POG nodes 153 and 176
c Line #98. Created POG AND Node 177 to hold literals between NNF nodes 73 and 74
c Line #98.  Adding edge between POG nodes 152 and 177
c Line #99.  Created POG node OR number 178 from NNF node 82
c Line #100. Created POG AND Node 179 to hold literals between NNF nodes 82 and 81
c Line #100.  Adding edge between POG nodes 178 and 179
c Line #101. Created POG AND Node 180 to hold literals between NNF nodes 82 and 76
c Line #101.  Adding edge between POG nodes 178 and 180
c Line #102. Created POG AND Node 181 to hold literals between NNF nodes 73 and 82
c Line #102.  Adding edge between POG nodes 152 and 181
c Line #103. Created POG AND Node 182 to hold literals between NNF nodes 72 and 73
c Line #103.  Adding edge between POG nodes 151 and 182
c Line #104.  Created POG node OR number 183 from NNF node 83
c Line #105. Created POG AND Node 184 to hold literals between NNF nodes 83 and 79
c Line #105.  Adding edge between POG nodes 183 and 184
c Line #106. Created POG AND Node 185 to hold literals between NNF nodes 83 and 79
c Line #106.  Adding edge between POG nodes 183 and 185
c Line #107. Created POG AND Node 186 to hold literals between NNF nodes 72 and 83
c Line #107.  Adding edge between POG nodes 151 and 186
c Line #108. Created POG AND Node 187 to hold literals between NNF nodes 71 and 72
c Line #108.  Adding edge between POG nodes 150 and 187
c Line #109.  Created POG node OR number 188 from NNF node 84
c Line #110. Created POG AND Node 189 to hold literals between NNF nodes 84 and 83
c Line #110.  Adding edge between POG nodes 188 and 189
c Line #111. Created POG AND Node 190 to hold literals between NNF nodes 84 and 74
c Line #111.  Adding edge between POG nodes 188 and 190
c Line #112. Created POG AND Node 191 to hold literals between NNF nodes 71 and 84
c Line #112.  Adding edge between POG nodes 150 and 191
c Line #113. Created POG AND Node 192 to hold literals between NNF nodes 70 and 71
c Line #113.  Adding edge between POG nodes 149 and 192
c Line #114.  Created POG node OR number 193 from NNF node 85
c Line #115. Created POG AND Node 194 to hold literals between NNF nodes 85 and 83
c Line #115.  Adding edge between POG nodes 193 and 194
c Line #116. Created POG AND Node 195 to hold literals between NNF nodes 85 and 83
c Line #116.  Adding edge between POG nodes 193 and 195
c Line #117. Created POG AND Node 196 to hold literals between NNF nodes 70 and 85
c Line #117.  Adding edge between POG nodes 149 and 196
c Line #118. Created POG AND Node 197 to hold literals between NNF nodes 69 and 70
c Line #118.  Adding edge between POG nodes 148 and 197
c Line #119.  Created POG node OR number 198 from NNF node 86
c Line #120. Created POG AND Node 199 to hold literals between NNF nodes 86 and 85
c Line #120.  Adding edge between POG nodes 198 and 199
c Line #121. Created POG AND Node 200 to hold literals between NNF nodes 86 and 72
c Line #121.  Adding edge between POG nodes 198 and 200
c Line #122. Created POG AND Node 201 to hold literals between NNF nodes 69 and 86
c Line #122.  Adding edge between POG nodes 148 and 201
c Line #123. Created POG AND Node 202 to hold literals between NNF nodes 68 and 69
c Line #123.  Adding edge between POG nodes 147 and 202
c Line #124.  Created POG node OR number 203 from NNF node 87
c Line #125. Created POG AND Node 204 to hold literals between NNF nodes 87 and 83
c Line #125.  Adding edge between POG nodes 203 and 204
c Line #126. Created POG AND Node 205 to hold literals between NNF nodes 87 and 83
c Line #126.  Adding edge between POG nodes 203 and 205
c Line #127. Created POG AND Node 206 to hold literals between NNF nodes 68 and 87
c Line #127.  Adding edge between POG nodes 147 and 206
c Line #128. Created POG AND Node 207 to hold literals between NNF nodes 67 and 68
c Line #128.  Adding edge between POG nodes 146 and 207
c Line #129.  Created POG node OR number 208 from NNF node 88
c Line #130. Created POG AND Node 209 to hold literals between NNF nodes 88 and 87
c Line #130.  Adding edge between POG nodes 208 and 209
c Line #131. Created POG AND Node 210 to hold literals between NNF nodes 88 and 70
c Line #131.  Adding edge between POG nodes 208 and 210
c Line #132. Created POG AND Node 211 to hold literals between NNF nodes 67 and 88
c Line #132.  Adding edge between POG nodes 146 and 211
c Line #133. Created POG AND Node 212 to hold literals between NNF nodes 66 and 67
c Line #133.  Adding edge between POG nodes 145 and 212
c Line #134.  Created POG node OR number 213 from NNF node 89
c Line #135. Created POG AND Node 214 to hold literals between NNF nodes 89 and 87
c Line #135.  Adding edge between POG nodes 213 and 214
c Line #136. Created POG AND Node 215 to hold literals between NNF nodes 89 and 87
c Line #136.  Adding edge between POG nodes 213 and 215
c Line #137. Created POG AND Node 216 to hold literals between NNF nodes 66 and 89
c Line #137.  Adding edge between POG nodes 145 and 216
c Line #138. Created POG AND Node 217 to hold literals between NNF nodes 65 and 66
c Line #138.  Adding edge between POG nodes 144 and 217
c Line #139.  Created POG node OR number 218 from NNF node 90
c Line #140. Created POG AND Node 219 to hold literals between NNF nodes 90 and 89
c Line #140.  Adding edge between POG nodes 218 and 219
c Line #141. Created POG AND Node 220 to hold literals between NNF nodes 90 and 68
c Line #141.  Adding edge between POG nodes 218 and 220
c Line #142. Created POG AND Node 221 to hold literals between NNF nodes 65 and 90
c Line #142.  Adding edge between POG nodes 144 and 221
c Line #143. Created POG AND Node 222 to hold literals between NNF nodes 64 and 65
c Line #143.  Adding edge between POG nodes 143 and 222
c Line #144.  Created POG node OR number 223 from NNF node 91
c Line #145. Created POG AND Node 224 to hold literals between NNF nodes 91 and 87
c Line #145.  Adding edge between POG nodes 223 and 224
c Line #146. Created POG AND Node 225 to hold literals between NNF nodes 91 and 87
c Line #146.  Adding edge between POG nodes 223 and 225
c Line #147. Created POG AND Node 226 to hold literals between NNF nodes 64 and 91
c Line #147.  Adding edge between POG nodes 143 and 226
c Line #148. Created POG AND Node 227 to hold literals between NNF nodes 63 and 64
c Line #148.  Adding edge between POG nodes 142 and 227
c Line #149.  Created POG node OR number 228 from NNF node 92
c Line #150. Created POG AND Node 229 to hold literals between NNF nodes 92 and 91
c Line #150.  Adding edge between POG nodes 228 and 229
c Line #151. Created POG AND Node 230 to hold literals between NNF nodes 92 and 66
c Line #151.  Adding edge between POG nodes 228 and 230
c Line #152. Created POG AND Node 231 to hold literals between NNF nodes 63 and 92
c Line #152.  Adding edge between POG nodes 142 and 231
c Line #153. Created POG AND Node 232 to hold literals between NNF nodes 62 and 63
c Line #153.  Adding edge between POG nodes 141 and 232
c Line #154.  Created POG node OR number 233 from NNF node 93
c Line #155. Created POG AND Node 234 to hold literals between NNF nodes 93 and 91
c Line #155.  Adding edge between POG nodes 233 and 234
c Line #156. Created POG AND Node 235 to hold literals between NNF nodes 93 and 91
c Line #156.  Adding edge between POG nodes 233 and 235
c Line #157. Created POG AND Node 236 to hold literals between NNF nodes 62 and 93
c Line #157.  Adding edge between POG nodes 141 and 236
c Line #158. Created POG AND Node 237 to hold literals between NNF nodes 61 and 62
c Line #158.  Adding edge between POG nodes 140 and 237
c Line #159.  Created POG node OR number 238 from NNF node 94
c Line #160. Created POG AND Node 239 to hold literals between NNF nodes 94 and 93
c Line #160.  Adding edge between POG nodes 238 and 239
c Line #161. Created POG AND Node 240 to hold literals between NNF nodes 94 and 64
c Line #161.  Adding edge between POG nodes 238 and 240
c Line #162. Created POG AND Node 241 to hold literals between NNF nodes 61 and 94
c Line #162.  Adding edge between POG nodes 140 and 241
c Line #163. Created POG AND Node 242 to hold literals between NNF nodes 60 and 61
c Line #163.  Adding edge between POG nodes 139 and 242
c Line #164.  Created POG node OR number 243 from NNF node 95
c Line #165. Created POG AND Node 244 to hold literals between NNF nodes 95 and 91
c Line #165.  Adding edge between POG nodes 243 and 244
c Line #166. Created POG AND Node 245 to hold literals between NNF nodes 95 and 91
c Line #166.  Adding edge between POG nodes 243 and 245
c Line #167. Created POG AND Node 246 to hold literals between NNF nodes 60 and 95
c Line #167.  Adding edge between POG nodes 139 and 246
c Line #168. Created POG AND Node 247 to hold literals between NNF nodes 59 and 60
c Line #168.  Adding edge between POG nodes 138 and 247
c Line #169.  Created POG node OR number 248 from NNF node 96
c Line #170. Created POG AND Node 249 to hold literals between NNF nodes 96 and 95
c Line #170.  Adding edge between POG nodes 248 and 249
c Line #171. Created POG AND Node 250 to hold literals between NNF nodes 96 and 62
c Line #171.  Adding edge between POG nodes 248 and 250
c Line #172. Created POG AND Node 251 to hold literals between NNF nodes 59 and 96
c Line #172.  Adding edge between POG nodes 138 and 251
c Line #173. Created POG AND Node 252 to hold literals between NNF nodes 58 and 59
c Line #173.  Adding edge between POG nodes 137 and 252
c Line #174.  Created POG node OR number 253 from NNF node 97
c Line #175. Created POG AND Node 254 to hold literals between NNF nodes 97 and 95
c Line #175.  Adding edge between POG nodes 253 and 254
c Line #176. Created POG AND Node 255 to hold literals between NNF nodes 97 and 95
c Line #176.  Adding edge between POG nodes 253 and 255
c Line #177. Created POG AND Node 256 to hold literals between NNF nodes 58 and 97
c Line #177.  Adding edge between POG nodes 137 and 256
c Line #178. Created POG AND Node 257 to hold literals between NNF nodes 57 and 58
c Line #178.  Adding edge between POG nodes 136 and 257
c Line #179.  Created POG node OR number 258 from NNF node 98
c Line #180. Created POG AND Node 259 to hold literals between NNF nodes 98 and 97
c Line #180.  Adding edge between POG nodes 258 and 259
c Line #181. Created POG AND Node 260 to hold literals between NNF nodes 98 and 60
c Line #181.  Adding edge between POG nodes 258 and 260
c Line #182. Created POG AND Node 261 to hold literals between NNF nodes 57 and 98
c Line #182.  Adding edge between POG nodes 136 and 261
c Line #183. Created POG AND Node 262 to hold literals between NNF nodes 56 and 57
c Line #183.  Adding edge between POG nodes 135 and 262
c Line #184.  Created POG node OR number 263 from NNF node 99
c Line #185. Created POG AND Node 264 to hold literals between NNF nodes 99 and 95
c Line #185.  Adding edge between POG nodes 263 and 264
c Line #186. Created POG AND Node 265 to hold literals between NNF nodes 99 and 95
c Line #186.  Adding edge between POG nodes 263 and 265
c Line #187. Created POG AND Node 266 to hold literals between NNF nodes 56 and 99
c Line #187.  Adding edge between POG nodes 135 and 266
c Line #188. Created POG AND Node 267 to hold literals between NNF nodes 55 and 56
c Line #188.  Adding edge between POG nodes 134 and 267
c Line #189.  Created POG node OR number 268 from NNF node 100
c Line #190. Created POG AND Node 269 to hold literals between NNF nodes 100 and 99
c Line #190.  Adding edge between POG nodes 268 and 269
c Line #191. Created POG AND Node 270 to hold literals between NNF nodes 100 and 58
c Line #191.  Adding edge between POG nodes 268 and 270
c Line #192. Created POG AND Node 271 to hold literals between NNF nodes 55 and 100
c Line #192.  Adding edge between POG nodes 134 and 271
c Line #193. Created POG AND Node 272 to hold literals between NNF nodes 54 and 55
c Line #193.  Adding edge between POG nodes 133 and 272
c Line #194.  Created POG node OR number 273 from NNF node 101
c Line #195. Created POG AND Node 274 to hold literals between NNF nodes 101 and 99
c Line #195.  Adding edge between POG nodes 273 and 274
c Line #196. Created POG AND Node 275 to hold literals between NNF nodes 101 and 99
c Line #196.  Adding edge between POG nodes 273 and 275
c Line #197. Created POG AND Node 276 to hold literals between NNF nodes 54 and 101
c Line #197.  Adding edge between POG nodes 133 and 276
c Line #198. Created POG AND Node 277 to hold literals between NNF nodes 53 and 54
c Line #198.  Adding edge between POG nodes 132 and 277
c Line #199.  Created POG node OR number 278 from NNF node 102
c Line #200. Created POG AND Node 279 to hold literals between NNF nodes 102 and 101
c Line #200.  Adding edge between POG nodes 278 and 279
c Line #201. Created POG AND Node 280 to hold literals between NNF nodes 102 and 56
c Line #201.  Adding edge between POG nodes 278 and 280
c Line #202. Created POG AND Node 281 to hold literals between NNF nodes 53 and 102
c Line #202.  Adding edge between POG nodes 132 and 281
c Line #203. Created POG AND Node 282 to hold literals between NNF nodes 52 and 53
c Line #203.  Adding edge between POG nodes 131 and 282
c Line #204.  Created POG node OR number 283 from NNF node 103
c Line #205. Created POG AND Node 284 to hold literals between NNF nodes 103 and 99
c Line #205.  Adding edge between POG nodes 283 and 284
c Line #206. Created POG AND Node 285 to hold literals between NNF nodes 103 and 99
c Line #206.  Adding edge between POG nodes 283 and 285
c Line #207. Created POG AND Node 286 to hold literals between NNF nodes 52 and 103
c Line #207.  Adding edge between POG nodes 131 and 286
c Line #208. Created POG AND Node 287 to hold literals between NNF nodes 51 and 52
c Line #208.  Adding edge between POG nodes 130 and 287
c Line #209.  Created POG node OR number 288 from NNF node 104
c Line #210. Created POG AND Node 289 to hold literals between NNF nodes 104 and 103
c Line #210.  Adding edge between POG nodes 288 and 289
c Line #211. Created POG AND Node 290 to hold literals between NNF nodes 104 and 54
c Line #211.  Adding edge between POG nodes 288 and 290
c Line #212. Created POG AND Node 291 to hold literals between NNF nodes 51 and 104
c Line #212.  Adding edge between POG nodes 130 and 291
c Line #213. Created POG AND Node 292 to hold literals between NNF nodes 50 and 51
c Line #213.  Adding edge between POG nodes 129 and 292
c Line #214.  Created POG node OR number 293 from NNF node 105
c Line #215. Created POG AND Node 294 to hold literals between NNF nodes 105 and 103
c Line #215.  Adding edge between POG nodes 293 and 294
c Line #216. Created POG AND Node 295 to hold literals between NNF nodes 105 and 103
c Line #216.  Adding edge between POG nodes 293 and 295
c Line #217. Created POG AND Node 296 to hold literals between NNF nodes 50 and 105
c Line #217.  Adding edge between POG nodes 129 and 296
c Line #218. Created POG AND Node 297 to hold literals between NNF nodes 49 and 50
c Line #218.  Adding edge between POG nodes 128 and 297
c Line #219.  Created POG node OR number 298 from NNF node 106
c Line #220. Created POG AND Node 299 to hold literals between NNF nodes 106 and 105
c Line #220.  Adding edge between POG nodes 298 and 299
c Line #221. Created POG AND Node 300 to hold literals between NNF nodes 106 and 52
c Line #221.  Adding edge between POG nodes 298 and 300
c Line #222. Created POG AND Node 301 to hold literals between NNF nodes 49 and 106
c Line #222.  Adding edge between POG nodes 128 and 301
c Line #223. Created POG AND Node 302 to hold literals between NNF nodes 48 and 49
c Line #223.  Adding edge between POG nodes 127 and 302
c Line #224.  Created POG node OR number 303 from NNF node 107
c Line #225. Created POG AND Node 304 to hold literals between NNF nodes 107 and 103
c Line #225.  Adding edge between POG nodes 303 and 304
c Line #226. Created POG AND Node 305 to hold literals between NNF nodes 107 and 103
c Line #226.  Adding edge between POG nodes 303 and 305
c Line #227. Created POG AND Node 306 to hold literals between NNF nodes 48 and 107
c Line #227.  Adding edge between POG nodes 127 and 306
c Line #228. Created POG AND Node 307 to hold literals between NNF nodes 47 and 48
c Line #228.  Adding edge between POG nodes 126 and 307
c Line #229.  Created POG node OR number 308 from NNF node 108
c Line #230. Created POG AND Node 309 to hold literals between NNF nodes 108 and 107
c Line #230.  Adding edge between POG nodes 308 and 309
c Line #231. Created POG AND Node 310 to hold literals between NNF nodes 108 and 50
c Line #231.  Adding edge between POG nodes 308 and 310
c Line #232. Created POG AND Node 311 to hold literals between NNF nodes 47 and 108
c Line #232.  Adding edge between POG nodes 126 and 311
c Line #233. Created POG AND Node 312 to hold literals between NNF nodes 46 and 47
c Line #233.  Adding edge between POG nodes 125 and 312
c Line #234.  Created POG node OR number 313 from NNF node 109
c Line #235. Created POG AND Node 314 to hold literals between NNF nodes 109 and 107
c Line #235.  Adding edge between POG nodes 313 and 314
c Line #236. Created POG AND Node 315 to hold literals between NNF nodes 109 and 107
c Line #236.  Adding edge between POG nodes 313 and 315
c Line #237. Created POG AND Node 316 to hold literals between NNF nodes 46 and 109
c Line #237.  Adding edge between POG nodes 125 and 316
c Line #238. Created POG AND Node 317 to hold literals between NNF nodes 45 and 46
c Line #238.  Adding edge between POG nodes 124 and 317
c Line #239.  Created POG node OR number 318 from NNF node 110
c Line #240. Created POG AND Node 319 to hold literals between NNF nodes 110 and 109
c Line #240.  Adding edge between POG nodes 318 and 319
c Line #241. Created POG AND Node 320 to hold literals between NNF nodes 110 and 48
c Line #241.  Adding edge between POG nodes 318 and 320
c Line #242. Created POG AND Node 321 to hold literals between NNF nodes 45 and 110
c Line #242.  Adding edge between POG nodes 124 and 321
c Line #243. Created POG AND Node 322 to hold literals between NNF nodes 44 and 45
c Line #243.  Adding edge between POG nodes 123 and 322
c Line #244.  Created POG node OR number 323 from NNF node 111
c Line #245. Created POG AND Node 324 to hold literals between NNF nodes 111 and 107
c Line #245.  Adding edge between POG nodes 323 and 324
c Line #246. Created POG AND Node 325 to hold literals between NNF nodes 111 and 107
c Line #246.  Adding edge between POG nodes 323 and 325
c Line #247. Created POG AND Node 326 to hold literals between NNF nodes 44 and 111
c Line #247.  Adding edge between POG nodes 123 and 326
c Line #248. Created POG AND Node 327 to hold literals between NNF nodes 43 and 44
c Line #248.  Adding edge between POG nodes 122 and 327
c Line #249.  Created POG node OR number 328 from NNF node 112
c Line #250. Created POG AND Node 329 to hold literals between NNF nodes 112 and 111
c Line #250.  Adding edge between POG nodes 328 and 329
c Line #251. Created POG AND Node 330 to hold literals between NNF nodes 112 and 46
c Line #251.  Adding edge between POG nodes 328 and 330
c Line #252. Created POG AND Node 331 to hold literals between NNF nodes 43 and 112
c Line #252.  Adding edge between POG nodes 122 and 331
c Line #253. Created POG AND Node 332 to hold literals between NNF nodes 42 and 43
c Line #253.  Adding edge between POG nodes 121 and 332
c Line #254.  Created POG node OR number 333 from NNF node 113
c Line #255. Created POG AND Node 334 to hold literals between NNF nodes 113 and 111
c Line #255.  Adding edge between POG nodes 333 and 334
c Line #256. Created POG AND Node 335 to hold literals between NNF nodes 113 and 111
c Line #256.  Adding edge between POG nodes 333 and 335
c Line #257. Created POG AND Node 336 to hold literals between NNF nodes 42 and 113
c Line #257.  Adding edge between POG nodes 121 and 336
c Line #258. Created POG AND Node 337 to hold literals between NNF nodes 41 and 42
c Line #258.  Adding edge between POG nodes 120 and 337
c Line #259.  Created POG node OR number 338 from NNF node 114
c Line #260. Created POG AND Node 339 to hold literals between NNF nodes 114 and 113
c Line #260.  Adding edge between POG nodes 338 and 339
c Line #261. Created POG AND Node 340 to hold literals between NNF nodes 114 and 44
c Line #261.  Adding edge between POG nodes 338 and 340
c Line #262. Created POG AND Node 341 to hold literals between NNF nodes 41 and 114
c Line #262.  Adding edge between POG nodes 120 and 341
c Line #263. Created POG AND Node 342 to hold literals between NNF nodes 40 and 41
c Line #263.  Adding edge between POG nodes 119 and 342
c Line #264.  Created POG node OR number 343 from NNF node 115
c Line #265. Created POG AND Node 344 to hold literals between NNF nodes 115 and 111
c Line #265.  Adding edge between POG nodes 343 and 344
c Line #266. Created POG AND Node 345 to hold literals between NNF nodes 115 and 111
c Line #266.  Adding edge between POG nodes 343 and 345
c Line #267. Created POG AND Node 346 to hold literals between NNF nodes 40 and 115
c Line #267.  Adding edge between POG nodes 119 and 346
c Line #268. Created POG AND Node 347 to hold literals between NNF nodes 39 and 40
c Line #268.  Adding edge between POG nodes 118 and 347
c Line #269.  Created POG node OR number 348 from NNF node 116
c Line #270. Created POG AND Node 349 to hold literals between NNF nodes 116 and 115
c Line #270.  Adding edge between POG nodes 348 and 349
c Line #271. Created POG AND Node 350 to hold literals between NNF nodes 116 and 42
c Line #271.  Adding edge between POG nodes 348 and 350
c Line #272. Created POG AND Node 351 to hold literals between NNF nodes 39 and 116
c Line #272.  Adding edge between POG nodes 118 and 351
c Line #273. Created POG AND Node 352 to hold literals between NNF nodes 38 and 39
c Line #273.  Adding edge between POG nodes 117 and 352
c Line #274.  Created POG node OR number 353 from NNF node 117
c Line #275. Created POG AND Node 354 to hold literals between NNF nodes 117 and 115
c Line #275.  Adding edge between POG nodes 353 and 354
c Line #276. Created POG AND Node 355 to hold literals between NNF nodes 117 and 115
c Line #276.  Adding edge between POG nodes 353 and 355
c Line #277. Created POG AND Node 356 to hold literals between NNF nodes 38 and 117
c Line #277.  Adding edge between POG nodes 117 and 356
c Line #278. Created POG AND Node 357 to hold literals between NNF nodes 37 and 38
c Line #278.  Adding edge between POG nodes 116 and 357
c Line #279.  Created POG node OR number 358 from NNF node 118
c Line #280. Created POG AND Node 359 to hold literals between NNF nodes 118 and 117
c Line #280.  Adding edge between POG nodes 358 and 359
c Line #281. Created POG AND Node 360 to hold literals between NNF nodes 118 and 40
c Line #281.  Adding edge between POG nodes 358 and 360
c Line #282. Created POG AND Node 361 to hold literals between NNF nodes 37 and 118
c Line #282.  Adding edge between POG nodes 116 and 361
c Line #283. Created POG AND Node 362 to hold literals between NNF nodes 36 and 37
c Line #283.  Adding edge between POG nodes 115 and 362
c Line #284.  Created POG node OR number 363 from NNF node 119
c Line #285. Created POG AND Node 364 to hold literals between NNF nodes 119 and 115
c Line #285.  Adding edge between POG nodes 363 and 364
c Line #286. Created POG AND Node 365 to hold literals between NNF nodes 119 and 115
c Line #286.  Adding edge between POG nodes 363 and 365
c Line #287. Created POG AND Node 366 to hold literals between NNF nodes 36 and 119
c Line #287.  Adding edge between POG nodes 115 and 366
c Line #288. Created POG AND Node 367 to hold literals between NNF nodes 35 and 36
c Line #288.  Adding edge between POG nodes 114 and 367
c Line #289.  Created POG node OR number 368 from NNF node 120
c Line #290. Created POG AND Node 369 to hold literals between NNF nodes 120 and 119
c Line #290.  Adding edge between POG nodes 368 and 369
c Line #291. Created POG AND Node 370 to hold literals between NNF nodes 120 and 38
c Line #291.  Adding edge between POG nodes 368 and 370
c Line #292. Created POG AND Node 371 to hold literals between NNF nodes 35 and 120
c Line #292.  Adding edge between POG nodes 114 and 371
c Line #293. Created POG AND Node 372 to hold literals between NNF nodes 34 and 35
c Line #293.  Adding edge between POG nodes 113 and 372
c Line #294.  Created POG node OR number 373 from NNF node 121
c Line #295. Created POG AND Node 374 to hold literals between NNF nodes 121 and 119
c Line #295.  Adding edge between POG nodes 373 and 374
c Line #296. Created POG AND Node 375 to hold literals between NNF nodes 121 and 119
c Line #296.  Adding edge between POG nodes 373 and 375
c Line #297. Created POG AND Node 376 to hold literals between NNF nodes 34 and 121
c Line #297.  Adding edge between POG nodes 113 and 376
c Line #298. Created POG AND Node 377 to hold literals between NNF nodes 33 and 34
c Line #298.  Adding edge between POG nodes 112 and 377
c Line #299.  Created POG node OR number 378 from NNF node 122
c Line #300. Created POG AND Node 379 to hold literals between NNF nodes 122 and 121
c Line #300.  Adding edge between POG nodes 378 and 379
c Line #301. Created POG AND Node 380 to hold literals between NNF nodes 122 and 36
c Line #301.  Adding edge between POG nodes 378 and 380
c Line #302. Created POG AND Node 381 to hold literals between NNF nodes 33 and 122
c Line #302.  Adding edge between POG nodes 112 and 381
c Line #303. Created POG AND Node 382 to hold literals between NNF nodes 32 and 33
c Line #303.  Adding edge between POG nodes 111 and 382
c Line #304.  Created POG node OR number 383 from NNF node 123
c Line #305. Created POG AND Node 384 to hold literals between NNF nodes 123 and 119
c Line #305.  Adding edge between POG nodes 383 and 384
c Line #306. Created POG AND Node 385 to hold literals between NNF nodes 123 and 119
c Line #306.  Adding edge between POG nodes 383 and 385
c Line #307. Created POG AND Node 386 to hold literals between NNF nodes 32 and 123
c Line #307.  Adding edge between POG nodes 111 and 386
c Line #308. Created POG AND Node 387 to hold literals between NNF nodes 31 and 32
c Line #308.  Adding edge between POG nodes 110 and 387
c Line #309. Created POG AND Node 388 to hold literals between NNF nodes 31 and 1
c Line #309.  Adding edge between POG nodes 110 and 388
c Line #310. Created POG AND Node 389 to hold literals between NNF nodes 30 and 31
c Line #310.  Adding edge between POG nodes 109 and 389
c Line #311.  Created POG node OR number 390 from NNF node 124
c Line #312. Created POG AND Node 391 to hold literals between NNF nodes 124 and 123
c Line #312.  Adding edge between POG nodes 390 and 391
c Line #313. Created POG AND Node 392 to hold literals between NNF nodes 124 and 123
c Line #313.  Adding edge between POG nodes 390 and 392
c Line #314. Created POG AND Node 393 to hold literals between NNF nodes 30 and 124
c Line #314.  Adding edge between POG nodes 109 and 393
c Line #315. Created POG AND Node 394 to hold literals between NNF nodes 29 and 30
c Line #315.  Adding edge between POG nodes 108 and 394
c Line #316. Created POG AND Node 395 to hold literals between NNF nodes 29 and 1
c Line #316.  Adding edge between POG nodes 108 and 395
c Line #317. Created POG AND Node 396 to hold literals between NNF nodes 28 and 29
c Line #317.  Adding edge between POG nodes 107 and 396
c Line #318.  Created POG node OR number 397 from NNF node 125
c Line #319. Created POG AND Node 398 to hold literals between NNF nodes 125 and 123
c Line #319.  Adding edge between POG nodes 397 and 398
c Line #320. Created POG AND Node 399 to hold literals between NNF nodes 125 and 123
c Line #320.  Adding edge between POG nodes 397 and 399
c Line #321. Created POG AND Node 400 to hold literals between NNF nodes 28 and 125
c Line #321.  Adding edge between POG nodes 107 and 400
c Line #322. Created POG AND Node 401 to hold literals between NNF nodes 27 and 28
c Line #322.  Adding edge between POG nodes 106 and 401
c Line #323. Created POG AND Node 402 to hold literals between NNF nodes 27 and 1
c Line #323.  Adding edge between POG nodes 106 and 402
c Line #324. Created POG AND Node 403 to hold literals between NNF nodes 26 and 27
c Line #324.  Adding edge between POG nodes 105 and 403
c Line #325.  Created POG node OR number 404 from NNF node 126
c Line #326. Created POG AND Node 405 to hold literals between NNF nodes 126 and 125
c Line #326.  Adding edge between POG nodes 404 and 405
c Line #327. Created POG AND Node 406 to hold literals between NNF nodes 126 and 125
c Line #327.  Adding edge between POG nodes 404 and 406
c Line #328. Created POG AND Node 407 to hold literals between NNF nodes 26 and 126
c Line #328.  Adding edge between POG nodes 105 and 407
c Line #329. Created POG AND Node 408 to hold literals between NNF nodes 25 and 26
c Line #329.  Adding edge between POG nodes 104 and 408
c Line #330. Created POG AND Node 409 to hold literals between NNF nodes 25 and 1
c Line #330.  Adding edge between POG nodes 104 and 409
c Line #331. Created POG AND Node 410 to hold literals between NNF nodes 24 and 25
c Line #331.  Adding edge between POG nodes 103 and 410
c Line #332.  Created POG node OR number 411 from NNF node 127
c Line #333. Created POG AND Node 412 to hold literals between NNF nodes 127 and 125
c Line #333.  Adding edge between POG nodes 411 and 412
c Line #334. Created POG AND Node 413 to hold literals between NNF nodes 127 and 125
c Line #334.  Adding edge between POG nodes 411 and 413
c Line #335. Created POG AND Node 414 to hold literals between NNF nodes 24 and 127
c Line #335.  Adding edge between POG nodes 103 and 414
c Line #336. Created POG AND Node 415 to hold literals between NNF nodes 23 and 24
c Line #336.  Adding edge between POG nodes 102 and 415
c Line #337. Created POG AND Node 416 to hold literals between NNF nodes 23 and 1
c Line #337.  Adding edge between POG nodes 102 and 416
c Line #338. Created POG AND Node 417 to hold literals between NNF nodes 22 and 23
c Line #338.  Adding edge between POG nodes 101 and 417
c Line #339.  Created POG node OR number 418 from NNF node 128
c Line #340. Created POG AND Node 419 to hold literals between NNF nodes 128 and 127
c Line #340.  Adding edge between POG nodes 418 and 419
c Line #341. Created POG AND Node 420 to hold literals between NNF nodes 128 and 127
c Line #341.  Adding edge between POG nodes 418 and 420
c Line #342. Created POG AND Node 421 to hold literals between NNF nodes 22 and 128
c Line #342.  Adding edge between POG nodes 101 and 421
c Line #343. Created POG AND Node 422 to hold literals between NNF nodes 21 and 22
c Line #343.  Adding edge between POG nodes 100 and 422
c Line #344. Created POG AND Node 423 to hold literals between NNF nodes 21 and 1
c Line #344.  Adding edge between POG nodes 100 and 423
c Line #345. Created POG AND Node 424 to hold literals between NNF nodes 20 and 21
c Line #345.  Adding edge between POG nodes 99 and 424
c Line #346.  Created POG node OR number 425 from NNF node 129
c Line #347. Created POG AND Node 426 to hold literals between NNF nodes 129 and 127
c Line #347.  Adding edge between POG nodes 425 and 426
c Line #348. Created POG AND Node 427 to hold literals between NNF nodes 129 and 127
c Line #348.  Adding edge between POG nodes 425 and 427
c Line #349. Created POG AND Node 428 to hold literals between NNF nodes 20 and 129
c Line #349.  Adding edge between POG nodes 99 and 428
c Line #350. Created POG AND Node 429 to hold literals between NNF nodes 19 and 20
c Line #350.  Adding edge between POG nodes 98 and 429
c Line #351. Created POG AND Node 430 to hold literals between NNF nodes 19 and 1
c Line #351.  Adding edge between POG nodes 98 and 430
c Line #352. Created POG AND Node 431 to hold literals between NNF nodes 18 and 19
c Line #352.  Adding edge between POG nodes 97 and 431
c Line #353.  Created POG node OR number 432 from NNF node 130
c Line #354. Created POG AND Node 433 to hold literals between NNF nodes 130 and 129
c Line #354.  Adding edge between POG nodes 432 and 433
c Line #355. Created POG AND Node 434 to hold literals between NNF nodes 130 and 129
c Line #355.  Adding edge between POG nodes 432 and 434
c Line #356. Created POG AND Node 435 to hold literals between NNF nodes 18 and 130
c Line #356.  Adding edge between POG nodes 97 and 435
c Line #357. Created POG AND Node 436 to hold literals between NNF nodes 17 and 18
c Line #357.  Adding edge between POG nodes 96 and 436
c Line #358. Created POG AND Node 437 to hold literals between NNF nodes 17 and 1
c Line #358.  Adding edge between POG nodes 96 and 437
c Line #359. Created POG AND Node 438 to hold literals between NNF nodes 16 and 17
c Line #359.  Adding edge between POG nodes 95 and 438
c Line #360.  Created POG node OR number 439 from NNF node 131
c Line #361. Created POG AND Node 440 to hold literals between NNF nodes 131 and 129
c Line #361.  Adding edge between POG nodes 439 and 440
c Line #362. Created POG AND Node 441 to hold literals between NNF nodes 131 and 129
c Line #362.  Adding edge between POG nodes 439 and 441
c Line #363. Created POG AND Node 442 to hold literals between NNF nodes 16 and 131
c Line #363.  Adding edge between POG nodes 95 and 442
c Line #364. Created POG AND Node 443 to hold literals between NNF nodes 15 and 16
c Line #364.  Adding edge between POG nodes 94 and 443
c Line #365. Created POG AND Node 444 to hold literals between NNF nodes 15 and 1
c Line #365.  Adding edge between POG nodes 94 and 444
c Line #366. Created POG AND Node 445 to hold literals between NNF nodes 14 and 15
c Line #366.  Adding edge between POG nodes 93 and 445
c Line #367.  Created POG node OR number 446 from NNF node 132
c Line #368. Created POG AND Node 447 to hold literals between NNF nodes 132 and 131
c Line #368.  Adding edge between POG nodes 446 and 447
c Line #369. Created POG AND Node 448 to hold literals between NNF nodes 132 and 131
c Line #369.  Adding edge between POG nodes 446 and 448
c Line #370. Created POG AND Node 449 to hold literals between NNF nodes 14 and 132
c Line #370.  Adding edge between POG nodes 93 and 449
c Line #371. Created POG AND Node 450 to hold literals between NNF nodes 13 and 14
c Line #371.  Adding edge between POG nodes 92 and 450
c Line #372. Created POG AND Node 451 to hold literals between NNF nodes 13 and 1
c Line #372.  Adding edge between POG nodes 92 and 451
c Line #373. Created POG AND Node 452 to hold literals between NNF nodes 12 and 13
c Line #373.  Adding edge between POG nodes 91 and 452
c Line #374.  Created POG node OR number 453 from NNF node 133
c Line #375. Created POG AND Node 454 to hold literals between NNF nodes 133 and 131
c Line #375.  Adding edge between POG nodes 453 and 454
c Line #376. Created POG AND Node 455 to hold literals between NNF nodes 133 and 131
c Line #376.  Adding edge between POG nodes 453 and 455
c Line #377. Created POG AND Node 456 to hold literals between NNF nodes 12 and 133
c Line #377.  Adding edge between POG nodes 91 and 456
c Line #378. Created POG AND Node 457 to hold literals between NNF nodes 11 and 12
c Line #378.  Adding edge between POG nodes 90 and 457
c Line #379. Created POG AND Node 458 to hold literals between NNF nodes 11 and 1
c Line #379.  Adding edge between POG nodes 90 and 458
c Line #380. Created POG AND Node 459 to hold literals between NNF nodes 10 and 11
c Line #380.  Adding edge between POG nodes 89 and 459
c Line #381.  Created POG node OR number 460 from NNF node 134
c Line #382. Created POG AND Node 461 to hold literals between NNF nodes 134 and 133
c Line #382.  Adding edge between POG nodes 460 and 461
c Line #383. Created POG AND Node 462 to hold literals between NNF nodes 134 and 133
c Line #383.  Adding edge between POG nodes 460 and 462
c Line #384. Created POG AND Node 463 to hold literals between NNF nodes 10 and 134
c Line #384.  Adding edge between POG nodes 89 and 463
c Line #385. Created POG AND Node 464 to hold literals between NNF nodes 9 and 10
c Line #385.  Adding edge between POG nodes 88 and 464
c Line #386. Created POG AND Node 465 to hold literals between NNF nodes 9 and 1
c Line #386.  Adding edge between POG nodes 88 and 465
c Line #387. Created POG AND Node 466 to hold literals between NNF nodes 8 and 9
c Line #387.  Adding edge between POG nodes 87 and 466
c Line #388.  Created POG node OR number 467 from NNF node 135
c Line #389. Created POG AND Node 468 to hold literals between NNF nodes 135 and 133
c Line #389.  Adding edge between POG nodes 467 and 468
c Line #390. Created POG AND Node 469 to hold literals between NNF nodes 135 and 133
c Line #390.  Adding edge between POG nodes 467 and 469
c Line #391. Created POG AND Node 470 to hold literals between NNF nodes 8 and 135
c Line #391.  Adding edge between POG nodes 87 and 470
c Line #392. Created POG AND Node 471 to hold literals between NNF nodes 7 and 8
c Line #392.  Adding edge between POG nodes 86 and 471
c Line #393. Created POG AND Node 472 to hold literals between NNF nodes 7 and 1
c Line #393.  Adding edge between POG nodes 86 and 472
c Line #394. Created POG AND Node 473 to hold literals between NNF nodes 6 and 7
c Line #394.  Adding edge between POG nodes 85 and 473
c Line #395.  Created POG node OR number 474 from NNF node 136
c Line #396. Created POG AND Node 475 to hold literals between NNF nodes 136 and 135
c Line #396.  Adding edge between POG nodes 474 and 475
c Line #397. Created POG AND Node 476 to hold literals between NNF nodes 136 and 135
c Line #397.  Adding edge between POG nodes 474 and 476
c Line #398. Created POG AND Node 477 to hold literals between NNF nodes 6 and 136
c Line #398.  Adding edge between POG nodes 85 and 477
c Line #399. Created POG AND Node 478 to hold literals between NNF nodes 5 and 6
c Line #399.  Adding edge between POG nodes 84 and 478
c Line #400. Created POG AND Node 479 to hold literals between NNF nodes 5 and 1
c Line #400.  Adding edge between POG nodes 84 and 479
c Line #401. Created POG AND Node 480 to hold literals between NNF nodes 4 and 5
c Line #401.  Adding edge between POG nodes 83 and 480
c Line #402.  Created POG node OR number 481 from NNF node 137
c Line #403.  Created POG node OR number 482 from NNF node 138
c Line #404.  Created POG node OR number 483 from NNF node 139
c Line #405.  Created POG node OR number 484 from NNF node 140
c Line #406.  Created POG node OR number 485 from NNF node 141
c Line #407.  Created POG node OR number 486 from NNF node 142
c Line #408.  Created POG node OR number 487 from NNF node 143
c Line #409.  Created POG node OR number 488 from NNF node 144
c Line #410.  Created POG node OR number 489 from NNF node 145
c Line #411.  Created POG node OR number 490 from NNF node 146
c Line #412.  Created POG node OR number 491 from NNF node 147
c Line #413.  Created POG node OR number 492 from NNF node 148
c Line #414.  Created POG node OR number 493 from NNF node 149
c Line #415.  Created POG node OR number 494 from NNF node 150
c Line #416.  Created POG node OR number 495 from NNF node 151
c Line #417.  Created POG node OR number 496 from NNF node 152
c Line #418.  Created POG node OR number 497 from NNF node 153
c Line #419.  Created POG node OR number 498 from NNF node 154
c Line #420.  Created POG node OR number 499 from NNF node 155
c Line #421.  Created POG node OR number 500 from NNF node 156
c Line #422.  Created POG node OR number 501 from NNF node 157
c Line #423.  Created POG node OR number 502 from NNF node 158
c Line #424.  Created POG node OR number 503 from NNF node 159
c Line #425.  Created POG node OR number 504 from NNF node 160
c Line #426.  Created POG node OR number 505 from NNF node 161
c Line #427.  Created POG node OR number 506 from NNF node 162
c Line #428.  Created POG node OR number 507 from NNF node 163
c Line #429.  Created POG node OR number 508 from NNF node 164
c Line #430.  Created POG node OR number 509 from NNF node 165
c Line #431.  Created POG node OR number 510 from NNF node 166
c Line #432.  Created POG node OR number 511 from NNF node 167
c Line #433.  Created POG node OR number 512 from NNF node 168
c Line #434.  Created POG node OR number 513 from NNF node 169
c Line #435.  Created POG node OR number 514 from NNF node 170
c Line #436.  Created POG node OR number 515 from NNF node 171
c Line #437.  Created POG node OR number 516 from NNF node 172
c Line #438.  Created POG node OR number 517 from NNF node 173
c Line #439.  Created POG node OR number 518 from NNF node 174
c Line #440. Created POG AND Node 519 to hold literals between NNF nodes 174 and 1
c Line #440.  Adding edge between POG nodes 518 and 519
c Line #441. Created POG AND Node 520 to hold literals between NNF nodes 174 and 2
c Line #441.  Adding edge between POG nodes 518 and 520
c Line #442. Created POG AND Node 521 to hold literals between NNF nodes 173 and 174
c Line #442.  Adding edge between POG nodes 517 and 521
c Line #443. Created POG AND Node 522 to hold literals between NNF nodes 173 and 2
c Line #443.  Adding edge between POG nodes 517 and 522
c Line #444. Created POG AND Node 523 to hold literals between NNF nodes 172 and 173
c Line #444.  Adding edge between POG nodes 516 and 523
c Line #445. Created POG AND Node 524 to hold literals between NNF nodes 172 and 79
c Line #445.  Adding edge between POG nodes 516 and 524
c Line #446. Created POG AND Node 525 to hold literals between NNF nodes 171 and 172
c Line #446.  Adding edge between POG nodes 515 and 525
c Line #447. Created POG AND Node 526 to hold literals between NNF nodes 171 and 81
c Line #447.  Adding edge between POG nodes 515 and 526
c Line #448. Created POG AND Node 527 to hold literals between NNF nodes 170 and 171
c Line #448.  Adding edge between POG nodes 514 and 527
c Line #449. Created POG AND Node 528 to hold literals between NNF nodes 170 and 83
c Line #449.  Adding edge between POG nodes 514 and 528
c Line #450. Created POG AND Node 529 to hold literals between NNF nodes 169 and 170
c Line #450.  Adding edge between POG nodes 513 and 529
c Line #451. Created POG AND Node 530 to hold literals between NNF nodes 169 and 85
c Line #451.  Adding edge between POG nodes 513 and 530
c Line #452. Created POG AND Node 531 to hold literals between NNF nodes 168 and 169
c Line #452.  Adding edge between POG nodes 512 and 531
c Line #453. Created POG AND Node 532 to hold literals between NNF nodes 168 and 87
c Line #453.  Adding edge between POG nodes 512 and 532
c Line #454. Created POG AND Node 533 to hold literals between NNF nodes 167 and 168
c Line #454.  Adding edge between POG nodes 511 and 533
c Line #455. Created POG AND Node 534 to hold literals between NNF nodes 167 and 89
c Line #455.  Adding edge between POG nodes 511 and 534
c Line #456. Created POG AND Node 535 to hold literals between NNF nodes 166 and 167
c Line #456.  Adding edge between POG nodes 510 and 535
c Line #457. Created POG AND Node 536 to hold literals between NNF nodes 166 and 91
c Line #457.  Adding edge between POG nodes 510 and 536
c Line #458. Created POG AND Node 537 to hold literals between NNF nodes 165 and 166
c Line #458.  Adding edge between POG nodes 509 and 537
c Line #459. Created POG AND Node 538 to hold literals between NNF nodes 165 and 93
c Line #459.  Adding edge between POG nodes 509 and 538
c Line #460. Created POG AND Node 539 to hold literals between NNF nodes 164 and 165
c Line #460.  Adding edge between POG nodes 508 and 539
c Line #461. Created POG AND Node 540 to hold literals between NNF nodes 164 and 95
c Line #461.  Adding edge between POG nodes 508 and 540
c Line #462. Created POG AND Node 541 to hold literals between NNF nodes 163 and 164
c Line #462.  Adding edge between POG nodes 507 and 541
c Line #463. Created POG AND Node 542 to hold literals between NNF nodes 163 and 97
c Line #463.  Adding edge between POG nodes 507 and 542
c Line #464. Created POG AND Node 543 to hold literals between NNF nodes 162 and 163
c Line #464.  Adding edge between POG nodes 506 and 543
c Line #465. Created POG AND Node 544 to hold literals between NNF nodes 162 and 99
c Line #465.  Adding edge between POG nodes 506 and 544
c Line #466. Created POG AND Node 545 to hold literals between NNF nodes 161 and 162
c Line #466.  Adding edge between POG nodes 505 and 545
c Line #467. Created POG AND Node 546 to hold literals between NNF nodes 161 and 101
c Line #467.  Adding edge between POG nodes 505 and 546
c Line #468. Created POG AND Node 547 to hold literals between NNF nodes 160 and 161
c Line #468.  Adding edge between POG nodes 504 and 547
c Line #469. Created POG AND Node 548 to hold literals between NNF nodes 160 and 103
c Line #469.  Adding edge between POG nodes 504 and 548
c Line #470. Created POG AND Node 549 to hold literals between NNF nodes 159 and 160
c Line #470.  Adding edge between POG nodes 503 and 549
c Line #471. Created POG AND Node 550 to hold literals between NNF nodes 159 and 105
c Line #471.  Adding edge between POG nodes 503 and 550
c Line #472. Created POG AND Node 551 to hold literals between NNF nodes 158 and 159
c Line #472.  Adding edge between POG nodes 502 and 551
c Line #473. Created POG AND Node 552 to hold literals between NNF nodes 158 and 107
c Line #473.  Adding edge between POG nodes 502 and 552
c Line #474. Created POG AND Node 553 to hold literals between NNF nodes 157 and 158
c Line #474.  Adding edge between POG nodes 501 and 553
c Line #475. Created POG AND Node 554 to hold literals between NNF nodes 157 and 109
c Line #475.  Adding edge between POG nodes 501 and 554
c Line #476. Created POG AND Node 555 to hold literals between NNF nodes 156 and 157
c Line #476.  Adding edge between POG nodes 500 and 555
c Line #477. Created POG AND Node 556 to hold literals between NNF nodes 156 and 111
c Line #477.  Adding edge between POG nodes 500 and 556
c Line #478. Created POG AND Node 557 to hold literals between NNF nodes 155 and 156
c Line #478.  Adding edge between POG nodes 499 and 557
c Line #479. Created POG AND Node 558 to hold literals between NNF nodes 155 and 113
c Line #479.  Adding edge between POG nodes 499 and 558
c Line #480. Created POG AND Node 559 to hold literals between NNF nodes 154 and 155
c Line #480.  Adding edge between POG nodes 498 and 559
c Line #481. Created POG AND Node 560 to hold literals between NNF nodes 154 and 115
c Line #481.  Adding edge between POG nodes 498 and 560
c Line #482. Created POG AND Node 561 to hold literals between NNF nodes 153 and 154
c Line #482.  Adding edge between POG nodes 497 and 561
c Line #483. Created POG AND Node 562 to hold literals between NNF nodes 153 and 117
c Line #483.  Adding edge between POG nodes 497 and 562
c Line #484. Created POG AND Node 563 to hold literals between NNF nodes 152 and 153
c Line #484.  Adding edge between POG nodes 496 and 563
c Line #485. Created POG AND Node 564 to hold literals between NNF nodes 152 and 119
c Line #485.  Adding edge between POG nodes 496 and 564
c Line #486. Created POG AND Node 565 to hold literals between NNF nodes 151 and 152
c Line #486.  Adding edge between POG nodes 495 and 565
c Line #487. Created POG AND Node 566 to hold literals between NNF nodes 151 and 121
c Line #487.  Adding edge between POG nodes 495 and 566
c Line #488. Created POG AND Node 567 to hold literals between NNF nodes 150 and 151
c Line #488.  Adding edge between POG nodes 494 and 567
c Line #489. Created POG AND Node 568 to hold literals between NNF nodes 150 and 123
c Line #489.  Adding edge between POG nodes 494 and 568
c Line #490. Created POG AND Node 569 to hold literals between NNF nodes 149 and 150
c Line #490.  Adding edge between POG nodes 493 and 569
c Line #491. Created POG AND Node 570 to hold literals between NNF nodes 149 and 124
c Line #491.  Adding edge between POG nodes 493 and 570
c Line #492. Created POG AND Node 571 to hold literals between NNF nodes 148 and 149
c Line #492.  Adding edge between POG nodes 492 and 571
c Line #493. Created POG AND Node 572 to hold literals between NNF nodes 148 and 125
c Line #493.  Adding edge between POG nodes 492 and 572
c Line #494. Created POG AND Node 573 to hold literals between NNF nodes 147 and 148
c Line #494.  Adding edge between POG nodes 491 and 573
c Line #495. Created POG AND Node 574 to hold literals between NNF nodes 147 and 126
c Line #495.  Adding edge between POG nodes 491 and 574
c Line #496. Created POG AND Node 575 to hold literals between NNF nodes 146 and 147
c Line #496.  Adding edge between POG nodes 490 and 575
c Line #497. Created POG AND Node 576 to hold literals between NNF nodes 146 and 127
c Line #497.  Adding edge between POG nodes 490 and 576
c Line #498. Created POG AND Node 577 to hold literals between NNF nodes 145 and 146
c Line #498.  Adding edge between POG nodes 489 and 577
c Line #499. Created POG AND Node 578 to hold literals between NNF nodes 145 and 128
c Line #499.  Adding edge between POG nodes 489 and 578
c Line #500. Created POG AND Node 579 to hold literals between NNF nodes 144 and 145
c Line #500.  Adding edge between POG nodes 488 and 579
c Line #501. Created POG AND Node 580 to hold literals between NNF nodes 144 and 129
c Line #501.  Adding edge between POG nodes 488 and 580
c Line #502. Created POG AND Node 581 to hold literals between NNF nodes 143 and 144
c Line #502.  Adding edge between POG nodes 487 and 581
c Line #503. Created POG AND Node 582 to hold literals between NNF nodes 143 and 130
c Line #503.  Adding edge between POG nodes 487 and 582
c Line #504. Created POG AND Node 583 to hold literals between NNF nodes 142 and 143
c Line #504.  Adding edge between POG nodes 486 and 583
c Line #505. Created POG AND Node 584 to hold literals between NNF nodes 142 and 131
c Line #505.  Adding edge between POG nodes 486 and 584
c Line #506. Created POG AND Node 585 to hold literals between NNF nodes 141 and 142
c Line #506.  Adding edge between POG nodes 485 and 585
c Line #507. Created POG AND Node 586 to hold literals between NNF nodes 141 and 132
c Line #507.  Adding edge between POG nodes 485 and 586
c Line #508. Created POG AND Node 587 to hold literals between NNF nodes 140 and 141
c Line #508.  Adding edge between POG nodes 484 and 587
c Line #509. Created POG AND Node 588 to hold literals between NNF nodes 140 and 133
c Line #509.  Adding edge between POG nodes 484 and 588
c Line #510. Created POG AND Node 589 to hold literals between NNF nodes 139 and 140
c Line #510.  Adding edge between POG nodes 483 and 589
c Line #511. Created POG AND Node 590 to hold literals between NNF nodes 139 and 134
c Line #511.  Adding edge between POG nodes 483 and 590
c Line #512. Created POG AND Node 591 to hold literals between NNF nodes 138 and 139
c Line #512.  Adding edge between POG nodes 482 and 591
c Line #513. Created POG AND Node 592 to hold literals between NNF nodes 138 and 135
c Line #513.  Adding edge between POG nodes 482 and 592
c Line #514. Created POG AND Node 593 to hold literals between NNF nodes 137 and 138
c Line #514.  Adding edge between POG nodes 481 and 593
c Line #515. Created POG AND Node 594 to hold literals between NNF nodes 137 and 136
c Line #515.  Adding edge between POG nodes 481 and 594
c Line #516. Created POG AND Node 595 to hold literals between NNF nodes 4 and 137
c Line #516.  Adding edge between POG nodes 83 and 595
c Line #517. Created POG AND Node 596 to hold literals between NNF nodes 3 and 4
c Line #517.  Adding edge between POG nodes 82 and 596
c Setting root literal to 82
c Read D4 NNF file with 517 nodes (174 explicit) and 343 edges
c Before optimization:
N80_FALSE()
N81_TRUE()
N82_OR(596)
N83_OR(480,595)
N84_OR(478,479)
N85_OR(473,477)
N86_OR(471,472)
N87_OR(466,470)
N88_OR(464,465)
N89_OR(459,463)
N90_OR(457,458)
N91_OR(452,456)
N92_OR(450,451)
N93_OR(445,449)
N94_OR(443,444)
N95_OR(438,442)
N96_OR(436,437)
N97_OR(431,435)
N98_OR(429,430)
N99_OR(424,428)
N100_OR(422,423)
N101_OR(417,421)
N102_OR(415,416)
N103_OR(410,414)
N104_OR(408,409)
N105_OR(403,407)
N106_OR(401,402)
N107_OR(396,400)
N108_OR(394,395)
N109_OR(389,393)
N110_OR(387,388)
N111_OR(382,386)
N112_OR(377,381)
N113_OR(372,376)
N114_OR(367,371)
N115_OR(362,366)
N116_OR(357,361)
N117_OR(352,356)
N118_OR(347,351)
N119_OR(342,346)
N120_OR(337,341)
N121_OR(332,336)
N122_OR(327,331)
N123_OR(322,326)
N124_OR(317,321)
N125_OR(312,316)
N126_OR(307,311)
N127_OR(302,306)
N128_OR(297,301)
N129_OR(292,296)
N130_OR(287,291)
N131_OR(282,286)
N132_OR(277,281)
N133_OR(272,276)
N134_OR(267,271)
N135_OR(262,266)
N136_OR(257,261)
N137_OR(252,256)
N138_OR(247,251)
N139_OR(242,246)
N140_OR(237,241)
N141_OR(232,236)
N142_OR(227,231)
N143_OR(222,226)
N144_OR(217,221)
N145_OR(212,216)
N146_OR(207,211)
N147_OR(202,206)
N148_OR(197,201)
N149_OR(192,196)
N150_OR(187,191)
N151_OR(182,186)
N152_OR(177,181)
N153_OR(172,176)
N154_OR(167,171)
N155_OR(162,166)
N156_OR(160,161)
N157_OR(158,159)
N158_AND(-42,-41,81)
N159_AND(42,81)
N160_AND(-3,157)
N161_AND(3,-42,81)
N162_AND(-43,156)
N163_OR(164,165)
N164_AND(-42,81)
N165_AND(42,81)
N166_AND(43,3,163)
N167_AND(-4,155)
N168_OR(169,170)
N169_AND(-43,3,163)
N170_AND(43,-3,157)
N171_AND(4,168)
N172_AND(-44,154)
N173_OR(174,175)
N174_AND(-43,3,163)
N175_AND(43,3,163)
N176_AND(44,4,173)
N177_AND(-5,153)
N178_OR(179,180)
N179_AND(-44,4,173)
N180_AND(44,-4,155)
N181_AND(5,178)
N182_AND(-45,152)
N183_OR(184,185)
N184_AND(-44,3,163)
N185_AND(44,3,163)
N186_AND(45,5,4,183)
N187_AND(-6,151)
N188_OR(189,190)
N189_AND(-45,5,4,183)
N190_AND(45,-5,153)
N191_AND(6,188)
N192_AND(-46,150)
N193_OR(194,195)
N194_AND(-45,5,4,183)
N195_AND(45,5,4,183)
N196_AND(46,6,193)
N197_AND(-7,149)
N198_OR(199,200)
N199_AND(-46,6,193)
N200_AND(46,-6,151)
N201_AND(7,198)
N202_AND(-47,148)
N203_OR(204,205)
N204_AND(-46,5,4,183)
N205_AND(46,5,4,183)
N206_AND(47,7,6,203)
N207_AND(-8,147)
N208_OR(209,210)
N209_AND(-47,7,6,203)
N210_AND(47,-7,149)
N211_AND(8,208)
N212_AND(-48,146)
N213_OR(214,215)
N214_AND(-47,7,6,203)
N215_AND(47,7,6,203)
N216_AND(48,8,213)
N217_AND(-9,145)
N218_OR(219,220)
N219_AND(-48,8,213)
N220_AND(48,-8,147)
N221_AND(9,218)
N222_AND(-49,144)
N223_OR(224,225)
N224_AND(-48,7,6,203)
N225_AND(48,7,6,203)
N226_AND(49,9,8,223)
N227_AND(-10,143)
N228_OR(229,230)
N229_AND(-49,9,8,223)
N230_AND(49,-9,145)
N231_AND(10,228)
N232_AND(-50,142)
N233_OR(234,235)
N234_AND(-49,9,8,223)
N235_AND(49,9,8,223)
N236_AND(50,10,233)
N237_AND(-11,141)
N238_OR(239,240)
N239_AND(-50,10,233)
N240_AND(50,-10,143)
N241_AND(11,238)
N242_AND(-51,140)
N243_OR(244,245)
N244_AND(-50,9,8,223)
N245_AND(50,9,8,223)
N246_AND(51,11,10,243)
N247_AND(-12,139)
N248_OR(249,250)
N249_AND(-51,11,10,243)
N250_AND(51,-11,141)
N251_AND(12,248)
N252_AND(-52,138)
N253_OR(254,255)
N254_AND(-51,11,10,243)
N255_AND(51,11,10,243)
N256_AND(52,12,253)
N257_AND(-13,137)
N258_OR(259,260)
N259_AND(-52,12,253)
N260_AND(52,-12,139)
N261_AND(13,258)
N262_AND(-53,136)
N263_OR(264,265)
N264_AND(-52,11,10,243)
N265_AND(52,11,10,243)
N266_AND(53,13,12,263)
N267_AND(-14,135)
N268_OR(269,270)
N269_AND(-53,13,12,263)
N270_AND(53,-13,137)
N271_AND(14,268)
N272_AND(-54,134)
N273_OR(274,275)
N274_AND(-53,13,12,263)
N275_AND(53,13,12,263)
N276_AND(54,14,273)
N277_AND(-15,133)
N278_OR(279,280)
N279_AND(-54,14,273)
N280_AND(54,-14,135)
N281_AND(15,278)
N282_AND(-55,132)
N283_OR(284,285)
N284_AND(-54,13,12,263)
N285_AND(54,13,12,263)
N286_AND(55,15,14,283)
N287_AND(-16,131)
N288_OR(289,290)
N289_AND(-55,15,14,283)
N290_AND(55,-15,133)
N291_AND(16,288)
N292_AND(-56,130)
N293_OR(294,295)
N294_AND(-55,15,14,283)
N295_AND(55,15,14,283)
N296_AND(56,16,293)
N297_AND(-17,129)
N298_OR(299,300)
N299_AND(-56,16,293)
N300_AND(56,-16,131)
N301_AND(17,298)
N302_AND(-57,128)
N303_OR(304,305)
N304_AND(-56,15,14,283)
N305_AND(56,15,14,283)
N306_AND(57,17,16,303)
N307_AND(-18,127)
N308_OR(309,310)
N309_AND(-57,17,16,303)
N310_AND(57,-17,129)
N311_AND(18,308)
N312_AND(-58,126)
N313_OR(314,315)
N314_AND(-57,17,16,303)
N315_AND(57,17,16,303)
N316_AND(58,18,313)
N317_AND(-19,125)
N318_OR(319,320)
N319_AND(-58,18,313)
N320_AND(58,-18,127)
N321_AND(19,318)
N322_AND(-59,124)
N323_OR(324,325)
N324_AND(-58,17,16,303)
N325_AND(58,17,16,303)
N326_AND(59,19,18,323)
N327_AND(-20,123)
N328_OR(329,330)
N329_AND(-59,19,18,323)
N330_AND(59,-19,125)
N331_AND(20,328)
N332_AND(-60,122)
N333_OR(334,335)
N334_AND(-59,19,18,323)
N335_AND(59,19,18,323)
N336_AND(60,20,333)
N337_AND(-21,121)
N338_OR(339,340)
N339_AND(-60,20,333)
N340_AND(60,-20,123)
N341_AND(21,338)
N342_AND(-61,120)
N343_OR(344,345)
N344_AND(-60,19,18,323)
N345_AND(60,19,18,323)
N346_AND(61,21,20,343)
N347_AND(-22,119)
N348_OR(349,350)
N349_AND(-61,21,20,343)
N350_AND(61,-21,121)
N351_AND(22,348)
N352_AND(-62,118)
N353_OR(354,355)
N354_AND(-61,21,20,343)
N355_AND(61,21,20,343)
N356_AND(62,22,353)
N357_AND(-23,117)
N358_OR(359,360)
N359_AND(-62,22,353)
N360_AND(62,-22,119)
N361_AND(23,358)
N362_AND(-63,116)
N363_OR(364,365)
N364_AND(-62,21,20,343)
N365_AND(62,21,20,343)
N366_AND(63,23,22,363)
N367_AND(-24,115)
N368_OR(369,370)
N369_AND(-63,23,22,363)
N370_AND(63,-23,117)
N371_AND(24,368)
N372_AND(-64,114)
N373_OR(374,375)
N374_AND(-63,23,22,363)
N375_AND(63,23,22,363)
N376_AND(64,24,373)
N377_AND(-25,113)
N378_OR(379,380)
N379_AND(-64,24,373)
N380_AND(64,-24,115)
N381_AND(25,378)
N382_AND(-65,112)
N383_OR(384,385)
N384_AND(-64,23,22,363)
N385_AND(64,23,22,363)
N386_AND(65,25,24,383)
N387_AND(-26,111)
N388_AND(26,80)
N389_AND(-66,110)
N390_OR(391,392)
N391_AND(-65,25,24,383)
N392_AND(65,25,24,383)
N393_AND(66,26,390)
N394_AND(-27,109)
N395_AND(27,80)
N396_AND(-67,108)
N397_OR(398,399)
N398_AND(-66,25,24,383)
N399_AND(66,25,24,383)
N400_AND(67,27,26,397)
N401_AND(-28,107)
N402_AND(28,80)
N403_AND(-68,106)
N404_OR(405,406)
N405_AND(-67,27,26,397)
N406_AND(67,27,26,397)
N407_AND(68,28,404)
N408_AND(-29,105)
N409_AND(29,80)
N410_AND(-69,104)
N411_OR(412,413)
N412_AND(-68,27,26,397)
N413_AND(68,27,26,397)
N414_AND(69,29,28,411)
N415_AND(-30,103)
N416_AND(30,80)
N417_AND(-70,102)
N418_OR(419,420)
N419_AND(-69,29,28,411)
N420_AND(69,29,28,411)
N421_AND(70,30,418)
N422_AND(-31,101)
N423_AND(31,80)
N424_AND(-71,100)
N425_OR(426,427)
N426_AND(-70,29,28,411)
N427_AND(70,29,28,411)
N428_AND(71,31,30,425)
N429_AND(-32,99)
N430_AND(32,80)
N431_AND(-72,98)
N432_OR(433,434)
N433_AND(-71,31,30,425)
N434_AND(71,31,30,425)
N435_AND(72,32,432)
N436_AND(-33,97)
N437_AND(33,80)
N438_AND(-73,96)
N439_OR(440,441)
N440_AND(-72,31,30,425)
N441_AND(72,31,30,425)
N442_AND(73,33,32,439)
N443_AND(-34,95)
N444_AND(34,80)
N445_AND(-74,94)
N446_OR(447,448)
N447_AND(-73,33,32,439)
N448_AND(73,33,32,439)
N449_AND(74,34,446)
N450_AND(-35,93)
N451_AND(35,80)
N452_AND(-75,92)
N453_OR(454,455)
N454_AND(-74,33,32,439)
N455_AND(74,33,32,439)
N456_AND(75,35,34,453)
N457_AND(-36,91)
N458_AND(36,80)
N459_AND(-76,90)
N460_OR(461,462)
N461_AND(-75,35,34,453)
N462_AND(75,35,34,453)
N463_AND(76,36,460)
N464_AND(-37,89)
N465_AND(37,80)
N466_AND(-77,88)
N467_OR(468,469)
N468_AND(-76,35,34,453)
N469_AND(76,35,34,453)
N470_AND(77,37,36,467)
N471_AND(-38,87)
N472_AND(38,80)
N473_AND(-78,86)
N474_OR(475,476)
N475_AND(-77,37,36,467)
N476_AND(77,37,36,467)
N477_AND(78,38,474)
N478_AND(-39,85)
N479_AND(39,80)
N480_AND(-79,2,1,84)
N481_OR(593,594)
N482_OR(591,592)
N483_OR(589,590)
N484_OR(587,588)
N485_OR(585,586)
N486_OR(583,584)
N487_OR(581,582)
N488_OR(579,580)
N489_OR(577,578)
N490_OR(575,576)
N491_OR(573,574)
N492_OR(571,572)
N493_OR(569,570)
N494_OR(567,568)
N495_OR(565,566)
N496_OR(563,564)
N497_OR(561,562)
N498_OR(559,560)
N499_OR(557,558)
N500_OR(555,556)
N501_OR(553,554)
N502_OR(551,552)
N503_OR(549,550)
N504_OR(547,548)
N505_OR(545,546)
N506_OR(543,544)
N507_OR(541,542)
N508_OR(539,540)
N509_OR(537,538)
N510_OR(535,536)
N511_OR(533,534)
N512_OR(531,532)
N513_OR(529,530)
N514_OR(527,528)
N515_OR(525,526)
N516_OR(523,524)
N517_OR(521,522)
N518_OR(519,520)
N519_AND(-2,80)
N520_AND(2,1,81)
N521_AND(-42,518)
N522_AND(42,2,1,81)
N523_AND(-43,3,517)
N524_AND(43,2,1,3,163)
N525_AND(-44,4,516)
N526_AND(44,2,1,4,173)
N527_AND(-45,5,515)
N528_AND(45,2,1,5,4,183)
N529_AND(-46,6,514)
N530_AND(46,2,1,6,193)
N531_AND(-47,7,513)
N532_AND(47,2,1,7,6,203)
N533_AND(-48,8,512)
N534_AND(48,2,1,8,213)
N535_AND(-49,9,511)
N536_AND(49,2,1,9,8,223)
N537_AND(-50,10,510)
N538_AND(50,2,1,10,233)
N539_AND(-51,11,509)
N540_AND(51,2,1,11,10,243)
N541_AND(-52,12,508)
N542_AND(52,2,1,12,253)
N543_AND(-53,13,507)
N544_AND(53,2,1,13,12,263)
N545_AND(-54,14,506)
N546_AND(54,2,1,14,273)
N547_AND(-55,15,505)
N548_AND(55,2,1,15,14,283)
N549_AND(-56,16,504)
N550_AND(56,2,1,16,293)
N551_AND(-57,17,503)
N552_AND(57,2,1,17,16,303)
N553_AND(-58,18,502)
N554_AND(58,2,1,18,313)
N555_AND(-59,19,501)
N556_AND(59,2,1,19,18,323)
N557_AND(-60,20,500)
N558_AND(60,2,1,20,333)
N559_AND(-61,21,499)
N560_AND(61,2,1,21,20,343)
N561_AND(-62,22,498)
N562_AND(62,2,1,22,353)
N563_AND(-63,23,497)
N564_AND(63,2,1,23,22,363)
N565_AND(-64,24,496)
N566_AND(64,2,1,24,373)
N567_AND(-65,25,495)
N568_AND(65,2,1,25,24,383)
N569_AND(-66,26,494)
N570_AND(66,2,1,26,390)
N571_AND(-67,27,493)
N572_AND(67,2,1,27,26,397)
N573_AND(-68,28,492)
N574_AND(68,2,1,28,404)
N575_AND(-69,29,491)
N576_AND(69,2,1,29,28,411)
N577_AND(-70,30,490)
N578_AND(70,2,1,30,418)
N579_AND(-71,31,489)
N580_AND(71,2,1,31,30,425)
N581_AND(-72,32,488)
N582_AND(72,2,1,32,432)
N583_AND(-73,33,487)
N584_AND(73,2,1,33,32,439)
N585_AND(-74,34,486)
N586_AND(74,2,1,34,446)
N587_AND(-75,35,485)
N588_AND(75,2,1,35,34,453)
N589_AND(-76,36,484)
N590_AND(76,2,1,36,460)
N591_AND(-77,37,483)
N592_AND(77,2,1,37,36,467)
N593_AND(-78,38,482)
N594_AND(78,2,1,38,474)
N595_AND(79,39,481)
N596_AND(-40,83)
ROOT 82
c Compressing POG with 517 nodes (517 accessible from root) and root literal 82
c   Converted node N158_AND(-42,-41,81) to N80_AND(-42,-41)
c   Converted node N157_OR(158,159) to N81_OR(80,42)
c   Converted node N160_AND(-3,157) to N82_AND(-3,81)
c   Converted node N161_AND(3,-42,81) to N83_AND(3,-42)
c   Converted node N156_OR(160,161) to N84_OR(82,83)
c   Converted node N162_AND(-43,156) to N85_AND(-43,84)
c   Converted node N163_OR(164,165) to N86_OR(-42,42)
c   Converted node N166_AND(43,3,163) to N87_AND(43,3,86)
c   Converted node N155_OR(162,166) to N88_OR(85,87)
c   Converted node N167_AND(-4,155) to N89_AND(-4,88)
c   Converted node N169_AND(-43,3,163) to N90_AND(-43,3,86)
c   Converted node N170_AND(43,-3,157) to N91_AND(43,-3,81)
c   Converted node N168_OR(169,170) to N92_OR(90,91)
c   Converted node N171_AND(4,168) to N93_AND(4,92)
c   Converted node N154_OR(167,171) to N94_OR(89,93)
c   Converted node N172_AND(-44,154) to N95_AND(-44,94)
c   Converted node N174_AND(-43,3,163) to N96_AND(-43,3,86)
c   Converted node N175_AND(43,3,163) to N97_AND(43,3,86)
c   Converted node N173_OR(174,175) to N98_OR(96,97)
c   Converted node N176_AND(44,4,173) to N99_AND(44,4,98)
c   Converted node N153_OR(172,176) to N100_OR(95,99)
c   Converted node N177_AND(-5,153) to N101_AND(-5,100)
c   Converted node N179_AND(-44,4,173) to N102_AND(-44,4,98)
c   Converted node N180_AND(44,-4,155) to N103_AND(44,-4,88)
c   Converted node N178_OR(179,180) to N104_OR(102,103)
c   Converted node N181_AND(5,178) to N105_AND(5,104)
c   Converted node N152_OR(177,181) to N106_OR(101,105)
c   Converted node N182_AND(-45,152) to N107_AND(-45,106)
c   Converted node N184_AND(-44,3,163) to N108_AND(-44,3,86)
c   Converted node N185_AND(44,3,163) to N109_AND(44,3,86)
c   Converted node N183_OR(184,185) to N110_OR(108,109)
c   Converted node N186_AND(45,5,4,183) to N111_AND(45,5,4,110)
c   Converted node N151_OR(182,186) to N112_OR(107,111)
c   Converted node N187_AND(-6,151) to N113_AND(-6,112)
c   Converted node N189_AND(-45,5,4,183) to N114_AND(-45,5,4,110)
c   Converted node N190_AND(45,-5,153) to N115_AND(45,-5,100)
c   Converted node N188_OR(189,190) to N116_OR(114,115)
c   Converted node N191_AND(6,188) to N117_AND(6,116)
c   Converted node N150_OR(187,191) to N118_OR(113,117)
c   Converted node N192_AND(-46,150) to N119_AND(-46,118)
c   Converted node N194_AND(-45,5,4,183) to N120_AND(-45,5,4,110)
c   Converted node N195_AND(45,5,4,183) to N121_AND(45,5,4,110)
c   Converted node N193_OR(194,195) to N122_OR(120,121)
c   Converted node N196_AND(46,6,193) to N123_AND(46,6,122)
c   Converted node N149_OR(192,196) to N124_OR(119,123)
c   Converted node N197_AND(-7,149) to N125_AND(-7,124)
c   Converted node N199_AND(-46,6,193) to N126_AND(-46,6,122)
c   Converted node N200_AND(46,-6,151) to N127_AND(46,-6,112)
c   Converted node N198_OR(199,200) to N128_OR(126,127)
c   Converted node N201_AND(7,198) to N129_AND(7,128)
c   Converted node N148_OR(197,201) to N130_OR(125,129)
c   Converted node N202_AND(-47,148) to N131_AND(-47,130)
c   Converted node N204_AND(-46,5,4,183) to N132_AND(-46,5,4,110)
c   Converted node N205_AND(46,5,4,183) to N133_AND(46,5,4,110)
c   Converted node N203_OR(204,205) to N134_OR(132,133)
c   Converted node N206_AND(47,7,6,203) to N135_AND(47,7,6,134)
c   Converted node N147_OR(202,206) to N136_OR(131,135)
c   Converted node N207_AND(-8,147) to N137_AND(-8,136)
c   Converted node N209_AND(-47,7,6,203) to N138_AND(-47,7,6,134)
c   Converted node N210_AND(47,-7,149) to N139_AND(47,-7,124)
c   Converted node N208_OR(209,210) to N140_OR(138,139)
c   Converted node N211_AND(8,208) to N141_AND(8,140)
c   Converted node N146_OR(207,211) to N142_OR(137,141)
c   Converted node N212_AND(-48,146) to N143_AND(-48,142)
c   Converted node N214_AND(-47,7,6,203) to N144_AND(-47,7,6,134)
c   Converted node N215_AND(47,7,6,203) to N145_AND(47,7,6,134)
c   Converted node N213_OR(214,215) to N146_OR(144,145)
c   Converted node N216_AND(48,8,213) to N147_AND(48,8,146)
c   Converted node N145_OR(212,216) to N148_OR(143,147)
c   Converted node N217_AND(-9,145) to N149_AND(-9,148)
c   Converted node N219_AND(-48,8,213) to N150_AND(-48,8,146)
c   Converted node N220_AND(48,-8,147) to N151_AND(48,-8,136)
c   Converted node N218_OR(219,220) to N152_OR(150,151)
c   Converted node N221_AND(9,218) to N153_AND(9,152)
c   Converted node N144_OR(217,221) to N154_OR(149,153)
c   Converted node N222_AND(-49,144) to N155_AND(-49,154)
c   Converted node N224_AND(-48,7,6,203) to N156_AND(-48,7,6,134)
c   Converted node N225_AND(48,7,6,203) to N157_AND(48,7,6,134)
c   Converted node N223_OR(224,225) to N158_OR(156,157)
c   Converted node N226_AND(49,9,8,223) to N159_AND(49,9,8,158)
c   Converted node N143_OR(222,226) to N160_OR(155,159)
c   Converted node N227_AND(-10,143) to N161_AND(-10,160)
c   Converted node N229_AND(-49,9,8,223) to N162_AND(-49,9,8,158)
c   Converted node N230_AND(49,-9,145) to N163_AND(49,-9,148)
c   Converted node N228_OR(229,230) to N164_OR(162,163)
c   Converted node N231_AND(10,228) to N165_AND(10,164)
c   Converted node N142_OR(227,231) to N166_OR(161,165)
c   Converted node N232_AND(-50,142) to N167_AND(-50,166)
c   Converted node N234_AND(-49,9,8,223) to N168_AND(-49,9,8,158)
c   Converted node N235_AND(49,9,8,223) to N169_AND(49,9,8,158)
c   Converted node N233_OR(234,235) to N170_OR(168,169)
c   Converted node N236_AND(50,10,233) to N171_AND(50,10,170)
c   Converted node N141_OR(232,236) to N172_OR(167,171)
c   Converted node N237_AND(-11,141) to N173_AND(-11,172)
c   Converted node N239_AND(-50,10,233) to N174_AND(-50,10,170)
c   Converted node N240_AND(50,-10,143) to N175_AND(50,-10,160)
c   Converted node N238_OR(239,240) to N176_OR(174,175)
c   Converted node N241_AND(11,238) to N177_AND(11,176)
c   Converted node N140_OR(237,241) to N178_OR(173,177)
c   Converted node N242_AND(-51,140) to N179_AND(-51,178)
c   Converted node N244_AND(-50,9,8,223) to N180_AND(-50,9,8,158)
c   Converted node N245_AND(50,9,8,223) to N181_AND(50,9,8,158)
c   Converted node N243_OR(244,245) to N182_OR(180,181)
c   Converted node N246_AND(51,11,10,243) to N183_AND(51,11,10,182)
c   Converted node N139_OR(242,246) to N184_OR(179,183)
c   Converted node N247_AND(-12,139) to N185_AND(-12,184)
c   Converted node N249_AND(-51,11,10,243) to N186_AND(-51,11,10,182)
c   Converted node N250_AND(51,-11,141) to N187_AND(51,-11,172)
c   Converted node N248_OR(249,250) to N188_OR(186,187)
c   Converted node N251_AND(12,248) to N189_AND(12,188)
c   Converted node N138_OR(247,251) to N190_OR(185,189)
c   Converted node N252_AND(-52,138) to N191_AND(-52,190)
c   Converted node N254_AND(-51,11,10,243) to N192_AND(-51,11,10,182)
c   Converted node N255_AND(51,11,10,243) to N193_AND(51,11,10,182)
c   Converted node N253_OR(254,255) to N194_OR(192,193)
c   Converted node N256_AND(52,12,253) to N195_AND(52,12,194)
c   Converted node N137_OR(252,256) to N196_OR(191,195)
c   Converted node N257_AND(-13,137) to N197_AND(-13,196)
c   Converted node N259_AND(-52,12,253) to N198_AND(-52,12,194)
c   Converted node N260_AND(52,-12,139) to N199_AND(52,-12,184)
c   Converted node N258_OR(259,260) to N200_OR(198,199)
c   Converted node N261_AND(13,258) to N201_AND(13,200)
c   Converted node N136_OR(257,261) to N202_OR(197,201)
c   Converted node N262_AND(-53,136) to N203_AND(-53,202)
c   Converted node N264_AND(-52,11,10,243) to N204_AND(-52,11,10,182)
c   Converted node N265_AND(52,11,10,243) to N205_AND(52,11,10,182)
c   Converted node N263_OR(264,265) to N206_OR(204,205)
c   Converted node N266_AND(53,13,12,263) to N207_AND(53,13,12,206)
c   Converted node N135_OR(262,266) to N208_OR(203,207)
c   Converted node N267_AND(-14,135) to N209_AND(-14,208)
c   Converted node N269_AND(-53,13,12,263) to N210_AND(-53,13,12,206)
c   Converted node N270_AND(53,-13,137) to N211_AND(53,-13,196)
c   Converted node N268_OR(269,270) to N212_OR(210,211)
c   Converted node N271_AND(14,268) to N213_AND(14,212)
c   Converted node N134_OR(267,271) to N214_OR(209,213)
c   Converted node N272_AND(-54,134) to N215_AND(-54,214)
c   Converted node N274_AND(-53,13,12,263) to N216_AND(-53,13,12,206)
c   Converted node N275_AND(53,13,12,263) to N217_AND(53,13,12,206)
c   Converted node N273_OR(274,275) to N218_OR(216,217)
c   Converted node N276_AND(54,14,273) to N219_AND(54,14,218)
c   Converted node N133_OR(272,276) to N220_OR(215,219)
c   Converted node N277_AND(-15,133) to N221_AND(-15,220)
c   Converted node N279_AND(-54,14,273) to N222_AND(-54,14,218)
c   Converted node N280_AND(54,-14,135) to N223_AND(54,-14,208)
c   Converted node N278_OR(279,280) to N224_OR(222,223)
c   Converted node N281_AND(15,278) to N225_AND(15,224)
c   Converted node N132_OR(277,281) to N226_OR(221,225)
c   Converted node N282_AND(-55,132) to N227_AND(-55,226)
c   Converted node N284_AND(-54,13,12,263) to N228_AND(-54,13,12,206)
c   Converted node N285_AND(54,13,12,263) to N229_AND(54,13,12,206)
c   Converted node N283_OR(284,285) to N230_OR(228,229)
c   Converted node N286_AND(55,15,14,283) to N231_AND(55,15,14,230)
c   Converted node N131_OR(282,286) to N232_OR(227,231)
c   Converted node N287_AND(-16,131) to N233_AND(-16,232)
c   Converted node N289_AND(-55,15,14,283) to N234_AND(-55,15,14,230)
c   Converted node N290_AND(55,-15,133) to N235_AND(55,-15,220)
c   Converted node N288_OR(289,290) to N236_OR(234,235)
c   Converted node N291_AND(16,288) to N237_AND(16,236)
c   Converted node N130_OR(287,291) to N238_OR(233,237)
c   Converted node N292_AND(-56,130) to N239_AND(-56,238)
c   Converted node N294_AND(-55,15,14,283) to N240_AND(-55,15,14,230)
c   Converted node N295_AND(55,15,14,283) to N241_AND(55,15,14,230)
c   Converted node N293_OR(294,295) to N242_OR(240,241)
c   Converted node N296_AND(56,16,293) to N243_AND(56,16,242)
c   Converted node N129_OR(292,296) to N244_OR(239,243)
c   Converted node N297_AND(-17,129) to N245_AND(-17,244)
c   Converted node N299_AND(-56,16,293) to N246_AND(-56,16,242)
c   Converted node N300_AND(56,-16,131) to N247_AND(56,-16,232)
c   Converted node N298_OR(299,300) to N248_OR(246,247)
c   Converted node N301_AND(17,298) to N249_AND(17,248)
c   Converted node N128_OR(297,301) to N250_OR(245,249)
c   Converted node N302_AND(-57,128) to N251_AND(-57,250)
c   Converted node N304_AND(-56,15,14,283) to N252_AND(-56,15,14,230)
c   Converted node N305_AND(56,15,14,283) to N253_AND(56,15,14,230)
c   Converted node N303_OR(304,305) to N254_OR(252,253)
c   Converted node N306_AND(57,17,16,303) to N255_AND(57,17,16,254)
c   Converted node N127_OR(302,306) to N256_OR(251,255)
c   Converted node N307_AND(-18,127) to N257_AND(-18,256)
c   Converted node N309_AND(-57,17,16,303) to N258_AND(-57,17,16,254)
c   Converted node N310_AND(57,-17,129) to N259_AND(57,-17,244)
c   Converted node N308_OR(309,310) to N260_OR(258,259)
c   Converted node N311_AND(18,308) to N261_AND(18,260)
c   Converted node N126_OR(307,311) to N262_OR(257,261)
c   Converted node N312_AND(-58,126) to N263_AND(-58,262)
c   Converted node N314_AND(-57,17,16,303) to N264_AND(-57,17,16,254)
c   Converted node N315_AND(57,17,16,303) to N265_AND(57,17,16,254)
c   Converted node N313_OR(314,315) to N266_OR(264,265)
c   Converted node N316_AND(58,18,313) to N267_AND(58,18,266)
c   Converted node N125_OR(312,316) to N268_OR(263,267)
c   Converted node N317_AND(-19,125) to N269_AND(-19,268)
c   Converted node N319_AND(-58,18,313) to N270_AND(-58,18,266)
c   Converted node N320_AND(58,-18,127) to N271_AND(58,-18,256)
c   Converted node N318_OR(319,320) to N272_OR(270,271)
c   Converted node N321_AND(19,318) to N273_AND(19,272)
c   Converted node N124_OR(317,321) to N274_OR(269,273)
c   Converted node N322_AND(-59,124) to N275_AND(-59,274)
c   Converted node N324_AND(-58,17,16,303) to N276_AND(-58,17,16,254)
c   Converted node N325_AND(58,17,16,303) to N277_AND(58,17,16,254)
c   Converted node N323_OR(324,325) to N278_OR(276,277)
c   Converted node N326_AND(59,19,18,323) to N279_AND(59,19,18,278)
c   Converted node N123_OR(322,326) to N280_OR(275,279)
c   Converted node N327_AND(-20,123) to N281_AND(-20,280)
c   Converted node N329_AND(-59,19,18,323) to N282_AND(-59,19,18,278)
c   Converted node N330_AND(59,-19,125) to N283_AND(59,-19,268)
c   Converted node N328_OR(329,330) to N284_OR(282,283)
c   Converted node N331_AND(20,328) to N285_AND(20,284)
c   Converted node N122_OR(327,331) to N286_OR(281,285)
c   Converted node N332_AND(-60,122) to N287_AND(-60,286)
c   Converted node N334_AND(-59,19,18,323) to N288_AND(-59,19,18,278)
c   Converted node N335_AND(59,19,18,323) to N289_AND(59,19,18,278)
c   Converted node N333_OR(334,335) to N290_OR(288,289)
c   Converted node N336_AND(60,20,333) to N291_AND(60,20,290)
c   Converted node N121_OR(332,336) to N292_OR(287,291)
c   Converted node N337_AND(-21,121) to N293_AND(-21,292)
c   Converted node N339_AND(-60,20,333) to N294_AND(-60,20,290)
c   Converted node N340_AND(60,-20,123) to N295_AND(60,-20,280)
c   Converted node N338_OR(339,340) to N296_OR(294,295)
c   Converted node N341_AND(21,338) to N297_AND(21,296)
c   Converted node N120_OR(337,341) to N298_OR(293,297)
c   Converted node N342_AND(-61,120) to N299_AND(-61,298)
c   Converted node N344_AND(-60,19,18,323) to N300_AND(-60,19,18,278)
c   Converted node N345_AND(60,19,18,323) to N301_AND(60,19,18,278)
c   Converted node N343_OR(344,345) to N302_OR(300,301)
c   Converted node N346_AND(61,21,20,343) to N303_AND(61,21,20,302)
c   Converted node N119_OR(342,346) to N304_OR(299,303)
c   Converted node N347_AND(-22,119) to N305_AND(-22,304)
c   Converted node N349_AND(-61,21,20,343) to N306_AND(-61,21,20,302)
c   Converted node N350_AND(61,-21,121) to N307_AND(61,-21,292)
c   Converted node N348_OR(349,350) to N308_OR(306,307)
c   Converted node N351_AND(22,348) to N309_AND(22,308)
c   Converted node N118_OR(347,351) to N310_OR(305,309)
c   Converted node N352_AND(-62,118) to N311_AND(-62,310)
c   Converted node N354_AND(-61,21,20,343) to N312_AND(-61,21,20,302)
c   Converted node N355_AND(61,21,20,343) to N313_AND(61,21,20,302)
c   Converted node N353_OR(354,355) to N314_OR(312,313)
c   Converted node N356_AND(62,22,353) to N315_AND(62,22,314)
c   Converted node N117_OR(352,356) to N316_OR(311,315)
c   Converted node N357_AND(-23,117) to N317_AND(-23,316)
c   Converted node N359_AND(-62,22,353) to N318_AND(-62,22,314)
c   Converted node N360_AND(62,-22,119) to N319_AND(62,-22,304)
c   Converted node N358_OR(359,360) to N320_OR(318,319)
c   Converted node N361_AND(23,358) to N321_AND(23,320)
c   Converted node N116_OR(357,361) to N322_OR(317,321)
c   Converted node N362_AND(-63,116) to N323_AND(-63,322)
c   Converted node N364_AND(-62,21,20,343) to N324_AND(-62,21,20,302)
c   Converted node N365_AND(62,21,20,343) to N325_AND(62,21,20,302)
c   Converted node N363_OR(364,365) to N326_OR(324,325)
c   Converted node N366_AND(63,23,22,363) to N327_AND(63,23,22,326)
c   Converted node N115_OR(362,366) to N328_OR(323,327)
c   Converted node N367_AND(-24,115) to N329_AND(-24,328)
c   Converted node N369_AND(-63,23,22,363) to N330_AND(-63,23,22,326)
c   Converted node N370_AND(63,-23,117) to N331_AND(63,-23,316)
c   Converted node N368_OR(369,370) to N332_OR(330,331)
c   Converted node N371_AND(24,368) to N333_AND(24,332)
c   Converted node N114_OR(367,371) to N334_OR(329,333)
c   Converted node N372_AND(-64,114) to N335_AND(-64,334)
c   Converted node N374_AND(-63,23,22,363) to N336_AND(-63,23,22,326)
c   Converted node N375_AND(63,23,22,363) to N337_AND(63,23,22,326)
c   Converted node N373_OR(374,375) to N338_OR(336,337)
c   Converted node N376_AND(64,24,373) to N339_AND(64,24,338)
c   Converted node N113_OR(372,376) to N340_OR(335,339)
c   Converted node N377_AND(-25,113) to N341_AND(-25,340)
c   Converted node N379_AND(-64,24,373) to N342_AND(-64,24,338)
c   Converted node N380_AND(64,-24,115) to N343_AND(64,-24,328)
c   Converted node N378_OR(379,380) to N344_OR(342,343)
c   Converted node N381_AND(25,378) to N345_AND(25,344)
c   Converted node N112_OR(377,381) to N346_OR(341,345)
c   Converted node N382_AND(-65,112) to N347_AND(-65,346)
c   Converted node N384_AND(-64,23,22,363) to N348_AND(-64,23,22,326)
c   Converted node N385_AND(64,23,22,363) to N349_AND(64,23,22,326)
c   Converted node N383_OR(384,385) to N350_OR(348,349)
c   Converted node N386_AND(65,25,24,383) to N351_AND(65,25,24,350)
c   Converted node N111_OR(382,386) to N352_OR(347,351)
c   Converted node N387_AND(-26,111) to N353_AND(-26,352)
c   Converted node N388_AND(26,80) to FALSE
c   Node N110_OR(387,388)  maps to 353
c   Converted node N389_AND(-66,110) to N354_AND(-66,353)
c   Converted node N391_AND(-65,25,24,383) to N355_AND(-65,25,24,350)
c   Converted node N392_AND(65,25,24,383) to N356_AND(65,25,24,350)
c   Converted node N390_OR(391,392) to N357_OR(355,356)
c   Converted node N393_AND(66,26,390) to N358_AND(66,26,357)
c   Converted node N109_OR(389,393) to N359_OR(354,358)
c   Converted node N394_AND(-27,109) to N360_AND(-27,359)
c   Converted node N395_AND(27,80) to FALSE
c   Node N108_OR(394,395)  maps to 360
c   Converted node N396_AND(-67,108) to N361_AND(-67,360)
c   Converted node N398_AND(-66,25,24,383) to N362_AND(-66,25,24,350)
c   Converted node N399_AND(66,25,24,383) to N363_AND(66,25,24,350)
c   Converted node N397_OR(398,399) to N364_OR(362,363)
c   Converted node N400_AND(67,27,26,397) to N365_AND(67,27,26,364)
c   Converted node N107_OR(396,400) to N366_OR(361,365)
c   Converted node N401_AND(-28,107) to N367_AND(-28,366)
c   Converted node N402_AND(28,80) to FALSE
c   Node N106_OR(401,402)  maps to 367
c   Converted node N403_AND(-68,106) to N368_AND(-68,367)
c   Converted node N405_AND(-67,27,26,397) to N369_AND(-67,27,26,364)
c   Converted node N406_AND(67,27,26,397) to N370_AND(67,27,26,364)
c   Converted node N404_OR(405,406) to N371_OR(369,370)
c   Converted node N407_AND(68,28,404) to N372_AND(68,28,371)
c   Converted node N105_OR(403,407) to N373_OR(368,372)
c   Converted node N408_AND(-29,105) to N374_AND(-29,373)
c   Converted node N409_AND(29,80) to FALSE
c   Node N104_OR(408,409)  maps to 374
c   Converted node N410_AND(-69,104) to N375_AND(-69,374)
c   Converted node N412_AND(-68,27,26,397) to N376_AND(-68,27,26,364)
c   Converted node N413_AND(68,27,26,397) to N377_AND(68,27,26,364)
c   Converted node N411_OR(412,413) to N378_OR(376,377)
c   Converted node N414_AND(69,29,28,411) to N379_AND(69,29,28,378)
c   Converted node N103_OR(410,414) to N380_OR(375,379)
c   Converted node N415_AND(-30,103) to N381_AND(-30,380)
c   Converted node N416_AND(30,80) to FALSE
c   Node N102_OR(415,416)  maps to 381
c   Converted node N417_AND(-70,102) to N382_AND(-70,381)
c   Converted node N419_AND(-69,29,28,411) to N383_AND(-69,29,28,378)
c   Converted node N420_AND(69,29,28,411) to N384_AND(69,29,28,378)
c   Converted node N418_OR(419,420) to N385_OR(383,384)
c   Converted node N421_AND(70,30,418) to N386_AND(70,30,385)
c   Converted node N101_OR(417,421) to N387_OR(382,386)
c   Converted node N422_AND(-31,101) to N388_AND(-31,387)
c   Converted node N423_AND(31,80) to FALSE
c   Node N100_OR(422,423)  maps to 388
c   Converted node N424_AND(-71,100) to N389_AND(-71,388)
c   Converted node N426_AND(-70,29,28,411) to N390_AND(-70,29,28,378)
c   Converted node N427_AND(70,29,28,411) to N391_AND(70,29,28,378)
c   Converted node N425_OR(426,427) to N392_OR(390,391)
c   Converted node N428_AND(71,31,30,425) to N393_AND(71,31,30,392)
c   Converted node N99_OR(424,428) to N394_OR(389,393)
c   Converted node N429_AND(-32,99) to N395_AND(-32,394)
c   Converted node N430_AND(32,80) to FALSE
c   Node N98_OR(429,430)  maps to 395
c   Converted node N431_AND(-72,98) to N396_AND(-72,395)
c   Converted node N433_AND(-71,31,30,425) to N397_AND(-71,31,30,392)
c   Converted node N434_AND(71,31,30,425) to N398_AND(71,31,30,392)
c   Converted node N432_OR(433,434) to N399_OR(397,398)
c   Converted node N435_AND(72,32,432) to N400_AND(72,32,399)
c   Converted node N97_OR(431,435) to N401_OR(396,400)
c   Converted node N436_AND(-33,97) to N402_AND(-33,401)
c   Converted node N437_AND(33,80) to FALSE
c   Node N96_OR(436,437)  maps to 402
c   Converted node N438_AND(-73,96) to N403_AND(-73,402)
c   Converted node N440_AND(-72,31,30,425) to N404_AND(-72,31,30,392)
c   Converted node N441_AND(72,31,30,425) to N405_AND(72,31,30,392)
c   Converted node N439_OR(440,441) to N406_OR(404,405)
c   Converted node N442_AND(73,33,32,439) to N407_AND(73,33,32,406)
c   Converted node N95_OR(438,442) to N408_OR(403,407)
c   Converted node N443_AND(-34,95) to N409_AND(-34,408)
c   Converted node N444_AND(34,80) to FALSE
c   Node N94_OR(443,444)  maps to 409
c   Converted node N445_AND(-74,94) to N410_AND(-74,409)
c   Converted node N447_AND(-73,33,32,439) to N411_AND(-73,33,32,406)
c   Converted node N448_AND(73,33,32,439) to N412_AND(73,33,32,406)
c   Converted node N446_OR(447,448) to N413_OR(411,412)
c   Converted node N449_AND(74,34,446) to N414_AND(74,34,413)
c   Converted node N93_OR(445,449) to N415_OR(410,414)
c   Converted node N450_AND(-35,93) to N416_AND(-35,415)
c   Converted node N451_AND(35,80) to FALSE
c   Node N92_OR(450,451)  maps to 416
c   Converted node N452_AND(-75,92) to N417_AND(-75,416)
c   Converted node N454_AND(-74,33,32,439) to N418_AND(-74,33,32,406)
c   Converted node N455_AND(74,33,32,439) to N419_AND(74,33,32,406)
c   Converted node N453_OR(454,455) to N420_OR(418,419)
c   Converted node N456_AND(75,35,34,453) to N421_AND(75,35,34,420)
c   Converted node N91_OR(452,456) to N422_OR(417,421)
c   Converted node N457_AND(-36,91) to N423_AND(-36,422)
c   Converted node N458_AND(36,80) to FALSE
c   Node N90_OR(457,458)  maps to 423
c   Converted node N459_AND(-76,90) to N424_AND(-76,423)
c   Converted node N461_AND(-75,35,34,453) to N425_AND(-75,35,34,420)
c   Converted node N462_AND(75,35,34,453) to N426_AND(75,35,34,420)
c   Converted node N460_OR(461,462) to N427_OR(425,426)
c   Converted node N463_AND(76,36,460) to N428_AND(76,36,427)
c   Converted node N89_OR(459,463) to N429_OR(424,428)
c   Converted node N464_AND(-37,89) to N430_AND(-37,429)
c   Converted node N465_AND(37,80) to FALSE
c   Node N88_OR(464,465)  maps to 430
c   Converted node N466_AND(-77,88) to N431_AND(-77,430)
c   Converted node N468_AND(-76,35,34,453) to N432_AND(-76,35,34,420)
c   Converted node N469_AND(76,35,34,453) to N433_AND(76,35,34,420)
c   Converted node N467_OR(468,469) to N434_OR(432,433)
c   Converted node N470_AND(77,37,36,467) to N435_AND(77,37,36,434)
c   Converted node N87_OR(466,470) to N436_OR(431,435)
c   Converted node N471_AND(-38,87) to N437_AND(-38,436)
c   Converted node N472_AND(38,80) to FALSE
c   Node N86_OR(471,472)  maps to 437
c   Converted node N473_AND(-78,86) to N438_AND(-78,437)
c   Converted node N475_AND(-77,37,36,467) to N439_AND(-77,37,36,434)
c   Converted node N476_AND(77,37,36,467) to N440_AND(77,37,36,434)
c   Converted node N474_OR(475,476) to N441_OR(439,440)
c   Converted node N477_AND(78,38,474) to N442_AND(78,38,441)
c   Converted node N85_OR(473,477) to N443_OR(438,442)
c   Converted node N478_AND(-39,85) to N444_AND(-39,443)
c   Converted node N479_AND(39,80) to FALSE
c   Node N84_OR(478,479)  maps to 444
c   Converted node N480_AND(-79,2,1,84) to N445_AND(-79,2,1,444)
c   Converted node N519_AND(-2,80) to FALSE
c   Converted node N520_AND(2,1,81) to N446_AND(2,1)
c   Node N518_OR(519,520)  maps to 446
c   Converted node N521_AND(-42,518) to N447_AND(-42,446)
c   Converted node N522_AND(42,2,1,81) to N448_AND(42,2,1)
c   Converted node N517_OR(521,522) to N449_OR(447,448)
c   Converted node N523_AND(-43,3,517) to N450_AND(-43,3,449)
c   Converted node N524_AND(43,2,1,3,163) to N451_AND(43,2,1,3,86)
c   Converted node N516_OR(523,524) to N452_OR(450,451)
c   Converted node N525_AND(-44,4,516) to N453_AND(-44,4,452)
c   Converted node N526_AND(44,2,1,4,173) to N454_AND(44,2,1,4,98)
c   Converted node N515_OR(525,526) to N455_OR(453,454)
c   Converted node N527_AND(-45,5,515) to N456_AND(-45,5,455)
c   Converted node N528_AND(45,2,1,5,4,183) to N457_AND(45,2,1,5,4,110)
c   Converted node N514_OR(527,528) to N458_OR(456,457)
c   Converted node N529_AND(-46,6,514) to N459_AND(-46,6,458)
c   Converted node N530_AND(46,2,1,6,193) to N460_AND(46,2,1,6,122)
c   Converted node N513_OR(529,530) to N461_OR(459,460)
c   Converted node N531_AND(-47,7,513) to N462_AND(-47,7,461)
c   Converted node N532_AND(47,2,1,7,6,203) to N463_AND(47,2,1,7,6,134)
c   Converted node N512_OR(531,532) to N464_OR(462,463)
c   Converted node N533_AND(-48,8,512) to N465_AND(-48,8,464)
c   Converted node N534_AND(48,2,1,8,213) to N466_AND(48,2,1,8,146)
c   Converted node N511_OR(533,534) to N467_OR(465,466)
c   Converted node N535_AND(-49,9,511) to N468_AND(-49,9,467)
c   Converted node N536_AND(49,2,1,9,8,223) to N469_AND(49,2,1,9,8,158)
c   Converted node N510_OR(535,536) to N470_OR(468,469)
c   Converted node N537_AND(-50,10,510) to N471_AND(-50,10,470)
c   Converted node N538_AND(50,2,1,10,233) to N472_AND(50,2,1,10,170)
c   Converted node N509_OR(537,538) to N473_OR(471,472)
c   Converted node N539_AND(-51,11,509) to N474_AND(-51,11,473)
c   Converted node N540_AND(51,2,1,11,10,243) to N475_AND(51,2,1,11,10,182)
c   Converted node N508_OR(539,540) to N476_OR(474,475)
c   Converted node N541_AND(-52,12,508) to N477_AND(-52,12,476)
c   Converted node N542_AND(52,2,1,12,253) to N478_AND(52,2,1,12,194)
c   Converted node N507_OR(541,542) to N479_OR(477,478)
c   Converted node N543_AND(-53,13,507) to N480_AND(-53,13,479)
c   Converted node N544_AND(53,2,1,13,12,263) to N481_AND(53,2,1,13,12,206)
c   Converted node N506_OR(543,544) to N482_OR(480,481)
c   Converted node N545_AND(-54,14,506) to N483_AND(-54,14,482)
c   Converted node N546_AND(54,2,1,14,273) to N484_AND(54,2,1,14,218)
c   Converted node N505_OR(545,546) to N485_OR(483,484)
c   Converted node N547_AND(-55,15,505) to N486_AND(-55,15,485)
c   Converted node N548_AND(55,2,1,15,14,283) to N487_AND(55,2,1,15,14,230)
c   Converted node N504_OR(547,548) to N488_OR(486,487)
c   Converted node N549_AND(-56,16,504) to N489_AND(-56,16,488)
c   Converted node N550_AND(56,2,1,16,293) to N490_AND(56,2,1,16,242)
c   Converted node N503_OR(549,550) to N491_OR(489,490)
c   Converted node N551_AND(-57,17,503) to N492_AND(-57,17,491)
c   Converted node N552_AND(57,2,1,17,16,303) to N493_AND(57,2,1,17,16,254)
c   Converted node N502_OR(551,552) to N494_OR(492,493)
c   Converted node N553_AND(-58,18,502) to N495_AND(-58,18,494)
c   Converted node N554_AND(58,2,1,18,313) to N496_AND(58,2,1,18,266)
c   Converted node N501_OR(553,554) to N497_OR(495,496)
c   Converted node N555_AND(-59,19,501) to N498_AND(-59,19,497)
c   Converted node N556_AND(59,2,1,19,18,323) to N499_AND(59,2,1,19,18,278)
c   Converted node N500_OR(555,556) to N500_OR(498,499)
c   Converted node N557_AND(-60,20,500) to N501_AND(-60,20,500)
c   Converted node N558_AND(60,2,1,20,333) to N502_AND(60,2,1,20,290)
c   Converted node N499_OR(557,558) to N503_OR(501,502)
c   Converted node N559_AND(-61,21,499) to N504_AND(-61,21,503)
c   Converted node N560_AND(61,2,1,21,20,343) to N505_AND(61,2,1,21,20,302)
c   Converted node N498_OR(559,560) to N506_OR(504,505)
c   Converted node N561_AND(-62,22,498) to N507_AND(-62,22,506)
c   Converted node N562_AND(62,2,1,22,353) to N508_AND(62,2,1,22,314)
c   Converted node N497_OR(561,562) to N509_OR(507,508)
c   Converted node N563_AND(-63,23,497) to N510_AND(-63,23,509)
c   Converted node N564_AND(63,2,1,23,22,363) to N511_AND(63,2,1,23,22,326)
c   Converted node N496_OR(563,564) to N512_OR(510,511)
c   Converted node N565_AND(-64,24,496) to N513_AND(-64,24,512)
c   Converted node N566_AND(64,2,1,24,373) to N514_AND(64,2,1,24,338)
c   Converted node N495_OR(565,566) to N515_OR(513,514)
c   Converted node N567_AND(-65,25,495) to N516_AND(-65,25,515)
c   Converted node N568_AND(65,2,1,25,24,383) to N517_AND(65,2,1,25,24,350)
c   Converted node N494_OR(567,568) to N518_OR(516,517)
c   Converted node N569_AND(-66,26,494) to N519_AND(-66,26,518)
c   Converted node N570_AND(66,2,1,26,390) to N520_AND(66,2,1,26,357)
c   Converted node N493_OR(569,570) to N521_OR(519,520)
c   Converted node N571_AND(-67,27,493) to N522_AND(-67,27,521)
c   Converted node N572_AND(67,2,1,27,26,397) to N523_AND(67,2,1,27,26,364)
c   Converted node N492_OR(571,572) to N524_OR(522,523)
c   Converted node N573_AND(-68,28,492) to N525_AND(-68,28,524)
c   Converted node N574_AND(68,2,1,28,404) to N526_AND(68,2,1,28,371)
c   Converted node N491_OR(573,574) to N527_OR(525,526)
c   Converted node N575_AND(-69,29,491) to N528_AND(-69,29,527)
c   Converted node N576_AND(69,2,1,29,28,411) to N529_AND(69,2,1,29,28,378)
c   Converted node N490_OR(575,576) to N530_OR(528,529)
c   Converted node N577_AND(-70,30,490) to N531_AND(-70,30,530)
c   Converted node N578_AND(70,2,1,30,418) to N532_AND(70,2,1,30,385)
c   Converted node N489_OR(577,578) to N533_OR(531,532)
c   Converted node N579_AND(-71,31,489) to N534_AND(-71,31,533)
c   Converted node N580_AND(71,2,1,31,30,425) to N535_AND(71,2,1,31,30,392)
c   Converted node N488_OR(579,580) to N536_OR(534,535)
c   Converted node N581_AND(-72,32,488) to N537_AND(-72,32,536)
c   Converted node N582_AND(72,2,1,32,432) to N538_AND(72,2,1,32,399)
c   Converted node N487_OR(581,582) to N539_OR(537,538)
c   Converted node N583_AND(-73,33,487) to N540_AND(-73,33,539)
c   Converted node N584_AND(73,2,1,33,32,439) to N541_AND(73,2,1,33,32,406)
c   Converted node N486_OR(583,584) to N542_OR(540,541)
c   Converted node N585_AND(-74,34,486) to N543_AND(-74,34,542)
c   Converted node N586_AND(74,2,1,34,446) to N544_AND(74,2,1,34,413)
c   Converted node N485_OR(585,586) to N545_OR(543,544)
c   Converted node N587_AND(-75,35,485) to N546_AND(-75,35,545)
c   Converted node N588_AND(75,2,1,35,34,453) to N547_AND(75,2,1,35,34,420)
c   Converted node N484_OR(587,588) to N548_OR(546,547)
c   Converted node N589_AND(-76,36,484) to N549_AND(-76,36,548)
c   Converted node N590_AND(76,2,1,36,460) to N550_AND(76,2,1,36,427)
c   Converted node N483_OR(589,590) to N551_OR(549,550)
c   Converted node N591_AND(-77,37,483) to N552_AND(-77,37,551)
c   Converted node N592_AND(77,2,1,37,36,467) to N553_AND(77,2,1,37,36,434)
c   Converted node N482_OR(591,592) to N554_OR(552,553)
c   Converted node N593_AND(-78,38,482) to N555_AND(-78,38,554)
c   Converted node N594_AND(78,2,1,38,474) to N556_AND(78,2,1,38,441)
c   Converted node N481_OR(593,594) to N557_OR(555,556)
c   Converted node N595_AND(79,39,481) to N558_AND(79,39,557)
c   Converted node N83_OR(480,595) to N559_OR(445,558)
c   Converted node N596_AND(-40,83) to N560_AND(-40,559)
c Compressed POG has 481 nodes, root literal 560, and 1851 defining clauses
c Before concretizing:
N80_AND(-42,-41)
N81_OR(80,42)
N82_AND(-3,81)
N83_AND(3,-42)
N84_OR(82,83)
N85_AND(-43,84)
N86_OR(-42,42)
N87_AND(43,3,86)
N88_OR(85,87)
N89_AND(-4,88)
N90_AND(-43,3,86)
N91_AND(43,-3,81)
N92_OR(90,91)
N93_AND(4,92)
N94_OR(89,93)
N95_AND(-44,94)
N96_AND(-43,3,86)
N97_AND(43,3,86)
N98_OR(96,97)
N99_AND(44,4,98)
N100_OR(95,99)
N101_AND(-5,100)
N102_AND(-44,4,98)
N103_AND(44,-4,88)
N104_OR(102,103)
N105_AND(5,104)
N106_OR(101,105)
N107_AND(-45,106)
N108_AND(-44,3,86)
N109_AND(44,3,86)
N110_OR(108,109)
N111_AND(45,5,4,110)
N112_OR(107,111)
N113_AND(-6,112)
N114_AND(-45,5,4,110)
N115_AND(45,-5,100)
N116_OR(114,115)
N117_AND(6,116)
N118_OR(113,117)
N119_AND(-46,118)
N120_AND(-45,5,4,110)
N121_AND(45,5,4,110)
N122_OR(120,121)
N123_AND(46,6,122)
N124_OR(119,123)
N125_AND(-7,124)
N126_AND(-46,6,122)
N127_AND(46,-6,112)
N128_OR(126,127)
N129_AND(7,128)
N130_OR(125,129)
N131_AND(-47,130)
N132_AND(-46,5,4,110)
N133_AND(46,5,4,110)
N134_OR(132,133)
N135_AND(47,7,6,134)
N136_OR(131,135)
N137_AND(-8,136)
N138_AND(-47,7,6,134)
N139_AND(47,-7,124)
N140_OR(138,139)
N141_AND(8,140)
N142_OR(137,141)
N143_AND(-48,142)
N144_AND(-47,7,6,134)
N145_AND(47,7,6,134)
N146_OR(144,145)
N147_AND(48,8,146)
N148_OR(143,147)
N149_AND(-9,148)
N150_AND(-48,8,146)
N151_AND(48,-8,136)
N152_OR(150,151)
N153_AND(9,152)
N154_OR(149,153)
N155_AND(-49,154)
N156_AND(-48,7,6,134)
N157_AND(48,7,6,134)
N158_OR(156,157)
N159_AND(49,9,8,158)
N160_OR(155,159)
N161_AND(-10,160)
N162_AND(-49,9,8,158)
N163_AND(49,-9,148)
N164_OR(162,163)
N165_AND(10,164)
N166_OR(161,165)
N167_AND(-50,166)
N168_AND(-49,9,8,158)
N169_AND(49,9,8,158)
N170_OR(168,169)
N171_AND(50,10,170)
N172_OR(167,171)
N173_AND(-11,172)
N174_AND(-50,10,170)
N175_AND(50,-10,160)
N176_OR(174,175)
N177_AND(11,176)
N178_OR(173,177)
N179_AND(-51,178)
N180_AND(-50,9,8,158)
N181_AND(50,9,8,158)
N182_OR(180,181)
N183_AND(51,11,10,182)
N184_OR(179,183)
N185_AND(-12,184)
N186_AND(-51,11,10,182)
N187_AND(51,-11,172)
N188_OR(186,187)
N189_AND(12,188)
N190_OR(185,189)
N191_AND(-52,190)
N192_AND(-51,11,10,182)
N193_AND(51,11,10,182)
N194_OR(192,193)
N195_AND(52,12,194)
N196_OR(191,195)
N197_AND(-13,196)
N198_AND(-52,12,194)
N199_AND(52,-12,184)
N200_OR(198,199)
N201_AND(13,200)
N202_OR(197,201)
N203_AND(-53,202)
N204_AND(-52,11,10,182)
N205_AND(52,11,10,182)
N206_OR(204,205)
N207_AND(53,13,12,206)
N208_OR(203,207)
N209_AND(-14,208)
N210_AND(-53,13,12,206)
N211_AND(53,-13,196)
N212_OR(210,211)
N213_AND(14,212)
N214_OR(209,213)
N215_AND(-54,214)
N216_AND(-53,13,12,206)
N217_AND(53,13,12,206)
N218_OR(216,217)
N219_AND(54,14,218)
N220_OR(215,219)
N221_AND(-15,220)
N222_AND(-54,14,218)
N223_AND(54,-14,208)
N224_OR(222,223)
N225_AND(15,224)
N226_OR(221,225)
N227_AND(-55,226)
N228_AND(-54,13,12,206)
N229_AND(54,13,12,206)
N230_OR(228,229)
N231_AND(55,15,14,230)
N232_OR(227,231)
N233_AND(-16,232)
N234_AND(-55,15,14,230)
N235_AND(55,-15,220)
N236_OR(234,235)
N237_AND(16,236)
N238_OR(233,237)
N239_AND(-56,238)
N240_AND(-55,15,14,230)
N241_AND(55,15,14,230)
N242_OR(240,241)
N243_AND(56,16,242)
N244_OR(239,243)
N245_AND(-17,244)
N246_AND(-56,16,242)
N247_AND(56,-16,232)
N248_OR(246,247)
N249_AND(17,248)
N250_OR(245,249)
N251_AND(-57,250)
N252_AND(-56,15,14,230)
N253_AND(56,15,14,230)
N254_OR(252,253)
N255_AND(57,17,16,254)
N256_OR(251,255)
N257_AND(-18,256)
N258_AND(-57,17,16,254)
N259_AND(57,-17,244)
N260_OR(258,259)
N261_AND(18,260)
N262_OR(257,261)
N263_AND(-58,262)
N264_AND(-57,17,16,254)
N265_AND(57,17,16,254)
N266_OR(264,265)
N267_AND(58,18,266)
N268_OR(263,267)
N269_AND(-19,268)
N270_AND(-58,18,266)
N271_AND(58,-18,256)
N272_OR(270,271)
N273_AND(19,272)
N274_OR(269,273)
N275_AND(-59,274)
N276_AND(-58,17,16,254)
N277_AND(58,17,16,254)
N278_OR(276,277)
N279_AND(59,19,18,278)
N280_OR(275,279)
N281_AND(-20,280)
N282_AND(-59,19,18,278)
N283_AND(59,-19,268)
N284_OR(282,283)
N285_AND(20,284)
N286_OR(281,285)
N287_AND(-60,286)
N288_AND(-59,19,18,278)
N289_AND(59,19,18,278)
N290_OR(288,289)
N291_AND(60,20,290)
N292_OR(287,291)
N293_AND(-21,292)
N294_AND(-60,20,290)
N295_AND(60,-20,280)
N296_OR(294,295)
N297_AND(21,296)
N298_OR(293,297)
N299_AND(-61,298)
N300_AND(-60,19,18,278)
N301_AND(60,19,18,278)
N302_OR(300,301)
N303_AND(61,21,20,302)
N304_OR(299,303)
N305_AND(-22,304)
N306_AND(-61,21,20,302)
N307_AND(61,-21,292)
N308_OR(306,307)
N309_AND(22,308)
N310_OR(305,309)
N311_AND(-62,310)
N312_AND(-61,21,20,302)
N313_AND(61,21,20,302)
N314_OR(312,313)
N315_AND(62,22,314)
N316_OR(311,315)
N317_AND(-23,316)
N318_AND(-62,22,314)
N319_AND(62,-22,304)
N320_OR(318,319)
N321_AND(23,320)
N322_OR(317,321)
N323_AND(-63,322)
N324_AND(-62,21,20,302)
N325_AND(62,21,20,302)
N326_OR(324,325)
N327_AND(63,23,22,326)
N328_OR(323,327)
N329_AND(-24,328)
N330_AND(-63,23,22,326)
N331_AND(63,-23,316)
N332_OR(330,331)
N333_AND(24,332)
N334_OR(329,333)
N335_AND(-64,334)
N336_AND(-63,23,22,326)
N337_AND(63,23,22,326)
N338_OR(336,337)
N339_AND(64,24,338)
N340_OR(335,339)
N341_AND(-25,340)
N342_AND(-64,24,338)
N343_AND(64,-24,328)
N344_OR(342,343)
N345_AND(25,344)
N346_OR(341,345)
N347_AND(-65,346)
N348_AND(-64,23,22,326)
N349_AND(64,23,22,326)
N350_OR(348,349)
N351_AND(65,25,24,350)
N352_OR(347,351)
N353_AND(-26,352)
N354_AND(-66,353)
N355_AND(-65,25,24,350)
N356_AND(65,25,24,350)
N357_OR(355,356)
N358_AND(66,26,357)
N359_OR(354,358)
N360_AND(-27,359)
N361_AND(-67,360)
N362_AND(-66,25,24,350)
N363_AND(66,25,24,350)
N364_OR(362,363)
N365_AND(67,27,26,364)
N366_OR(361,365)
N367_AND(-28,366)
N368_AND(-68,367)
N369_AND(-67,27,26,364)
N370_AND(67,27,26,364)
N371_OR(369,370)
N372_AND(68,28,371)
N373_OR(368,372)
N374_AND(-29,373)
N375_AND(-69,374)
N376_AND(-68,27,26,364)
N377_AND(68,27,26,364)
N378_OR(376,377)
N379_AND(69,29,28,378)
N380_OR(375,379)
N381_AND(-30,380)
N382_AND(-70,381)
N383_AND(-69,29,28,378)
N384_AND(69,29,28,378)
N385_OR(383,384)
N386_AND(70,30,385)
N387_OR(382,386)
N388_AND(-31,387)
N389_AND(-71,388)
N390_AND(-70,29,28,378)
N391_AND(70,29,28,378)
N392_OR(390,391)
N393_AND(71,31,30,392)
N394_OR(389,393)
N395_AND(-32,394)
N396_AND(-72,395)
N397_AND(-71,31,30,392)
N398_AND(71,31,30,392)
N399_OR(397,398)
N400_AND(72,32,399)
N401_OR(396,400)
N402_AND(-33,401)
N403_AND(-73,402)
N404_AND(-72,31,30,392)
N405_AND(72,31,30,392)
N406_OR(404,405)
N407_AND(73,33,32,406)
N408_OR(403,407)
N409_AND(-34,408)
N410_AND(-74,409)
N411_AND(-73,33,32,406)
N412_AND(73,33,32,406)
N413_OR(411,412)
N414_AND(74,34,413)
N415_OR(410,414)
N416_AND(-35,415)
N417_AND(-75,416)
N418_AND(-74,33,32,406)
N419_AND(74,33,32,406)
N420_OR(418,419)
N421_AND(75,35,34,420)
N422_OR(417,421)
N423_AND(-36,422)
N424_AND(-76,423)
N425_AND(-75,35,34,420)
N426_AND(75,35,34,420)
N427_OR(425,426)
N428_AND(76,36,427)
N429_OR(424,428)
N430_AND(-37,429)
N431_AND(-77,430)
N432_AND(-76,35,34,420)
N433_AND(76,35,34,420)
N434_OR(432,433)
N435_AND(77,37,36,434)
N436_OR(431,435)
N437_AND(-38,436)
N438_AND(-78,437)
N439_AND(-77,37,36,434)
N440_AND(77,37,36,434)
N441_OR(439,440)
N442_AND(78,38,441)
N443_OR(438,442)
N444_AND(-39,443)
N445_AND(-79,2,1,444)
N446_AND(2,1)
N447_AND(-42,446)
N448_AND(42,2,1)
N449_OR(447,448)
N450_AND(-43,3,449)
N451_AND(43,2,1,3,86)
N452_OR(450,451)
N453_AND(-44,4,452)
N454_AND(44,2,1,4,98)
N455_OR(453,454)
N456_AND(-45,5,455)
N457_AND(45,2,1,5,4,110)
N458_OR(456,457)
N459_AND(-46,6,458)
N460_AND(46,2,1,6,122)
N461_OR(459,460)
N462_AND(-47,7,461)
N463_AND(47,2,1,7,6,134)
N464_OR(462,463)
N465_AND(-48,8,464)
N466_AND(48,2,1,8,146)
N467_OR(465,466)
N468_AND(-49,9,467)
N469_AND(49,2,1,9,8,158)
N470_OR(468,469)
N471_AND(-50,10,470)
N472_AND(50,2,1,10,170)
N473_OR(471,472)
N474_AND(-51,11,473)
N475_AND(51,2,1,11,10,182)
N476_OR(474,475)
N477_AND(-52,12,476)
N478_AND(52,2,1,12,194)
N479_OR(477,478)
N480_AND(-53,13,479)
N481_AND(53,2,1,13,12,206)
N482_OR(480,481)
N483_AND(-54,14,482)
N484_AND(54,2,1,14,218)
N485_OR(483,484)
N486_AND(-55,15,485)
N487_AND(55,2,1,15,14,230)
N488_OR(486,487)
N489_AND(-56,16,488)
N490_AND(56,2,1,16,242)
N491_OR(489,490)
N492_AND(-57,17,491)
N493_AND(57,2,1,17,16,254)
N494_OR(492,493)
N495_AND(-58,18,494)
N496_AND(58,2,1,18,266)
N497_OR(495,496)
N498_AND(-59,19,497)
N499_AND(59,2,1,19,18,278)
N500_OR(498,499)
N501_AND(-60,20,500)
N502_AND(60,2,1,20,290)
N503_OR(501,502)
N504_AND(-61,21,503)
N505_AND(61,2,1,21,20,302)
N506_OR(504,505)
N507_AND(-62,22,506)
N508_AND(62,2,1,22,314)
N509_OR(507,508)
N510_AND(-63,23,509)
N511_AND(63,2,1,23,22,326)
N512_OR(510,511)
N513_AND(-64,24,512)
N514_AND(64,2,1,24,338)
N515_OR(513,514)
N516_AND(-65,25,515)
N517_AND(65,2,1,25,24,350)
N518_OR(516,517)
N519_AND(-66,26,518)
N520_AND(66,2,1,26,357)
N521_OR(519,520)
N522_AND(-67,27,521)
N523_AND(67,2,1,27,26,364)
N524_OR(522,523)
N525_AND(-68,28,524)
N526_AND(68,2,1,28,371)
N527_OR(525,526)
N528_AND(-69,29,527)
N529_AND(69,2,1,29,28,378)
N530_OR(528,529)
N531_AND(-70,30,530)
N532_AND(70,2,1,30,385)
N533_OR(531,532)
N534_AND(-71,31,533)
N535_AND(71,2,1,31,30,392)
N536_OR(534,535)
N537_AND(-72,32,536)
N538_AND(72,2,1,32,399)
N539_OR(537,538)
N540_AND(-73,33,539)
N541_AND(73,2,1,33,32,406)
N542_OR(540,541)
N543_AND(-74,34,542)
N544_AND(74,2,1,34,413)
N545_OR(543,544)
N546_AND(-75,35,545)
N547_AND(75,2,1,35,34,420)
N548_OR(546,547)
N549_AND(-76,36,548)
N550_AND(76,2,1,36,427)
N551_OR(549,550)
N552_AND(-77,37,551)
N553_AND(77,2,1,37,36,434)
N554_OR(552,553)
N555_AND(-78,38,554)
N556_AND(78,2,1,38,441)
N557_OR(555,556)
N558_AND(79,39,557)
N559_OR(445,558)
N560_AND(-40,559)
ROOT 560
c GEN: Time = 0.01.  Generated POG representation
c Justifying root literal 560
c GEN: Time = 0.01.  Deleted asserted clauses
c GEN: Time = 0.01.  Deleted input clauses
c 1491 lines written
c GEN: Formula
c GEN:    input variables: 79
c GEN:    input clauses  : 42
c GEN: POG nodes
c GEN:    product   : 324
c GEN:    sum       : 156
c GEN:    node TOTAL: 480
c GEN: Other nodes
c GEN:    aux product: 0
c GEN: Node visits
c GEN:    product/BCP: 0
c GEN:    product/SAT: 0
c GEN:    sum        : 0
c GEN:    visit TOTAL: 0
c GEN: Lemmas
c GEN:    definitions : 0
c GEN:    applications: 0
c GEN:    duplicates  : 0
c GEN:    merged args : 0
c GEN: SAT Problem Clause Counts (0 instances)
c GEN: Clauses
c GEN:    POG definition       : 1851
c GEN:    AUX definition       : 0
c GEN:    product justification: 0
c GEN:    sum justification    : 0
c GEN:    literal justification: 1
c GEN:    lemma application    : 0
c GEN:    monolithic proof     : 0
c GEN:    clause TOTAL         : 1852
c GEN: Time
c GEN:   SAT execution  : 0.00
c GEN:   other execution: 0.01
c GEN:   time TOTAL     : 0.01
GEN LOG: Elapsed time = 0.009 seconds
GEN OUTCOME: normal
GEN: LOG: size ./tree-exa2-40_low.cpog 525 lines 53944 bytes
FCHECK LOG: Running ../../src/cpog-check -v 5 -1 -S ./tree-exa2-40.sdimacs ./tree-exa2-40_low.cpog
FCHECK LOG: Time limit 2500 seconds
File ./tree-exa2-40.sdimacs. Line 1:Read token.  Token = 'p'.  Type = string
File ./tree-exa2-40.sdimacs. Line 1:Read token.  Token = 'cnf'.  Type = string
File ./tree-exa2-40.sdimacs. Line 1:Read token.  Token = '80'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 1:Read token.  Token = '42'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 2:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-40.sdimacs. Line 2:Read token.  Token = '-40'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 2:Starting clause 1
File ./tree-exa2-40.sdimacs. Line 2:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 2:Finished clause.  Full length 2.  Chunk ID 0.  Offset 0 1: -40
File ./tree-exa2-40.sdimacs. Line 3:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-40.sdimacs. Line 3:Read token.  Token = '40'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 3:Starting clause 2
File ./tree-exa2-40.sdimacs. Line 3:Read token.  Token = '79'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 3:Read token.  Token = '-39'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 3:Read token.  Token = '-78'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 3:Read token.  Token = '-38'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 3:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 3:Finished clause.  Full length 6.  Chunk ID 0.  Offset 2 2: 40 79 -39 -78 -38
File ./tree-exa2-40.sdimacs. Line 4:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-40.sdimacs. Line 4:Read token.  Token = '39'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 4:Starting clause 3
File ./tree-exa2-40.sdimacs. Line 4:Read token.  Token = '78'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 4:Read token.  Token = '-38'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 4:Read token.  Token = '-77'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 4:Read token.  Token = '-37'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 4:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 4:Finished clause.  Full length 6.  Chunk ID 0.  Offset 8 3: 39 78 -38 -77 -37
File ./tree-exa2-40.sdimacs. Line 5:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-40.sdimacs. Line 5:Read token.  Token = '38'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 5:Starting clause 4
File ./tree-exa2-40.sdimacs. Line 5:Read token.  Token = '77'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 5:Read token.  Token = '-37'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 5:Read token.  Token = '-76'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 5:Read token.  Token = '-36'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 5:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 5:Finished clause.  Full length 6.  Chunk ID 0.  Offset 14 4: 38 77 -37 -76 -36
File ./tree-exa2-40.sdimacs. Line 6:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-40.sdimacs. Line 6:Read token.  Token = '37'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 6:Starting clause 5
File ./tree-exa2-40.sdimacs. Line 6:Read token.  Token = '76'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 6:Read token.  Token = '-36'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 6:Read token.  Token = '-75'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 6:Read token.  Token = '-35'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 6:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 6:Finished clause.  Full length 6.  Chunk ID 0.  Offset 20 5: 37 76 -36 -75 -35
File ./tree-exa2-40.sdimacs. Line 7:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-40.sdimacs. Line 7:Read token.  Token = '36'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 7:Starting clause 6
File ./tree-exa2-40.sdimacs. Line 7:Read token.  Token = '75'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 7:Read token.  Token = '-35'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 7:Read token.  Token = '-74'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 7:Read token.  Token = '-34'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 7:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 7:Finished clause.  Full length 6.  Chunk ID 0.  Offset 26 6: 36 75 -35 -74 -34
File ./tree-exa2-40.sdimacs. Line 8:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-40.sdimacs. Line 8:Read token.  Token = '35'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 8:Starting clause 7
File ./tree-exa2-40.sdimacs. Line 8:Read token.  Token = '74'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 8:Read token.  Token = '-34'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 8:Read token.  Token = '-73'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 8:Read token.  Token = '-33'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 8:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 8:Finished clause.  Full length 6.  Chunk ID 0.  Offset 32 7: 35 74 -34 -73 -33
File ./tree-exa2-40.sdimacs. Line 9:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-40.sdimacs. Line 9:Read token.  Token = '34'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 9:Starting clause 8
File ./tree-exa2-40.sdimacs. Line 9:Read token.  Token = '73'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 9:Read token.  Token = '-33'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 9:Read token.  Token = '-72'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 9:Read token.  Token = '-32'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 9:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 9:Finished clause.  Full length 6.  Chunk ID 0.  Offset 38 8: 34 73 -33 -72 -32
File ./tree-exa2-40.sdimacs. Line 10:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-40.sdimacs. Line 10:Read token.  Token = '33'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 10:Starting clause 9
File ./tree-exa2-40.sdimacs. Line 10:Read token.  Token = '72'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 10:Read token.  Token = '-32'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 10:Read token.  Token = '-71'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 10:Read token.  Token = '-31'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 10:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 10:Finished clause.  Full length 6.  Chunk ID 0.  Offset 44 9: 33 72 -32 -71 -31
File ./tree-exa2-40.sdimacs. Line 11:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-40.sdimacs. Line 11:Read token.  Token = '32'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 11:Starting clause 10
File ./tree-exa2-40.sdimacs. Line 11:Read token.  Token = '71'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 11:Read token.  Token = '-31'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 11:Read token.  Token = '-70'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 11:Read token.  Token = '-30'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 11:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 11:Finished clause.  Full length 6.  Chunk ID 0.  Offset 50 10: 32 71 -31 -70 -30
File ./tree-exa2-40.sdimacs. Line 12:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-40.sdimacs. Line 12:Read token.  Token = '31'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 12:Starting clause 11
File ./tree-exa2-40.sdimacs. Line 12:Read token.  Token = '70'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 12:Read token.  Token = '-30'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 12:Read token.  Token = '-69'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 12:Read token.  Token = '-29'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 12:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 12:Finished clause.  Full length 6.  Chunk ID 0.  Offset 56 11: 31 70 -30 -69 -29
File ./tree-exa2-40.sdimacs. Line 13:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-40.sdimacs. Line 13:Read token.  Token = '30'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 13:Starting clause 12
File ./tree-exa2-40.sdimacs. Line 13:Read token.  Token = '69'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 13:Read token.  Token = '-29'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 13:Read token.  Token = '-68'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 13:Read token.  Token = '-28'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 13:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 13:Finished clause.  Full length 6.  Chunk ID 0.  Offset 62 12: 30 69 -29 -68 -28
File ./tree-exa2-40.sdimacs. Line 14:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-40.sdimacs. Line 14:Read token.  Token = '29'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 14:Starting clause 13
File ./tree-exa2-40.sdimacs. Line 14:Read token.  Token = '68'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 14:Read token.  Token = '-28'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 14:Read token.  Token = '-67'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 14:Read token.  Token = '-27'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 14:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 14:Finished clause.  Full length 6.  Chunk ID 0.  Offset 68 13: 29 68 -28 -67 -27
File ./tree-exa2-40.sdimacs. Line 15:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-40.sdimacs. Line 15:Read token.  Token = '28'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 15:Starting clause 14
File ./tree-exa2-40.sdimacs. Line 15:Read token.  Token = '67'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 15:Read token.  Token = '-27'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 15:Read token.  Token = '-66'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 15:Read token.  Token = '-26'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 15:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 15:Finished clause.  Full length 6.  Chunk ID 0.  Offset 74 14: 28 67 -27 -66 -26
File ./tree-exa2-40.sdimacs. Line 16:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-40.sdimacs. Line 16:Read token.  Token = '27'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 16:Starting clause 15
File ./tree-exa2-40.sdimacs. Line 16:Read token.  Token = '66'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 16:Read token.  Token = '-26'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 16:Read token.  Token = '-65'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 16:Read token.  Token = '-25'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 16:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 16:Finished clause.  Full length 6.  Chunk ID 0.  Offset 80 15: 27 66 -26 -65 -25
File ./tree-exa2-40.sdimacs. Line 17:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-40.sdimacs. Line 17:Read token.  Token = '26'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 17:Starting clause 16
File ./tree-exa2-40.sdimacs. Line 17:Read token.  Token = '65'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 17:Read token.  Token = '-25'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 17:Read token.  Token = '-64'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 17:Read token.  Token = '-24'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 17:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 17:Finished clause.  Full length 6.  Chunk ID 0.  Offset 86 16: 26 65 -25 -64 -24
File ./tree-exa2-40.sdimacs. Line 18:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-40.sdimacs. Line 18:Read token.  Token = '25'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 18:Starting clause 17
File ./tree-exa2-40.sdimacs. Line 18:Read token.  Token = '64'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 18:Read token.  Token = '-24'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 18:Read token.  Token = '-63'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 18:Read token.  Token = '-23'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 18:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 18:Finished clause.  Full length 6.  Chunk ID 0.  Offset 92 17: 25 64 -24 -63 -23
File ./tree-exa2-40.sdimacs. Line 19:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-40.sdimacs. Line 19:Read token.  Token = '24'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 19:Starting clause 18
File ./tree-exa2-40.sdimacs. Line 19:Read token.  Token = '63'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 19:Read token.  Token = '-23'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 19:Read token.  Token = '-62'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 19:Read token.  Token = '-22'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 19:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 19:Finished clause.  Full length 6.  Chunk ID 0.  Offset 98 18: 24 63 -23 -62 -22
File ./tree-exa2-40.sdimacs. Line 20:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-40.sdimacs. Line 20:Read token.  Token = '23'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 20:Starting clause 19
File ./tree-exa2-40.sdimacs. Line 20:Read token.  Token = '62'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 20:Read token.  Token = '-22'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 20:Read token.  Token = '-61'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 20:Read token.  Token = '-21'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 20:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 20:Finished clause.  Full length 6.  Chunk ID 0.  Offset 104 19: 23 62 -22 -61 -21
File ./tree-exa2-40.sdimacs. Line 21:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-40.sdimacs. Line 21:Read token.  Token = '22'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 21:Starting clause 20
File ./tree-exa2-40.sdimacs. Line 21:Read token.  Token = '61'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 21:Read token.  Token = '-21'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 21:Read token.  Token = '-60'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 21:Read token.  Token = '-20'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 21:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 21:Finished clause.  Full length 6.  Chunk ID 0.  Offset 110 20: 22 61 -21 -60 -20
File ./tree-exa2-40.sdimacs. Line 22:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-40.sdimacs. Line 22:Read token.  Token = '21'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 22:Starting clause 21
File ./tree-exa2-40.sdimacs. Line 22:Read token.  Token = '60'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 22:Read token.  Token = '-20'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 22:Read token.  Token = '-59'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 22:Read token.  Token = '-19'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 22:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 22:Finished clause.  Full length 6.  Chunk ID 0.  Offset 116 21: 21 60 -20 -59 -19
File ./tree-exa2-40.sdimacs. Line 23:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-40.sdimacs. Line 23:Read token.  Token = '20'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 23:Starting clause 22
File ./tree-exa2-40.sdimacs. Line 23:Read token.  Token = '59'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 23:Read token.  Token = '-19'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 23:Read token.  Token = '-58'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 23:Read token.  Token = '-18'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 23:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 23:Finished clause.  Full length 6.  Chunk ID 0.  Offset 122 22: 20 59 -19 -58 -18
File ./tree-exa2-40.sdimacs. Line 24:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-40.sdimacs. Line 24:Read token.  Token = '19'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 24:Starting clause 23
File ./tree-exa2-40.sdimacs. Line 24:Read token.  Token = '58'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 24:Read token.  Token = '-18'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 24:Read token.  Token = '-57'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 24:Read token.  Token = '-17'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 24:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 24:Finished clause.  Full length 6.  Chunk ID 0.  Offset 128 23: 19 58 -18 -57 -17
File ./tree-exa2-40.sdimacs. Line 25:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-40.sdimacs. Line 25:Read token.  Token = '18'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 25:Starting clause 24
File ./tree-exa2-40.sdimacs. Line 25:Read token.  Token = '57'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 25:Read token.  Token = '-17'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 25:Read token.  Token = '-56'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 25:Read token.  Token = '-16'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 25:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 25:Finished clause.  Full length 6.  Chunk ID 0.  Offset 134 24: 18 57 -17 -56 -16
File ./tree-exa2-40.sdimacs. Line 26:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-40.sdimacs. Line 26:Read token.  Token = '17'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 26:Starting clause 25
File ./tree-exa2-40.sdimacs. Line 26:Read token.  Token = '56'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 26:Read token.  Token = '-16'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 26:Read token.  Token = '-55'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 26:Read token.  Token = '-15'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 26:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 26:Finished clause.  Full length 6.  Chunk ID 0.  Offset 140 25: 17 56 -16 -55 -15
File ./tree-exa2-40.sdimacs. Line 27:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-40.sdimacs. Line 27:Read token.  Token = '16'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 27:Starting clause 26
File ./tree-exa2-40.sdimacs. Line 27:Read token.  Token = '55'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 27:Read token.  Token = '-15'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 27:Read token.  Token = '-54'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 27:Read token.  Token = '-14'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 27:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 27:Finished clause.  Full length 6.  Chunk ID 0.  Offset 146 26: 16 55 -15 -54 -14
File ./tree-exa2-40.sdimacs. Line 28:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-40.sdimacs. Line 28:Read token.  Token = '15'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 28:Starting clause 27
File ./tree-exa2-40.sdimacs. Line 28:Read token.  Token = '54'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 28:Read token.  Token = '-14'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 28:Read token.  Token = '-53'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 28:Read token.  Token = '-13'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 28:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 28:Finished clause.  Full length 6.  Chunk ID 0.  Offset 152 27: 15 54 -14 -53 -13
File ./tree-exa2-40.sdimacs. Line 29:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-40.sdimacs. Line 29:Read token.  Token = '14'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 29:Starting clause 28
File ./tree-exa2-40.sdimacs. Line 29:Read token.  Token = '53'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 29:Read token.  Token = '-13'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 29:Read token.  Token = '-52'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 29:Read token.  Token = '-12'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 29:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 29:Finished clause.  Full length 6.  Chunk ID 0.  Offset 158 28: 14 53 -13 -52 -12
File ./tree-exa2-40.sdimacs. Line 30:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-40.sdimacs. Line 30:Read token.  Token = '13'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 30:Starting clause 29
File ./tree-exa2-40.sdimacs. Line 30:Read token.  Token = '52'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 30:Read token.  Token = '-12'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 30:Read token.  Token = '-51'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 30:Read token.  Token = '-11'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 30:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 30:Finished clause.  Full length 6.  Chunk ID 0.  Offset 164 29: 13 52 -12 -51 -11
File ./tree-exa2-40.sdimacs. Line 31:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-40.sdimacs. Line 31:Read token.  Token = '12'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 31:Starting clause 30
File ./tree-exa2-40.sdimacs. Line 31:Read token.  Token = '51'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 31:Read token.  Token = '-11'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 31:Read token.  Token = '-50'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 31:Read token.  Token = '-10'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 31:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 31:Finished clause.  Full length 6.  Chunk ID 0.  Offset 170 30: 12 51 -11 -50 -10
File ./tree-exa2-40.sdimacs. Line 32:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-40.sdimacs. Line 32:Read token.  Token = '11'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 32:Starting clause 31
File ./tree-exa2-40.sdimacs. Line 32:Read token.  Token = '50'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 32:Read token.  Token = '-10'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 32:Read token.  Token = '-49'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 32:Read token.  Token = '-9'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 32:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 32:Finished clause.  Full length 6.  Chunk ID 0.  Offset 176 31: 11 50 -10 -49 -9
File ./tree-exa2-40.sdimacs. Line 33:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-40.sdimacs. Line 33:Read token.  Token = '10'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 33:Starting clause 32
File ./tree-exa2-40.sdimacs. Line 33:Read token.  Token = '49'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 33:Read token.  Token = '-9'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 33:Read token.  Token = '-48'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 33:Read token.  Token = '-8'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 33:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 33:Finished clause.  Full length 6.  Chunk ID 0.  Offset 182 32: 10 49 -9 -48 -8
File ./tree-exa2-40.sdimacs. Line 34:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-40.sdimacs. Line 34:Read token.  Token = '9'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 34:Starting clause 33
File ./tree-exa2-40.sdimacs. Line 34:Read token.  Token = '48'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 34:Read token.  Token = '-8'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 34:Read token.  Token = '-47'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 34:Read token.  Token = '-7'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 34:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 34:Finished clause.  Full length 6.  Chunk ID 0.  Offset 188 33: 9 48 -8 -47 -7
File ./tree-exa2-40.sdimacs. Line 35:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-40.sdimacs. Line 35:Read token.  Token = '8'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 35:Starting clause 34
File ./tree-exa2-40.sdimacs. Line 35:Read token.  Token = '47'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 35:Read token.  Token = '-7'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 35:Read token.  Token = '-46'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 35:Read token.  Token = '-6'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 35:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 35:Finished clause.  Full length 6.  Chunk ID 0.  Offset 194 34: 8 47 -7 -46 -6
File ./tree-exa2-40.sdimacs. Line 36:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-40.sdimacs. Line 36:Read token.  Token = '7'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 36:Starting clause 35
File ./tree-exa2-40.sdimacs. Line 36:Read token.  Token = '46'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 36:Read token.  Token = '-6'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 36:Read token.  Token = '-45'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 36:Read token.  Token = '-5'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 36:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 36:Finished clause.  Full length 6.  Chunk ID 0.  Offset 200 35: 7 46 -6 -45 -5
File ./tree-exa2-40.sdimacs. Line 37:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-40.sdimacs. Line 37:Read token.  Token = '6'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 37:Starting clause 36
File ./tree-exa2-40.sdimacs. Line 37:Read token.  Token = '45'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 37:Read token.  Token = '-5'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 37:Read token.  Token = '-44'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 37:Read token.  Token = '-4'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 37:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 37:Finished clause.  Full length 6.  Chunk ID 0.  Offset 206 36: 6 45 -5 -44 -4
File ./tree-exa2-40.sdimacs. Line 38:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-40.sdimacs. Line 38:Read token.  Token = '5'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 38:Starting clause 37
File ./tree-exa2-40.sdimacs. Line 38:Read token.  Token = '44'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 38:Read token.  Token = '-4'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 38:Read token.  Token = '-43'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 38:Read token.  Token = '-3'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 38:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 38:Finished clause.  Full length 6.  Chunk ID 0.  Offset 212 37: 5 44 -4 -43 -3
File ./tree-exa2-40.sdimacs. Line 39:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-40.sdimacs. Line 39:Read token.  Token = '4'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 39:Starting clause 38
File ./tree-exa2-40.sdimacs. Line 39:Read token.  Token = '43'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 39:Read token.  Token = '-3'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 39:Read token.  Token = '-42'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 39:Read token.  Token = '-2'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 39:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 39:Finished clause.  Full length 6.  Chunk ID 0.  Offset 218 38: 4 43 -3 -42 -2
File ./tree-exa2-40.sdimacs. Line 40:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-40.sdimacs. Line 40:Read token.  Token = '3'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 40:Starting clause 39
File ./tree-exa2-40.sdimacs. Line 40:Read token.  Token = '42'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 40:Read token.  Token = '-2'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 40:Read token.  Token = '-41'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 40:Read token.  Token = '-1'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 40:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 40:Finished clause.  Full length 6.  Chunk ID 0.  Offset 224 39: 3 42 -2 -41 -1
File ./tree-exa2-40.sdimacs. Line 41:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-40.sdimacs. Line 41:Read token.  Token = '2'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 41:Starting clause 40
File ./tree-exa2-40.sdimacs. Line 41:Read token.  Token = '1'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 41:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 41:Finished clause.  Full length 3.  Chunk ID 0.  Offset 230 40: 2 1
File ./tree-exa2-40.sdimacs. Line 42:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-40.sdimacs. Line 42:Read token.  Token = '2'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 42:Starting clause 41
File ./tree-exa2-40.sdimacs. Line 42:Read token.  Token = '-1'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 42:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 42:Finished clause.  Full length 3.  Chunk ID 0.  Offset 233 41: 2 -1
File ./tree-exa2-40.sdimacs. Line 43:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-40.sdimacs. Line 43:Read token.  Token = '-2'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 43:Starting clause 42
File ./tree-exa2-40.sdimacs. Line 43:Read token.  Token = '1'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 43:Read token.  Token = '0'.  Type = integer
File ./tree-exa2-40.sdimacs. Line 43:Finished clause.  Full length 3.  Chunk ID 0.  Offset 236 42: -2 1
File ./tree-exa2-40.sdimacs. Line 44:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-40.sdimacs. Line 44:Read token.  Token = ''.  Type = EOF
CHECK: Read CNF file with 80 variables and 42 clauses
CNF File.  42 clauses
1: -40
2: 40 79 -39 -78 -38
3: 39 78 -38 -77 -37
4: 38 77 -37 -76 -36
5: 37 76 -36 -75 -35
6: 36 75 -35 -74 -34
7: 35 74 -34 -73 -33
8: 34 73 -33 -72 -32
9: 33 72 -32 -71 -31
10: 32 71 -31 -70 -30
11: 31 70 -30 -69 -29
12: 30 69 -29 -68 -28
13: 29 68 -28 -67 -27
14: 28 67 -27 -66 -26
15: 27 66 -26 -65 -25
16: 26 65 -25 -64 -24
17: 25 64 -24 -63 -23
18: 24 63 -23 -62 -22
19: 23 62 -22 -61 -21
20: 22 61 -21 -60 -20
21: 21 60 -20 -59 -19
22: 20 59 -19 -58 -18
23: 19 58 -18 -57 -17
24: 18 57 -17 -56 -16
25: 17 56 -16 -55 -15
26: 16 55 -15 -54 -14
27: 15 54 -14 -53 -13
28: 14 53 -13 -52 -12
29: 13 52 -12 -51 -11
30: 12 51 -11 -50 -10
31: 11 50 -10 -49 -9
32: 10 49 -9 -48 -8
33: 9 48 -8 -47 -7
34: 8 47 -7 -46 -6
35: 7 46 -6 -45 -5
36: 6 45 -5 -44 -4
37: 5 44 -4 -43 -3
38: 4 43 -3 -42 -2
39: 3 42 -2 -41 -1
40: 2 1
41: 2 -1
42: -2 1
File ./tree-exa2-40_low.cpog. Line 1:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-40_low.cpog. Line 2:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-40_low.cpog. Line 3:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-40_low.cpog. Line 4:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-40_low.cpog. Line 5:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-40_low.cpog. Line 6:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-40_low.cpog. Line 7:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-40_low.cpog. Line 8:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-40_low.cpog. Line 9:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-40_low.cpog. Line 10:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-40_low.cpog. Line 11:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-40_low.cpog. Line 12:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-40_low.cpog. Line 13:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-40_low.cpog. Line 14:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-40_low.cpog. Line 15:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-40_low.cpog. Line 16:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-40_low.cpog. Line 17:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-40_low.cpog. Line 18:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-40_low.cpog. Line 19:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-40_low.cpog. Line 20:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-40_low.cpog. Line 21:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-40_low.cpog. Line 22:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-40_low.cpog. Line 23:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-40_low.cpog. Line 24:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-40_low.cpog. Line 25:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-40_low.cpog. Line 26:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-40_low.cpog. Line 27:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-40_low.cpog. Line 28:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-40_low.cpog. Line 29:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-40_low.cpog. Line 30:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-40_low.cpog. Line 31:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-40_low.cpog. Line 32:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-40_low.cpog. Line 33:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-40_low.cpog. Line 34:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-40_low.cpog. Line 35:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-40_low.cpog. Line 36:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-40_low.cpog. Line 37:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-40_low.cpog. Line 38:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-40_low.cpog. Line 39:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-40_low.cpog. Line 40:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-40_low.cpog. Line 41:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-40_low.cpog. Line 42:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-40_low.cpog. Line 43:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-40_low.cpog. Line 44:Read token.  Token = 'r'.  Type = string
File ./tree-exa2-40_low.cpog. Line 44:Read token.  Token = '560'.  Type = integer
File ./tree-exa2-40_low.cpog. Line 44:Root literal declared as 560
File ./tree-exa2-40_low.cpog. Line 45:Read token.  Token = ''.  Type = EOL
File ./tree-exa2-40_low.cpog. Line 45:Read token.  Token = 'c'.  Type = string
File ./tree-exa2-40_low.cpog. Line 46:Read token.  Token = '43'.  Type = integer
File ./tree-exa2-40_low.cpog. Line 46:Read token.  Token = 'p'.  Type = string
File ./tree-exa2-40_low.cpog. Line 46:Read token.  Token = '80'.  Type = integer
ERROR. File ./tree-exa2-40_low.cpog. Line 46. Function node_new. Invalid operation id 80
FCHECK ERROR: Return code = 1
FCHECK LOG: Elapsed time = 0.000 seconds
FCHECK OUTCOME: failed
OVERALL LOG: Elapsed time = 0.014 seconds
OVERALL OUTCOME: failed
